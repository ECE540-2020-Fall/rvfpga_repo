//--------------------------------------------------------------------------------
// Auto-generated by Migen (--------) & LiteX (79ee135f) on 2020-05-12 22:45:37
//--------------------------------------------------------------------------------
module litedram_core(
	output reg serial_tx,
	input wire serial_rx,
	input wire clk,
	input wire rst,
	output wire pll_locked,
	output wire [12:0] ddram_a,
	output wire [2:0] ddram_ba,
	output wire ddram_ras_n,
	output wire ddram_cas_n,
	output wire ddram_we_n,
	output wire ddram_cs_n,
	output wire [1:0] ddram_dm,
	inout wire [15:0] ddram_dq,
	inout wire [1:0] ddram_dqs_p,
	inout wire [1:0] ddram_dqs_n,
	output wire ddram_clk_p,
	output wire ddram_clk_n,
	output wire ddram_cke,
	output wire ddram_odt,
	output wire ddram_reset_n,
	output wire init_done,
	output wire init_error,
	output wire user_clk,
	output wire user_rst,
	input wire user_port_axi_0_awvalid,
	output wire user_port_axi_0_awready,
	input wire [26:0] user_port_axi_0_awaddr,
	input wire [1:0] user_port_axi_0_awburst,
	input wire [7:0] user_port_axi_0_awlen,
	input wire [3:0] user_port_axi_0_awsize,
	input wire [5:0] user_port_axi_0_awid,
	input wire user_port_axi_0_wvalid,
	output wire user_port_axi_0_wready,
	input wire user_port_axi_0_wlast,
	input wire [7:0] user_port_axi_0_wstrb,
	input wire [63:0] user_port_axi_0_wdata,
	output wire user_port_axi_0_bvalid,
	input wire user_port_axi_0_bready,
	output wire [1:0] user_port_axi_0_bresp,
	output wire [5:0] user_port_axi_0_bid,
	input wire user_port_axi_0_arvalid,
	output wire user_port_axi_0_arready,
	input wire [26:0] user_port_axi_0_araddr,
	input wire [1:0] user_port_axi_0_arburst,
	input wire [7:0] user_port_axi_0_arlen,
	input wire [3:0] user_port_axi_0_arsize,
	input wire [5:0] user_port_axi_0_arid,
	output wire user_port_axi_0_rvalid,
	input wire user_port_axi_0_rready,
	output wire user_port_axi_0_rlast,
	output wire [1:0] user_port_axi_0_rresp,
	output wire [63:0] user_port_axi_0_rdata,
	output wire [5:0] user_port_axi_0_rid
);

reg soc_litedramcore_soccontroller_reset_storage = 1'd0;
reg soc_litedramcore_soccontroller_reset_re = 1'd0;
reg [31:0] soc_litedramcore_soccontroller_scratch_storage = 32'd305419896;
reg soc_litedramcore_soccontroller_scratch_re = 1'd0;
wire [31:0] soc_litedramcore_soccontroller_bus_errors_status;
wire soc_litedramcore_soccontroller_bus_errors_we;
wire soc_litedramcore_soccontroller_reset;
wire soc_litedramcore_soccontroller_bus_error;
reg [31:0] soc_litedramcore_soccontroller_bus_errors = 32'd0;
wire soc_litedramcore_serv_reset;
wire [29:0] soc_litedramcore_serv_ibus_adr;
reg [31:0] soc_litedramcore_serv_ibus_dat_w = 32'd0;
wire [31:0] soc_litedramcore_serv_ibus_dat_r;
wire [3:0] soc_litedramcore_serv_ibus_sel;
wire soc_litedramcore_serv_ibus_cyc;
wire soc_litedramcore_serv_ibus_stb;
wire soc_litedramcore_serv_ibus_ack;
reg soc_litedramcore_serv_ibus_we = 1'd0;
reg [2:0] soc_litedramcore_serv_ibus_cti = 3'd0;
reg [1:0] soc_litedramcore_serv_ibus_bte = 2'd0;
wire soc_litedramcore_serv_ibus_err;
wire [29:0] soc_litedramcore_serv_dbus_adr;
wire [31:0] soc_litedramcore_serv_dbus_dat_w;
wire [31:0] soc_litedramcore_serv_dbus_dat_r;
wire [3:0] soc_litedramcore_serv_dbus_sel;
wire soc_litedramcore_serv_dbus_cyc;
wire soc_litedramcore_serv_dbus_stb;
wire soc_litedramcore_serv_dbus_ack;
wire soc_litedramcore_serv_dbus_we;
reg [2:0] soc_litedramcore_serv_dbus_cti = 3'd0;
reg [1:0] soc_litedramcore_serv_dbus_bte = 2'd0;
wire soc_litedramcore_serv_dbus_err;
wire [1:0] soc_litedramcore_serv0;
wire [1:0] soc_litedramcore_serv1;
wire [29:0] soc_litedramcore_litedramcore_ram_bus_adr;
wire [31:0] soc_litedramcore_litedramcore_ram_bus_dat_w;
wire [31:0] soc_litedramcore_litedramcore_ram_bus_dat_r;
wire [3:0] soc_litedramcore_litedramcore_ram_bus_sel;
wire soc_litedramcore_litedramcore_ram_bus_cyc;
wire soc_litedramcore_litedramcore_ram_bus_stb;
reg soc_litedramcore_litedramcore_ram_bus_ack = 1'd0;
wire soc_litedramcore_litedramcore_ram_bus_we;
wire [2:0] soc_litedramcore_litedramcore_ram_bus_cti;
wire [1:0] soc_litedramcore_litedramcore_ram_bus_bte;
reg soc_litedramcore_litedramcore_ram_bus_err = 1'd0;
wire [12:0] soc_litedramcore_litedramcore_adr;
wire [31:0] soc_litedramcore_litedramcore_dat_r;
wire [29:0] soc_litedramcore_ram_bus_ram_bus_adr;
wire [31:0] soc_litedramcore_ram_bus_ram_bus_dat_w;
wire [31:0] soc_litedramcore_ram_bus_ram_bus_dat_r;
wire [3:0] soc_litedramcore_ram_bus_ram_bus_sel;
wire soc_litedramcore_ram_bus_ram_bus_cyc;
wire soc_litedramcore_ram_bus_ram_bus_stb;
reg soc_litedramcore_ram_bus_ram_bus_ack = 1'd0;
wire soc_litedramcore_ram_bus_ram_bus_we;
wire [2:0] soc_litedramcore_ram_bus_ram_bus_cti;
wire [1:0] soc_litedramcore_ram_bus_ram_bus_bte;
reg soc_litedramcore_ram_bus_ram_bus_err = 1'd0;
wire [9:0] soc_litedramcore_ram_adr;
wire [31:0] soc_litedramcore_ram_dat_r;
reg [3:0] soc_litedramcore_ram_we = 4'd0;
wire [31:0] soc_litedramcore_ram_dat_w;
reg [31:0] soc_litedramcore_storage = 32'd4947802;
reg soc_litedramcore_re = 1'd0;
wire soc_litedramcore_sink_valid;
reg soc_litedramcore_sink_ready = 1'd0;
wire soc_litedramcore_sink_first;
wire soc_litedramcore_sink_last;
wire [7:0] soc_litedramcore_sink_payload_data;
reg soc_litedramcore_uart_clk_txen = 1'd0;
reg [31:0] soc_litedramcore_phase_accumulator_tx = 32'd0;
reg [7:0] soc_litedramcore_tx_reg = 8'd0;
reg [3:0] soc_litedramcore_tx_bitcount = 4'd0;
reg soc_litedramcore_tx_busy = 1'd0;
reg soc_litedramcore_source_valid = 1'd0;
wire soc_litedramcore_source_ready;
reg soc_litedramcore_source_first = 1'd0;
reg soc_litedramcore_source_last = 1'd0;
reg [7:0] soc_litedramcore_source_payload_data = 8'd0;
reg soc_litedramcore_uart_clk_rxen = 1'd0;
reg [31:0] soc_litedramcore_phase_accumulator_rx = 32'd0;
wire soc_litedramcore_rx;
reg soc_litedramcore_rx_r = 1'd0;
reg [7:0] soc_litedramcore_rx_reg = 8'd0;
reg [3:0] soc_litedramcore_rx_bitcount = 4'd0;
reg soc_litedramcore_rx_busy = 1'd0;
wire soc_litedramcore_uart_rxtx_re;
wire [7:0] soc_litedramcore_uart_rxtx_r;
wire soc_litedramcore_uart_rxtx_we;
wire [7:0] soc_litedramcore_uart_rxtx_w;
wire soc_litedramcore_uart_txfull_status;
wire soc_litedramcore_uart_txfull_we;
wire soc_litedramcore_uart_rxempty_status;
wire soc_litedramcore_uart_rxempty_we;
wire soc_litedramcore_uart_irq;
wire soc_litedramcore_uart_tx_status;
reg soc_litedramcore_uart_tx_pending = 1'd0;
wire soc_litedramcore_uart_tx_trigger;
reg soc_litedramcore_uart_tx_clear = 1'd0;
reg soc_litedramcore_uart_tx_old_trigger = 1'd0;
wire soc_litedramcore_uart_rx_status;
reg soc_litedramcore_uart_rx_pending = 1'd0;
wire soc_litedramcore_uart_rx_trigger;
reg soc_litedramcore_uart_rx_clear = 1'd0;
reg soc_litedramcore_uart_rx_old_trigger = 1'd0;
wire soc_litedramcore_uart_eventmanager_status_re;
wire [1:0] soc_litedramcore_uart_eventmanager_status_r;
wire soc_litedramcore_uart_eventmanager_status_we;
reg [1:0] soc_litedramcore_uart_eventmanager_status_w = 2'd0;
wire soc_litedramcore_uart_eventmanager_pending_re;
wire [1:0] soc_litedramcore_uart_eventmanager_pending_r;
wire soc_litedramcore_uart_eventmanager_pending_we;
reg [1:0] soc_litedramcore_uart_eventmanager_pending_w = 2'd0;
reg [1:0] soc_litedramcore_uart_eventmanager_storage = 2'd0;
reg soc_litedramcore_uart_eventmanager_re = 1'd0;
wire soc_litedramcore_uart_uart_sink_valid;
wire soc_litedramcore_uart_uart_sink_ready;
wire soc_litedramcore_uart_uart_sink_first;
wire soc_litedramcore_uart_uart_sink_last;
wire [7:0] soc_litedramcore_uart_uart_sink_payload_data;
wire soc_litedramcore_uart_uart_source_valid;
wire soc_litedramcore_uart_uart_source_ready;
wire soc_litedramcore_uart_uart_source_first;
wire soc_litedramcore_uart_uart_source_last;
wire [7:0] soc_litedramcore_uart_uart_source_payload_data;
wire soc_litedramcore_uart_tx_fifo_sink_valid;
wire soc_litedramcore_uart_tx_fifo_sink_ready;
reg soc_litedramcore_uart_tx_fifo_sink_first = 1'd0;
reg soc_litedramcore_uart_tx_fifo_sink_last = 1'd0;
wire [7:0] soc_litedramcore_uart_tx_fifo_sink_payload_data;
wire soc_litedramcore_uart_tx_fifo_source_valid;
wire soc_litedramcore_uart_tx_fifo_source_ready;
wire soc_litedramcore_uart_tx_fifo_source_first;
wire soc_litedramcore_uart_tx_fifo_source_last;
wire [7:0] soc_litedramcore_uart_tx_fifo_source_payload_data;
wire soc_litedramcore_uart_tx_fifo_re;
reg soc_litedramcore_uart_tx_fifo_readable = 1'd0;
wire soc_litedramcore_uart_tx_fifo_syncfifo_we;
wire soc_litedramcore_uart_tx_fifo_syncfifo_writable;
wire soc_litedramcore_uart_tx_fifo_syncfifo_re;
wire soc_litedramcore_uart_tx_fifo_syncfifo_readable;
wire [9:0] soc_litedramcore_uart_tx_fifo_syncfifo_din;
wire [9:0] soc_litedramcore_uart_tx_fifo_syncfifo_dout;
reg [4:0] soc_litedramcore_uart_tx_fifo_level0 = 5'd0;
reg soc_litedramcore_uart_tx_fifo_replace = 1'd0;
reg [3:0] soc_litedramcore_uart_tx_fifo_produce = 4'd0;
reg [3:0] soc_litedramcore_uart_tx_fifo_consume = 4'd0;
reg [3:0] soc_litedramcore_uart_tx_fifo_wrport_adr = 4'd0;
wire [9:0] soc_litedramcore_uart_tx_fifo_wrport_dat_r;
wire soc_litedramcore_uart_tx_fifo_wrport_we;
wire [9:0] soc_litedramcore_uart_tx_fifo_wrport_dat_w;
wire soc_litedramcore_uart_tx_fifo_do_read;
wire [3:0] soc_litedramcore_uart_tx_fifo_rdport_adr;
wire [9:0] soc_litedramcore_uart_tx_fifo_rdport_dat_r;
wire soc_litedramcore_uart_tx_fifo_rdport_re;
wire [4:0] soc_litedramcore_uart_tx_fifo_level1;
wire [7:0] soc_litedramcore_uart_tx_fifo_fifo_in_payload_data;
wire soc_litedramcore_uart_tx_fifo_fifo_in_first;
wire soc_litedramcore_uart_tx_fifo_fifo_in_last;
wire [7:0] soc_litedramcore_uart_tx_fifo_fifo_out_payload_data;
wire soc_litedramcore_uart_tx_fifo_fifo_out_first;
wire soc_litedramcore_uart_tx_fifo_fifo_out_last;
wire soc_litedramcore_uart_rx_fifo_sink_valid;
wire soc_litedramcore_uart_rx_fifo_sink_ready;
wire soc_litedramcore_uart_rx_fifo_sink_first;
wire soc_litedramcore_uart_rx_fifo_sink_last;
wire [7:0] soc_litedramcore_uart_rx_fifo_sink_payload_data;
wire soc_litedramcore_uart_rx_fifo_source_valid;
wire soc_litedramcore_uart_rx_fifo_source_ready;
wire soc_litedramcore_uart_rx_fifo_source_first;
wire soc_litedramcore_uart_rx_fifo_source_last;
wire [7:0] soc_litedramcore_uart_rx_fifo_source_payload_data;
wire soc_litedramcore_uart_rx_fifo_re;
reg soc_litedramcore_uart_rx_fifo_readable = 1'd0;
wire soc_litedramcore_uart_rx_fifo_syncfifo_we;
wire soc_litedramcore_uart_rx_fifo_syncfifo_writable;
wire soc_litedramcore_uart_rx_fifo_syncfifo_re;
wire soc_litedramcore_uart_rx_fifo_syncfifo_readable;
wire [9:0] soc_litedramcore_uart_rx_fifo_syncfifo_din;
wire [9:0] soc_litedramcore_uart_rx_fifo_syncfifo_dout;
reg [4:0] soc_litedramcore_uart_rx_fifo_level0 = 5'd0;
reg soc_litedramcore_uart_rx_fifo_replace = 1'd0;
reg [3:0] soc_litedramcore_uart_rx_fifo_produce = 4'd0;
reg [3:0] soc_litedramcore_uart_rx_fifo_consume = 4'd0;
reg [3:0] soc_litedramcore_uart_rx_fifo_wrport_adr = 4'd0;
wire [9:0] soc_litedramcore_uart_rx_fifo_wrport_dat_r;
wire soc_litedramcore_uart_rx_fifo_wrport_we;
wire [9:0] soc_litedramcore_uart_rx_fifo_wrport_dat_w;
wire soc_litedramcore_uart_rx_fifo_do_read;
wire [3:0] soc_litedramcore_uart_rx_fifo_rdport_adr;
wire [9:0] soc_litedramcore_uart_rx_fifo_rdport_dat_r;
wire soc_litedramcore_uart_rx_fifo_rdport_re;
wire [4:0] soc_litedramcore_uart_rx_fifo_level1;
wire [7:0] soc_litedramcore_uart_rx_fifo_fifo_in_payload_data;
wire soc_litedramcore_uart_rx_fifo_fifo_in_first;
wire soc_litedramcore_uart_rx_fifo_fifo_in_last;
wire [7:0] soc_litedramcore_uart_rx_fifo_fifo_out_payload_data;
wire soc_litedramcore_uart_rx_fifo_fifo_out_first;
wire soc_litedramcore_uart_rx_fifo_fifo_out_last;
reg soc_litedramcore_uart_reset = 1'd0;
reg [31:0] soc_litedramcore_timer_load_storage = 32'd0;
reg soc_litedramcore_timer_load_re = 1'd0;
reg [31:0] soc_litedramcore_timer_reload_storage = 32'd0;
reg soc_litedramcore_timer_reload_re = 1'd0;
reg soc_litedramcore_timer_en_storage = 1'd0;
reg soc_litedramcore_timer_en_re = 1'd0;
reg soc_litedramcore_timer_update_value_storage = 1'd0;
reg soc_litedramcore_timer_update_value_re = 1'd0;
reg [31:0] soc_litedramcore_timer_value_status = 32'd0;
wire soc_litedramcore_timer_value_we;
wire soc_litedramcore_timer_irq;
wire soc_litedramcore_timer_zero_status;
reg soc_litedramcore_timer_zero_pending = 1'd0;
wire soc_litedramcore_timer_zero_trigger;
reg soc_litedramcore_timer_zero_clear = 1'd0;
reg soc_litedramcore_timer_zero_old_trigger = 1'd0;
wire soc_litedramcore_timer_eventmanager_status_re;
wire soc_litedramcore_timer_eventmanager_status_r;
wire soc_litedramcore_timer_eventmanager_status_we;
wire soc_litedramcore_timer_eventmanager_status_w;
wire soc_litedramcore_timer_eventmanager_pending_re;
wire soc_litedramcore_timer_eventmanager_pending_r;
wire soc_litedramcore_timer_eventmanager_pending_we;
wire soc_litedramcore_timer_eventmanager_pending_w;
reg soc_litedramcore_timer_eventmanager_storage = 1'd0;
reg soc_litedramcore_timer_eventmanager_re = 1'd0;
reg [31:0] soc_litedramcore_timer_value = 32'd0;
reg [13:0] soc_litedramcore_interface_adr = 14'd0;
reg soc_litedramcore_interface_we = 1'd0;
wire [7:0] soc_litedramcore_interface_dat_w;
wire [7:0] soc_litedramcore_interface_dat_r;
wire [29:0] soc_litedramcore_bus_wishbone_adr;
wire [31:0] soc_litedramcore_bus_wishbone_dat_w;
wire [31:0] soc_litedramcore_bus_wishbone_dat_r;
wire [3:0] soc_litedramcore_bus_wishbone_sel;
wire soc_litedramcore_bus_wishbone_cyc;
wire soc_litedramcore_bus_wishbone_stb;
reg soc_litedramcore_bus_wishbone_ack = 1'd0;
wire soc_litedramcore_bus_wishbone_we;
wire [2:0] soc_litedramcore_bus_wishbone_cti;
wire [1:0] soc_litedramcore_bus_wishbone_bte;
reg soc_litedramcore_bus_wishbone_err = 1'd0;
wire sys_clk;
wire sys_rst;
wire sys2x_clk;
wire sys2x_dqs_clk;
wire iodelay_clk;
wire iodelay_rst;
wire soc_sys_pll_reset;
wire soc_sys_pll_locked;
wire soc_s7pll0_clkin;
wire soc_s7pll0_clkout0;
wire soc_s7pll0_clkout_buf0;
wire soc_s7pll0_clkout1;
wire soc_s7pll0_clkout_buf1;
wire soc_s7pll0_clkout2;
wire soc_s7pll0_clkout_buf2;
wire soc_iodelay_pll_reset;
wire soc_iodelay_pll_locked;
wire soc_s7pll1_clkin;
wire soc_s7pll1_clkout;
wire soc_s7pll1_clkout_buf;
reg [3:0] soc_reset_counter = 4'd15;
reg soc_ic_reset = 1'd1;
reg [4:0] soc_a7ddrphy_half_sys8x_taps_storage = 5'd16;
reg soc_a7ddrphy_half_sys8x_taps_re = 1'd0;
reg soc_a7ddrphy_wlevel_en_storage = 1'd0;
reg soc_a7ddrphy_wlevel_en_re = 1'd0;
wire soc_a7ddrphy_wlevel_strobe_re;
wire soc_a7ddrphy_wlevel_strobe_r;
wire soc_a7ddrphy_wlevel_strobe_we;
reg soc_a7ddrphy_wlevel_strobe_w = 1'd0;
wire soc_a7ddrphy_cdly_rst_re;
wire soc_a7ddrphy_cdly_rst_r;
wire soc_a7ddrphy_cdly_rst_we;
reg soc_a7ddrphy_cdly_rst_w = 1'd0;
wire soc_a7ddrphy_cdly_inc_re;
wire soc_a7ddrphy_cdly_inc_r;
wire soc_a7ddrphy_cdly_inc_we;
reg soc_a7ddrphy_cdly_inc_w = 1'd0;
reg [1:0] soc_a7ddrphy_dly_sel_storage = 2'd0;
reg soc_a7ddrphy_dly_sel_re = 1'd0;
wire soc_a7ddrphy_rdly_dq_rst_re;
wire soc_a7ddrphy_rdly_dq_rst_r;
wire soc_a7ddrphy_rdly_dq_rst_we;
reg soc_a7ddrphy_rdly_dq_rst_w = 1'd0;
wire soc_a7ddrphy_rdly_dq_inc_re;
wire soc_a7ddrphy_rdly_dq_inc_r;
wire soc_a7ddrphy_rdly_dq_inc_we;
reg soc_a7ddrphy_rdly_dq_inc_w = 1'd0;
wire soc_a7ddrphy_rdly_dq_bitslip_rst_re;
wire soc_a7ddrphy_rdly_dq_bitslip_rst_r;
wire soc_a7ddrphy_rdly_dq_bitslip_rst_we;
reg soc_a7ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
wire soc_a7ddrphy_rdly_dq_bitslip_re;
wire soc_a7ddrphy_rdly_dq_bitslip_r;
wire soc_a7ddrphy_rdly_dq_bitslip_we;
reg soc_a7ddrphy_rdly_dq_bitslip_w = 1'd0;
wire [12:0] soc_a7ddrphy_dfi_p0_address;
wire [2:0] soc_a7ddrphy_dfi_p0_bank;
wire soc_a7ddrphy_dfi_p0_cas_n;
wire soc_a7ddrphy_dfi_p0_cs_n;
wire soc_a7ddrphy_dfi_p0_ras_n;
wire soc_a7ddrphy_dfi_p0_we_n;
wire soc_a7ddrphy_dfi_p0_cke;
wire soc_a7ddrphy_dfi_p0_odt;
wire soc_a7ddrphy_dfi_p0_reset_n;
wire soc_a7ddrphy_dfi_p0_act_n;
wire [31:0] soc_a7ddrphy_dfi_p0_wrdata;
wire soc_a7ddrphy_dfi_p0_wrdata_en;
wire [3:0] soc_a7ddrphy_dfi_p0_wrdata_mask;
wire soc_a7ddrphy_dfi_p0_rddata_en;
reg [31:0] soc_a7ddrphy_dfi_p0_rddata = 32'd0;
reg soc_a7ddrphy_dfi_p0_rddata_valid = 1'd0;
wire [12:0] soc_a7ddrphy_dfi_p1_address;
wire [2:0] soc_a7ddrphy_dfi_p1_bank;
wire soc_a7ddrphy_dfi_p1_cas_n;
wire soc_a7ddrphy_dfi_p1_cs_n;
wire soc_a7ddrphy_dfi_p1_ras_n;
wire soc_a7ddrphy_dfi_p1_we_n;
wire soc_a7ddrphy_dfi_p1_cke;
wire soc_a7ddrphy_dfi_p1_odt;
wire soc_a7ddrphy_dfi_p1_reset_n;
wire soc_a7ddrphy_dfi_p1_act_n;
wire [31:0] soc_a7ddrphy_dfi_p1_wrdata;
wire soc_a7ddrphy_dfi_p1_wrdata_en;
wire [3:0] soc_a7ddrphy_dfi_p1_wrdata_mask;
wire soc_a7ddrphy_dfi_p1_rddata_en;
reg [31:0] soc_a7ddrphy_dfi_p1_rddata = 32'd0;
reg soc_a7ddrphy_dfi_p1_rddata_valid = 1'd0;
reg [12:0] soc_a7ddrphy_dfi_p2_address = 13'd0;
reg [2:0] soc_a7ddrphy_dfi_p2_bank = 3'd0;
reg soc_a7ddrphy_dfi_p2_cas_n = 1'd1;
reg soc_a7ddrphy_dfi_p2_cs_n = 1'd1;
reg soc_a7ddrphy_dfi_p2_ras_n = 1'd1;
reg soc_a7ddrphy_dfi_p2_we_n = 1'd1;
reg soc_a7ddrphy_dfi_p2_cke = 1'd0;
reg soc_a7ddrphy_dfi_p2_odt = 1'd0;
reg soc_a7ddrphy_dfi_p2_reset_n = 1'd0;
reg [31:0] soc_a7ddrphy_dfi_p2_wrdata = 32'd0;
reg [3:0] soc_a7ddrphy_dfi_p2_wrdata_mask = 4'd0;
reg [31:0] soc_a7ddrphy_dfi_p2_rddata = 32'd0;
reg soc_a7ddrphy_dfi_p2_rddata_valid = 1'd0;
reg [12:0] soc_a7ddrphy_dfi_p3_address = 13'd0;
reg [2:0] soc_a7ddrphy_dfi_p3_bank = 3'd0;
reg soc_a7ddrphy_dfi_p3_cas_n = 1'd1;
reg soc_a7ddrphy_dfi_p3_cs_n = 1'd1;
reg soc_a7ddrphy_dfi_p3_ras_n = 1'd1;
reg soc_a7ddrphy_dfi_p3_we_n = 1'd1;
reg soc_a7ddrphy_dfi_p3_cke = 1'd0;
reg soc_a7ddrphy_dfi_p3_odt = 1'd0;
reg soc_a7ddrphy_dfi_p3_reset_n = 1'd0;
reg [31:0] soc_a7ddrphy_dfi_p3_wrdata = 32'd0;
reg [3:0] soc_a7ddrphy_dfi_p3_wrdata_mask = 4'd0;
reg [31:0] soc_a7ddrphy_dfi_p3_rddata = 32'd0;
reg soc_a7ddrphy_dfi_p3_rddata_valid = 1'd0;
wire soc_a7ddrphy_sd_clk_se_nodelay;
reg soc_a7ddrphy_dqs_oe = 1'd0;
reg soc_a7ddrphy_dqs_oe_delayed = 1'd0;
wire soc_a7ddrphy_dqspattern0;
wire soc_a7ddrphy_dqspattern1;
reg [7:0] soc_a7ddrphy_dqspattern_o0 = 8'd0;
reg [7:0] soc_a7ddrphy_dqspattern_o1 = 8'd0;
wire [1:0] soc_a7ddrphy_dqs_i;
wire [1:0] soc_a7ddrphy_dqs_i_delayed;
wire soc_a7ddrphy_dqs_o_no_delay0;
wire soc_a7ddrphy_dqs_t0;
wire soc_a7ddrphy0;
wire soc_a7ddrphy_dqs_o_no_delay1;
wire soc_a7ddrphy_dqs_t1;
wire soc_a7ddrphy1;
wire soc_a7ddrphy_dq_oe;
reg soc_a7ddrphy_dq_oe_delayed = 1'd0;
wire soc_a7ddrphy_dq_o_nodelay0;
wire soc_a7ddrphy_dq_i_nodelay0;
wire soc_a7ddrphy_dq_i_delayed0;
wire soc_a7ddrphy_dq_t0;
wire [7:0] soc_a7ddrphy_dq_i_data0;
wire [7:0] soc_a7ddrphy_bitslip0_i;
reg [7:0] soc_a7ddrphy_bitslip0_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip0_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip0_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay1;
wire soc_a7ddrphy_dq_i_nodelay1;
wire soc_a7ddrphy_dq_i_delayed1;
wire soc_a7ddrphy_dq_t1;
wire [7:0] soc_a7ddrphy_dq_i_data1;
wire [7:0] soc_a7ddrphy_bitslip1_i;
reg [7:0] soc_a7ddrphy_bitslip1_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip1_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip1_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay2;
wire soc_a7ddrphy_dq_i_nodelay2;
wire soc_a7ddrphy_dq_i_delayed2;
wire soc_a7ddrphy_dq_t2;
wire [7:0] soc_a7ddrphy_dq_i_data2;
wire [7:0] soc_a7ddrphy_bitslip2_i;
reg [7:0] soc_a7ddrphy_bitslip2_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip2_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip2_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay3;
wire soc_a7ddrphy_dq_i_nodelay3;
wire soc_a7ddrphy_dq_i_delayed3;
wire soc_a7ddrphy_dq_t3;
wire [7:0] soc_a7ddrphy_dq_i_data3;
wire [7:0] soc_a7ddrphy_bitslip3_i;
reg [7:0] soc_a7ddrphy_bitslip3_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip3_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip3_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay4;
wire soc_a7ddrphy_dq_i_nodelay4;
wire soc_a7ddrphy_dq_i_delayed4;
wire soc_a7ddrphy_dq_t4;
wire [7:0] soc_a7ddrphy_dq_i_data4;
wire [7:0] soc_a7ddrphy_bitslip4_i;
reg [7:0] soc_a7ddrphy_bitslip4_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip4_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip4_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay5;
wire soc_a7ddrphy_dq_i_nodelay5;
wire soc_a7ddrphy_dq_i_delayed5;
wire soc_a7ddrphy_dq_t5;
wire [7:0] soc_a7ddrphy_dq_i_data5;
wire [7:0] soc_a7ddrphy_bitslip5_i;
reg [7:0] soc_a7ddrphy_bitslip5_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip5_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip5_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay6;
wire soc_a7ddrphy_dq_i_nodelay6;
wire soc_a7ddrphy_dq_i_delayed6;
wire soc_a7ddrphy_dq_t6;
wire [7:0] soc_a7ddrphy_dq_i_data6;
wire [7:0] soc_a7ddrphy_bitslip6_i;
reg [7:0] soc_a7ddrphy_bitslip6_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip6_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip6_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay7;
wire soc_a7ddrphy_dq_i_nodelay7;
wire soc_a7ddrphy_dq_i_delayed7;
wire soc_a7ddrphy_dq_t7;
wire [7:0] soc_a7ddrphy_dq_i_data7;
wire [7:0] soc_a7ddrphy_bitslip7_i;
reg [7:0] soc_a7ddrphy_bitslip7_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip7_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip7_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay8;
wire soc_a7ddrphy_dq_i_nodelay8;
wire soc_a7ddrphy_dq_i_delayed8;
wire soc_a7ddrphy_dq_t8;
wire [7:0] soc_a7ddrphy_dq_i_data8;
wire [7:0] soc_a7ddrphy_bitslip8_i;
reg [7:0] soc_a7ddrphy_bitslip8_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip8_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip8_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay9;
wire soc_a7ddrphy_dq_i_nodelay9;
wire soc_a7ddrphy_dq_i_delayed9;
wire soc_a7ddrphy_dq_t9;
wire [7:0] soc_a7ddrphy_dq_i_data9;
wire [7:0] soc_a7ddrphy_bitslip9_i;
reg [7:0] soc_a7ddrphy_bitslip9_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip9_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip9_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay10;
wire soc_a7ddrphy_dq_i_nodelay10;
wire soc_a7ddrphy_dq_i_delayed10;
wire soc_a7ddrphy_dq_t10;
wire [7:0] soc_a7ddrphy_dq_i_data10;
wire [7:0] soc_a7ddrphy_bitslip10_i;
reg [7:0] soc_a7ddrphy_bitslip10_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip10_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip10_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay11;
wire soc_a7ddrphy_dq_i_nodelay11;
wire soc_a7ddrphy_dq_i_delayed11;
wire soc_a7ddrphy_dq_t11;
wire [7:0] soc_a7ddrphy_dq_i_data11;
wire [7:0] soc_a7ddrphy_bitslip11_i;
reg [7:0] soc_a7ddrphy_bitslip11_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip11_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip11_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay12;
wire soc_a7ddrphy_dq_i_nodelay12;
wire soc_a7ddrphy_dq_i_delayed12;
wire soc_a7ddrphy_dq_t12;
wire [7:0] soc_a7ddrphy_dq_i_data12;
wire [7:0] soc_a7ddrphy_bitslip12_i;
reg [7:0] soc_a7ddrphy_bitslip12_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip12_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip12_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay13;
wire soc_a7ddrphy_dq_i_nodelay13;
wire soc_a7ddrphy_dq_i_delayed13;
wire soc_a7ddrphy_dq_t13;
wire [7:0] soc_a7ddrphy_dq_i_data13;
wire [7:0] soc_a7ddrphy_bitslip13_i;
reg [7:0] soc_a7ddrphy_bitslip13_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip13_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip13_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay14;
wire soc_a7ddrphy_dq_i_nodelay14;
wire soc_a7ddrphy_dq_i_delayed14;
wire soc_a7ddrphy_dq_t14;
wire [7:0] soc_a7ddrphy_dq_i_data14;
wire [7:0] soc_a7ddrphy_bitslip14_i;
reg [7:0] soc_a7ddrphy_bitslip14_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip14_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip14_r = 16'd0;
wire soc_a7ddrphy_dq_o_nodelay15;
wire soc_a7ddrphy_dq_i_nodelay15;
wire soc_a7ddrphy_dq_i_delayed15;
wire soc_a7ddrphy_dq_t15;
wire [7:0] soc_a7ddrphy_dq_i_data15;
wire [7:0] soc_a7ddrphy_bitslip15_i;
reg [7:0] soc_a7ddrphy_bitslip15_o = 8'd0;
reg [2:0] soc_a7ddrphy_bitslip15_value = 3'd0;
reg [15:0] soc_a7ddrphy_bitslip15_r = 16'd0;
wire [7:0] soc_a7ddrphy_rddata_en;
reg [7:0] soc_a7ddrphy_rddata_en_last = 8'd0;
wire [2:0] soc_a7ddrphy_wrdata_en;
reg [2:0] soc_a7ddrphy_wrdata_en_last = 3'd0;
wire [12:0] soc_sdram_inti_p0_address;
wire [2:0] soc_sdram_inti_p0_bank;
reg soc_sdram_inti_p0_cas_n = 1'd1;
reg soc_sdram_inti_p0_cs_n = 1'd1;
reg soc_sdram_inti_p0_ras_n = 1'd1;
reg soc_sdram_inti_p0_we_n = 1'd1;
wire soc_sdram_inti_p0_cke;
wire soc_sdram_inti_p0_odt;
wire soc_sdram_inti_p0_reset_n;
reg soc_sdram_inti_p0_act_n = 1'd1;
wire [31:0] soc_sdram_inti_p0_wrdata;
wire soc_sdram_inti_p0_wrdata_en;
wire [3:0] soc_sdram_inti_p0_wrdata_mask;
wire soc_sdram_inti_p0_rddata_en;
reg [31:0] soc_sdram_inti_p0_rddata = 32'd0;
reg soc_sdram_inti_p0_rddata_valid = 1'd0;
wire [12:0] soc_sdram_inti_p1_address;
wire [2:0] soc_sdram_inti_p1_bank;
reg soc_sdram_inti_p1_cas_n = 1'd1;
reg soc_sdram_inti_p1_cs_n = 1'd1;
reg soc_sdram_inti_p1_ras_n = 1'd1;
reg soc_sdram_inti_p1_we_n = 1'd1;
wire soc_sdram_inti_p1_cke;
wire soc_sdram_inti_p1_odt;
wire soc_sdram_inti_p1_reset_n;
reg soc_sdram_inti_p1_act_n = 1'd1;
wire [31:0] soc_sdram_inti_p1_wrdata;
wire soc_sdram_inti_p1_wrdata_en;
wire [3:0] soc_sdram_inti_p1_wrdata_mask;
wire soc_sdram_inti_p1_rddata_en;
reg [31:0] soc_sdram_inti_p1_rddata = 32'd0;
reg soc_sdram_inti_p1_rddata_valid = 1'd0;
wire [12:0] soc_sdram_slave_p0_address;
wire [2:0] soc_sdram_slave_p0_bank;
wire soc_sdram_slave_p0_cas_n;
wire soc_sdram_slave_p0_cs_n;
wire soc_sdram_slave_p0_ras_n;
wire soc_sdram_slave_p0_we_n;
wire soc_sdram_slave_p0_cke;
wire soc_sdram_slave_p0_odt;
wire soc_sdram_slave_p0_reset_n;
wire soc_sdram_slave_p0_act_n;
wire [31:0] soc_sdram_slave_p0_wrdata;
wire soc_sdram_slave_p0_wrdata_en;
wire [3:0] soc_sdram_slave_p0_wrdata_mask;
wire soc_sdram_slave_p0_rddata_en;
reg [31:0] soc_sdram_slave_p0_rddata = 32'd0;
reg soc_sdram_slave_p0_rddata_valid = 1'd0;
wire [12:0] soc_sdram_slave_p1_address;
wire [2:0] soc_sdram_slave_p1_bank;
wire soc_sdram_slave_p1_cas_n;
wire soc_sdram_slave_p1_cs_n;
wire soc_sdram_slave_p1_ras_n;
wire soc_sdram_slave_p1_we_n;
wire soc_sdram_slave_p1_cke;
wire soc_sdram_slave_p1_odt;
wire soc_sdram_slave_p1_reset_n;
wire soc_sdram_slave_p1_act_n;
wire [31:0] soc_sdram_slave_p1_wrdata;
wire soc_sdram_slave_p1_wrdata_en;
wire [3:0] soc_sdram_slave_p1_wrdata_mask;
wire soc_sdram_slave_p1_rddata_en;
reg [31:0] soc_sdram_slave_p1_rddata = 32'd0;
reg soc_sdram_slave_p1_rddata_valid = 1'd0;
reg [12:0] soc_sdram_master_p0_address = 13'd0;
reg [2:0] soc_sdram_master_p0_bank = 3'd0;
reg soc_sdram_master_p0_cas_n = 1'd1;
reg soc_sdram_master_p0_cs_n = 1'd1;
reg soc_sdram_master_p0_ras_n = 1'd1;
reg soc_sdram_master_p0_we_n = 1'd1;
reg soc_sdram_master_p0_cke = 1'd0;
reg soc_sdram_master_p0_odt = 1'd0;
reg soc_sdram_master_p0_reset_n = 1'd0;
reg soc_sdram_master_p0_act_n = 1'd1;
reg [31:0] soc_sdram_master_p0_wrdata = 32'd0;
reg soc_sdram_master_p0_wrdata_en = 1'd0;
reg [3:0] soc_sdram_master_p0_wrdata_mask = 4'd0;
reg soc_sdram_master_p0_rddata_en = 1'd0;
wire [31:0] soc_sdram_master_p0_rddata;
wire soc_sdram_master_p0_rddata_valid;
reg [12:0] soc_sdram_master_p1_address = 13'd0;
reg [2:0] soc_sdram_master_p1_bank = 3'd0;
reg soc_sdram_master_p1_cas_n = 1'd1;
reg soc_sdram_master_p1_cs_n = 1'd1;
reg soc_sdram_master_p1_ras_n = 1'd1;
reg soc_sdram_master_p1_we_n = 1'd1;
reg soc_sdram_master_p1_cke = 1'd0;
reg soc_sdram_master_p1_odt = 1'd0;
reg soc_sdram_master_p1_reset_n = 1'd0;
reg soc_sdram_master_p1_act_n = 1'd1;
reg [31:0] soc_sdram_master_p1_wrdata = 32'd0;
reg soc_sdram_master_p1_wrdata_en = 1'd0;
reg [3:0] soc_sdram_master_p1_wrdata_mask = 4'd0;
reg soc_sdram_master_p1_rddata_en = 1'd0;
wire [31:0] soc_sdram_master_p1_rddata;
wire soc_sdram_master_p1_rddata_valid;
reg [3:0] soc_sdram_storage = 4'd0;
reg soc_sdram_re = 1'd0;
reg [5:0] soc_sdram_phaseinjector0_command_storage = 6'd0;
reg soc_sdram_phaseinjector0_command_re = 1'd0;
wire soc_sdram_phaseinjector0_command_issue_re;
wire soc_sdram_phaseinjector0_command_issue_r;
wire soc_sdram_phaseinjector0_command_issue_we;
reg soc_sdram_phaseinjector0_command_issue_w = 1'd0;
reg [12:0] soc_sdram_phaseinjector0_address_storage = 13'd0;
reg soc_sdram_phaseinjector0_address_re = 1'd0;
reg [2:0] soc_sdram_phaseinjector0_baddress_storage = 3'd0;
reg soc_sdram_phaseinjector0_baddress_re = 1'd0;
reg [31:0] soc_sdram_phaseinjector0_wrdata_storage = 32'd0;
reg soc_sdram_phaseinjector0_wrdata_re = 1'd0;
reg [31:0] soc_sdram_phaseinjector0_status = 32'd0;
wire soc_sdram_phaseinjector0_we;
reg [5:0] soc_sdram_phaseinjector1_command_storage = 6'd0;
reg soc_sdram_phaseinjector1_command_re = 1'd0;
wire soc_sdram_phaseinjector1_command_issue_re;
wire soc_sdram_phaseinjector1_command_issue_r;
wire soc_sdram_phaseinjector1_command_issue_we;
reg soc_sdram_phaseinjector1_command_issue_w = 1'd0;
reg [12:0] soc_sdram_phaseinjector1_address_storage = 13'd0;
reg soc_sdram_phaseinjector1_address_re = 1'd0;
reg [2:0] soc_sdram_phaseinjector1_baddress_storage = 3'd0;
reg soc_sdram_phaseinjector1_baddress_re = 1'd0;
reg [31:0] soc_sdram_phaseinjector1_wrdata_storage = 32'd0;
reg soc_sdram_phaseinjector1_wrdata_re = 1'd0;
reg [31:0] soc_sdram_phaseinjector1_status = 32'd0;
wire soc_sdram_phaseinjector1_we;
wire soc_sdram_interface_bank0_valid;
wire soc_sdram_interface_bank0_ready;
wire soc_sdram_interface_bank0_we;
wire [20:0] soc_sdram_interface_bank0_addr;
wire soc_sdram_interface_bank0_lock;
wire soc_sdram_interface_bank0_wdata_ready;
wire soc_sdram_interface_bank0_rdata_valid;
wire soc_sdram_interface_bank1_valid;
wire soc_sdram_interface_bank1_ready;
wire soc_sdram_interface_bank1_we;
wire [20:0] soc_sdram_interface_bank1_addr;
wire soc_sdram_interface_bank1_lock;
wire soc_sdram_interface_bank1_wdata_ready;
wire soc_sdram_interface_bank1_rdata_valid;
wire soc_sdram_interface_bank2_valid;
wire soc_sdram_interface_bank2_ready;
wire soc_sdram_interface_bank2_we;
wire [20:0] soc_sdram_interface_bank2_addr;
wire soc_sdram_interface_bank2_lock;
wire soc_sdram_interface_bank2_wdata_ready;
wire soc_sdram_interface_bank2_rdata_valid;
wire soc_sdram_interface_bank3_valid;
wire soc_sdram_interface_bank3_ready;
wire soc_sdram_interface_bank3_we;
wire [20:0] soc_sdram_interface_bank3_addr;
wire soc_sdram_interface_bank3_lock;
wire soc_sdram_interface_bank3_wdata_ready;
wire soc_sdram_interface_bank3_rdata_valid;
wire soc_sdram_interface_bank4_valid;
wire soc_sdram_interface_bank4_ready;
wire soc_sdram_interface_bank4_we;
wire [20:0] soc_sdram_interface_bank4_addr;
wire soc_sdram_interface_bank4_lock;
wire soc_sdram_interface_bank4_wdata_ready;
wire soc_sdram_interface_bank4_rdata_valid;
wire soc_sdram_interface_bank5_valid;
wire soc_sdram_interface_bank5_ready;
wire soc_sdram_interface_bank5_we;
wire [20:0] soc_sdram_interface_bank5_addr;
wire soc_sdram_interface_bank5_lock;
wire soc_sdram_interface_bank5_wdata_ready;
wire soc_sdram_interface_bank5_rdata_valid;
wire soc_sdram_interface_bank6_valid;
wire soc_sdram_interface_bank6_ready;
wire soc_sdram_interface_bank6_we;
wire [20:0] soc_sdram_interface_bank6_addr;
wire soc_sdram_interface_bank6_lock;
wire soc_sdram_interface_bank6_wdata_ready;
wire soc_sdram_interface_bank6_rdata_valid;
wire soc_sdram_interface_bank7_valid;
wire soc_sdram_interface_bank7_ready;
wire soc_sdram_interface_bank7_we;
wire [20:0] soc_sdram_interface_bank7_addr;
wire soc_sdram_interface_bank7_lock;
wire soc_sdram_interface_bank7_wdata_ready;
wire soc_sdram_interface_bank7_rdata_valid;
reg [63:0] soc_sdram_interface_wdata = 64'd0;
reg [7:0] soc_sdram_interface_wdata_we = 8'd0;
wire [63:0] soc_sdram_interface_rdata;
reg [12:0] soc_sdram_dfi_p0_address = 13'd0;
reg [2:0] soc_sdram_dfi_p0_bank = 3'd0;
reg soc_sdram_dfi_p0_cas_n = 1'd1;
reg soc_sdram_dfi_p0_cs_n = 1'd1;
reg soc_sdram_dfi_p0_ras_n = 1'd1;
reg soc_sdram_dfi_p0_we_n = 1'd1;
wire soc_sdram_dfi_p0_cke;
wire soc_sdram_dfi_p0_odt;
wire soc_sdram_dfi_p0_reset_n;
reg soc_sdram_dfi_p0_act_n = 1'd1;
wire [31:0] soc_sdram_dfi_p0_wrdata;
reg soc_sdram_dfi_p0_wrdata_en = 1'd0;
wire [3:0] soc_sdram_dfi_p0_wrdata_mask;
reg soc_sdram_dfi_p0_rddata_en = 1'd0;
wire [31:0] soc_sdram_dfi_p0_rddata;
wire soc_sdram_dfi_p0_rddata_valid;
reg [12:0] soc_sdram_dfi_p1_address = 13'd0;
reg [2:0] soc_sdram_dfi_p1_bank = 3'd0;
reg soc_sdram_dfi_p1_cas_n = 1'd1;
reg soc_sdram_dfi_p1_cs_n = 1'd1;
reg soc_sdram_dfi_p1_ras_n = 1'd1;
reg soc_sdram_dfi_p1_we_n = 1'd1;
wire soc_sdram_dfi_p1_cke;
wire soc_sdram_dfi_p1_odt;
wire soc_sdram_dfi_p1_reset_n;
reg soc_sdram_dfi_p1_act_n = 1'd1;
wire [31:0] soc_sdram_dfi_p1_wrdata;
reg soc_sdram_dfi_p1_wrdata_en = 1'd0;
wire [3:0] soc_sdram_dfi_p1_wrdata_mask;
reg soc_sdram_dfi_p1_rddata_en = 1'd0;
wire [31:0] soc_sdram_dfi_p1_rddata;
wire soc_sdram_dfi_p1_rddata_valid;
reg soc_sdram_cmd_valid = 1'd0;
reg soc_sdram_cmd_ready = 1'd0;
reg soc_sdram_cmd_last = 1'd0;
reg [12:0] soc_sdram_cmd_payload_a = 13'd0;
reg [2:0] soc_sdram_cmd_payload_ba = 3'd0;
reg soc_sdram_cmd_payload_cas = 1'd0;
reg soc_sdram_cmd_payload_ras = 1'd0;
reg soc_sdram_cmd_payload_we = 1'd0;
reg soc_sdram_cmd_payload_is_read = 1'd0;
reg soc_sdram_cmd_payload_is_write = 1'd0;
wire soc_sdram_wants_refresh;
wire soc_sdram_timer_wait;
wire soc_sdram_timer_done0;
wire [9:0] soc_sdram_timer_count0;
wire soc_sdram_timer_done1;
reg [9:0] soc_sdram_timer_count1 = 10'd781;
wire soc_sdram_postponer_req_i;
reg soc_sdram_postponer_req_o = 1'd0;
reg soc_sdram_postponer_count = 1'd0;
reg soc_sdram_sequencer_start0 = 1'd0;
wire soc_sdram_sequencer_done0;
wire soc_sdram_sequencer_start1;
reg soc_sdram_sequencer_done1 = 1'd0;
reg [4:0] soc_sdram_sequencer_counter = 5'd0;
reg soc_sdram_sequencer_count = 1'd0;
wire soc_sdram_bankmachine0_req_valid;
wire soc_sdram_bankmachine0_req_ready;
wire soc_sdram_bankmachine0_req_we;
wire [20:0] soc_sdram_bankmachine0_req_addr;
wire soc_sdram_bankmachine0_req_lock;
reg soc_sdram_bankmachine0_req_wdata_ready = 1'd0;
reg soc_sdram_bankmachine0_req_rdata_valid = 1'd0;
wire soc_sdram_bankmachine0_refresh_req;
reg soc_sdram_bankmachine0_refresh_gnt = 1'd0;
reg soc_sdram_bankmachine0_cmd_valid = 1'd0;
reg soc_sdram_bankmachine0_cmd_ready = 1'd0;
reg [12:0] soc_sdram_bankmachine0_cmd_payload_a = 13'd0;
wire [2:0] soc_sdram_bankmachine0_cmd_payload_ba;
reg soc_sdram_bankmachine0_cmd_payload_cas = 1'd0;
reg soc_sdram_bankmachine0_cmd_payload_ras = 1'd0;
reg soc_sdram_bankmachine0_cmd_payload_we = 1'd0;
reg soc_sdram_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg soc_sdram_bankmachine0_cmd_payload_is_read = 1'd0;
reg soc_sdram_bankmachine0_cmd_payload_is_write = 1'd0;
reg soc_sdram_bankmachine0_auto_precharge = 1'd0;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
reg soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_first = 1'd0;
reg soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_last = 1'd0;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_source_ready;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_source_first;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_source_last;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
wire [20:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
wire [23:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
wire [23:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
reg [4:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_level = 5'd0;
reg soc_sdram_bankmachine0_cmd_buffer_lookahead_replace = 1'd0;
reg [3:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_produce = 4'd0;
reg [3:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_consume = 4'd0;
reg [3:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr = 4'd0;
wire [23:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_we;
wire [23:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_do_read;
wire [3:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr;
wire [23:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
wire soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
wire soc_sdram_bankmachine0_cmd_buffer_sink_valid;
wire soc_sdram_bankmachine0_cmd_buffer_sink_ready;
wire soc_sdram_bankmachine0_cmd_buffer_sink_first;
wire soc_sdram_bankmachine0_cmd_buffer_sink_last;
wire soc_sdram_bankmachine0_cmd_buffer_sink_payload_we;
wire [20:0] soc_sdram_bankmachine0_cmd_buffer_sink_payload_addr;
reg soc_sdram_bankmachine0_cmd_buffer_source_valid = 1'd0;
wire soc_sdram_bankmachine0_cmd_buffer_source_ready;
reg soc_sdram_bankmachine0_cmd_buffer_source_first = 1'd0;
reg soc_sdram_bankmachine0_cmd_buffer_source_last = 1'd0;
reg soc_sdram_bankmachine0_cmd_buffer_source_payload_we = 1'd0;
reg [20:0] soc_sdram_bankmachine0_cmd_buffer_source_payload_addr = 21'd0;
reg [12:0] soc_sdram_bankmachine0_row = 13'd0;
reg soc_sdram_bankmachine0_row_opened = 1'd0;
wire soc_sdram_bankmachine0_row_hit;
reg soc_sdram_bankmachine0_row_open = 1'd0;
reg soc_sdram_bankmachine0_row_close = 1'd0;
reg soc_sdram_bankmachine0_row_col_n_addr_sel = 1'd0;
wire soc_sdram_bankmachine0_twtpcon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine0_twtpcon_ready = 1'd1;
reg [1:0] soc_sdram_bankmachine0_twtpcon_count = 2'd0;
wire soc_sdram_bankmachine0_trccon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine0_trccon_ready = 1'd1;
wire soc_sdram_bankmachine0_trascon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine0_trascon_ready = 1'd1;
wire soc_sdram_bankmachine1_req_valid;
wire soc_sdram_bankmachine1_req_ready;
wire soc_sdram_bankmachine1_req_we;
wire [20:0] soc_sdram_bankmachine1_req_addr;
wire soc_sdram_bankmachine1_req_lock;
reg soc_sdram_bankmachine1_req_wdata_ready = 1'd0;
reg soc_sdram_bankmachine1_req_rdata_valid = 1'd0;
wire soc_sdram_bankmachine1_refresh_req;
reg soc_sdram_bankmachine1_refresh_gnt = 1'd0;
reg soc_sdram_bankmachine1_cmd_valid = 1'd0;
reg soc_sdram_bankmachine1_cmd_ready = 1'd0;
reg [12:0] soc_sdram_bankmachine1_cmd_payload_a = 13'd0;
wire [2:0] soc_sdram_bankmachine1_cmd_payload_ba;
reg soc_sdram_bankmachine1_cmd_payload_cas = 1'd0;
reg soc_sdram_bankmachine1_cmd_payload_ras = 1'd0;
reg soc_sdram_bankmachine1_cmd_payload_we = 1'd0;
reg soc_sdram_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg soc_sdram_bankmachine1_cmd_payload_is_read = 1'd0;
reg soc_sdram_bankmachine1_cmd_payload_is_write = 1'd0;
reg soc_sdram_bankmachine1_auto_precharge = 1'd0;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
reg soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_first = 1'd0;
reg soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_last = 1'd0;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_source_ready;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_source_first;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_source_last;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
wire [20:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
wire [23:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
wire [23:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
reg [4:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_level = 5'd0;
reg soc_sdram_bankmachine1_cmd_buffer_lookahead_replace = 1'd0;
reg [3:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_produce = 4'd0;
reg [3:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_consume = 4'd0;
reg [3:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr = 4'd0;
wire [23:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_we;
wire [23:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_do_read;
wire [3:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr;
wire [23:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
wire soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
wire soc_sdram_bankmachine1_cmd_buffer_sink_valid;
wire soc_sdram_bankmachine1_cmd_buffer_sink_ready;
wire soc_sdram_bankmachine1_cmd_buffer_sink_first;
wire soc_sdram_bankmachine1_cmd_buffer_sink_last;
wire soc_sdram_bankmachine1_cmd_buffer_sink_payload_we;
wire [20:0] soc_sdram_bankmachine1_cmd_buffer_sink_payload_addr;
reg soc_sdram_bankmachine1_cmd_buffer_source_valid = 1'd0;
wire soc_sdram_bankmachine1_cmd_buffer_source_ready;
reg soc_sdram_bankmachine1_cmd_buffer_source_first = 1'd0;
reg soc_sdram_bankmachine1_cmd_buffer_source_last = 1'd0;
reg soc_sdram_bankmachine1_cmd_buffer_source_payload_we = 1'd0;
reg [20:0] soc_sdram_bankmachine1_cmd_buffer_source_payload_addr = 21'd0;
reg [12:0] soc_sdram_bankmachine1_row = 13'd0;
reg soc_sdram_bankmachine1_row_opened = 1'd0;
wire soc_sdram_bankmachine1_row_hit;
reg soc_sdram_bankmachine1_row_open = 1'd0;
reg soc_sdram_bankmachine1_row_close = 1'd0;
reg soc_sdram_bankmachine1_row_col_n_addr_sel = 1'd0;
wire soc_sdram_bankmachine1_twtpcon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine1_twtpcon_ready = 1'd1;
reg [1:0] soc_sdram_bankmachine1_twtpcon_count = 2'd0;
wire soc_sdram_bankmachine1_trccon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine1_trccon_ready = 1'd1;
wire soc_sdram_bankmachine1_trascon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine1_trascon_ready = 1'd1;
wire soc_sdram_bankmachine2_req_valid;
wire soc_sdram_bankmachine2_req_ready;
wire soc_sdram_bankmachine2_req_we;
wire [20:0] soc_sdram_bankmachine2_req_addr;
wire soc_sdram_bankmachine2_req_lock;
reg soc_sdram_bankmachine2_req_wdata_ready = 1'd0;
reg soc_sdram_bankmachine2_req_rdata_valid = 1'd0;
wire soc_sdram_bankmachine2_refresh_req;
reg soc_sdram_bankmachine2_refresh_gnt = 1'd0;
reg soc_sdram_bankmachine2_cmd_valid = 1'd0;
reg soc_sdram_bankmachine2_cmd_ready = 1'd0;
reg [12:0] soc_sdram_bankmachine2_cmd_payload_a = 13'd0;
wire [2:0] soc_sdram_bankmachine2_cmd_payload_ba;
reg soc_sdram_bankmachine2_cmd_payload_cas = 1'd0;
reg soc_sdram_bankmachine2_cmd_payload_ras = 1'd0;
reg soc_sdram_bankmachine2_cmd_payload_we = 1'd0;
reg soc_sdram_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg soc_sdram_bankmachine2_cmd_payload_is_read = 1'd0;
reg soc_sdram_bankmachine2_cmd_payload_is_write = 1'd0;
reg soc_sdram_bankmachine2_auto_precharge = 1'd0;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
reg soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_first = 1'd0;
reg soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_last = 1'd0;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_source_ready;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_source_first;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_source_last;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
wire [20:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
wire [23:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
wire [23:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
reg [4:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_level = 5'd0;
reg soc_sdram_bankmachine2_cmd_buffer_lookahead_replace = 1'd0;
reg [3:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_produce = 4'd0;
reg [3:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_consume = 4'd0;
reg [3:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr = 4'd0;
wire [23:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_we;
wire [23:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_do_read;
wire [3:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr;
wire [23:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
wire soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
wire soc_sdram_bankmachine2_cmd_buffer_sink_valid;
wire soc_sdram_bankmachine2_cmd_buffer_sink_ready;
wire soc_sdram_bankmachine2_cmd_buffer_sink_first;
wire soc_sdram_bankmachine2_cmd_buffer_sink_last;
wire soc_sdram_bankmachine2_cmd_buffer_sink_payload_we;
wire [20:0] soc_sdram_bankmachine2_cmd_buffer_sink_payload_addr;
reg soc_sdram_bankmachine2_cmd_buffer_source_valid = 1'd0;
wire soc_sdram_bankmachine2_cmd_buffer_source_ready;
reg soc_sdram_bankmachine2_cmd_buffer_source_first = 1'd0;
reg soc_sdram_bankmachine2_cmd_buffer_source_last = 1'd0;
reg soc_sdram_bankmachine2_cmd_buffer_source_payload_we = 1'd0;
reg [20:0] soc_sdram_bankmachine2_cmd_buffer_source_payload_addr = 21'd0;
reg [12:0] soc_sdram_bankmachine2_row = 13'd0;
reg soc_sdram_bankmachine2_row_opened = 1'd0;
wire soc_sdram_bankmachine2_row_hit;
reg soc_sdram_bankmachine2_row_open = 1'd0;
reg soc_sdram_bankmachine2_row_close = 1'd0;
reg soc_sdram_bankmachine2_row_col_n_addr_sel = 1'd0;
wire soc_sdram_bankmachine2_twtpcon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine2_twtpcon_ready = 1'd1;
reg [1:0] soc_sdram_bankmachine2_twtpcon_count = 2'd0;
wire soc_sdram_bankmachine2_trccon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine2_trccon_ready = 1'd1;
wire soc_sdram_bankmachine2_trascon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine2_trascon_ready = 1'd1;
wire soc_sdram_bankmachine3_req_valid;
wire soc_sdram_bankmachine3_req_ready;
wire soc_sdram_bankmachine3_req_we;
wire [20:0] soc_sdram_bankmachine3_req_addr;
wire soc_sdram_bankmachine3_req_lock;
reg soc_sdram_bankmachine3_req_wdata_ready = 1'd0;
reg soc_sdram_bankmachine3_req_rdata_valid = 1'd0;
wire soc_sdram_bankmachine3_refresh_req;
reg soc_sdram_bankmachine3_refresh_gnt = 1'd0;
reg soc_sdram_bankmachine3_cmd_valid = 1'd0;
reg soc_sdram_bankmachine3_cmd_ready = 1'd0;
reg [12:0] soc_sdram_bankmachine3_cmd_payload_a = 13'd0;
wire [2:0] soc_sdram_bankmachine3_cmd_payload_ba;
reg soc_sdram_bankmachine3_cmd_payload_cas = 1'd0;
reg soc_sdram_bankmachine3_cmd_payload_ras = 1'd0;
reg soc_sdram_bankmachine3_cmd_payload_we = 1'd0;
reg soc_sdram_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg soc_sdram_bankmachine3_cmd_payload_is_read = 1'd0;
reg soc_sdram_bankmachine3_cmd_payload_is_write = 1'd0;
reg soc_sdram_bankmachine3_auto_precharge = 1'd0;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
reg soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_first = 1'd0;
reg soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_last = 1'd0;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_source_ready;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_source_first;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_source_last;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
wire [20:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
wire [23:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
wire [23:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
reg [4:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_level = 5'd0;
reg soc_sdram_bankmachine3_cmd_buffer_lookahead_replace = 1'd0;
reg [3:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_produce = 4'd0;
reg [3:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_consume = 4'd0;
reg [3:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr = 4'd0;
wire [23:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_we;
wire [23:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_do_read;
wire [3:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr;
wire [23:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
wire soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
wire soc_sdram_bankmachine3_cmd_buffer_sink_valid;
wire soc_sdram_bankmachine3_cmd_buffer_sink_ready;
wire soc_sdram_bankmachine3_cmd_buffer_sink_first;
wire soc_sdram_bankmachine3_cmd_buffer_sink_last;
wire soc_sdram_bankmachine3_cmd_buffer_sink_payload_we;
wire [20:0] soc_sdram_bankmachine3_cmd_buffer_sink_payload_addr;
reg soc_sdram_bankmachine3_cmd_buffer_source_valid = 1'd0;
wire soc_sdram_bankmachine3_cmd_buffer_source_ready;
reg soc_sdram_bankmachine3_cmd_buffer_source_first = 1'd0;
reg soc_sdram_bankmachine3_cmd_buffer_source_last = 1'd0;
reg soc_sdram_bankmachine3_cmd_buffer_source_payload_we = 1'd0;
reg [20:0] soc_sdram_bankmachine3_cmd_buffer_source_payload_addr = 21'd0;
reg [12:0] soc_sdram_bankmachine3_row = 13'd0;
reg soc_sdram_bankmachine3_row_opened = 1'd0;
wire soc_sdram_bankmachine3_row_hit;
reg soc_sdram_bankmachine3_row_open = 1'd0;
reg soc_sdram_bankmachine3_row_close = 1'd0;
reg soc_sdram_bankmachine3_row_col_n_addr_sel = 1'd0;
wire soc_sdram_bankmachine3_twtpcon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine3_twtpcon_ready = 1'd1;
reg [1:0] soc_sdram_bankmachine3_twtpcon_count = 2'd0;
wire soc_sdram_bankmachine3_trccon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine3_trccon_ready = 1'd1;
wire soc_sdram_bankmachine3_trascon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine3_trascon_ready = 1'd1;
wire soc_sdram_bankmachine4_req_valid;
wire soc_sdram_bankmachine4_req_ready;
wire soc_sdram_bankmachine4_req_we;
wire [20:0] soc_sdram_bankmachine4_req_addr;
wire soc_sdram_bankmachine4_req_lock;
reg soc_sdram_bankmachine4_req_wdata_ready = 1'd0;
reg soc_sdram_bankmachine4_req_rdata_valid = 1'd0;
wire soc_sdram_bankmachine4_refresh_req;
reg soc_sdram_bankmachine4_refresh_gnt = 1'd0;
reg soc_sdram_bankmachine4_cmd_valid = 1'd0;
reg soc_sdram_bankmachine4_cmd_ready = 1'd0;
reg [12:0] soc_sdram_bankmachine4_cmd_payload_a = 13'd0;
wire [2:0] soc_sdram_bankmachine4_cmd_payload_ba;
reg soc_sdram_bankmachine4_cmd_payload_cas = 1'd0;
reg soc_sdram_bankmachine4_cmd_payload_ras = 1'd0;
reg soc_sdram_bankmachine4_cmd_payload_we = 1'd0;
reg soc_sdram_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg soc_sdram_bankmachine4_cmd_payload_is_read = 1'd0;
reg soc_sdram_bankmachine4_cmd_payload_is_write = 1'd0;
reg soc_sdram_bankmachine4_auto_precharge = 1'd0;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_valid;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_ready;
reg soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_first = 1'd0;
reg soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_last = 1'd0;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_source_ready;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_source_first;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_source_last;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we;
wire [20:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable;
wire [23:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din;
wire [23:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
reg [4:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_level = 5'd0;
reg soc_sdram_bankmachine4_cmd_buffer_lookahead_replace = 1'd0;
reg [3:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_produce = 4'd0;
reg [3:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_consume = 4'd0;
reg [3:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr = 4'd0;
wire [23:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_r;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_we;
wire [23:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_do_read;
wire [3:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr;
wire [23:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first;
wire soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last;
wire soc_sdram_bankmachine4_cmd_buffer_sink_valid;
wire soc_sdram_bankmachine4_cmd_buffer_sink_ready;
wire soc_sdram_bankmachine4_cmd_buffer_sink_first;
wire soc_sdram_bankmachine4_cmd_buffer_sink_last;
wire soc_sdram_bankmachine4_cmd_buffer_sink_payload_we;
wire [20:0] soc_sdram_bankmachine4_cmd_buffer_sink_payload_addr;
reg soc_sdram_bankmachine4_cmd_buffer_source_valid = 1'd0;
wire soc_sdram_bankmachine4_cmd_buffer_source_ready;
reg soc_sdram_bankmachine4_cmd_buffer_source_first = 1'd0;
reg soc_sdram_bankmachine4_cmd_buffer_source_last = 1'd0;
reg soc_sdram_bankmachine4_cmd_buffer_source_payload_we = 1'd0;
reg [20:0] soc_sdram_bankmachine4_cmd_buffer_source_payload_addr = 21'd0;
reg [12:0] soc_sdram_bankmachine4_row = 13'd0;
reg soc_sdram_bankmachine4_row_opened = 1'd0;
wire soc_sdram_bankmachine4_row_hit;
reg soc_sdram_bankmachine4_row_open = 1'd0;
reg soc_sdram_bankmachine4_row_close = 1'd0;
reg soc_sdram_bankmachine4_row_col_n_addr_sel = 1'd0;
wire soc_sdram_bankmachine4_twtpcon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine4_twtpcon_ready = 1'd1;
reg [1:0] soc_sdram_bankmachine4_twtpcon_count = 2'd0;
wire soc_sdram_bankmachine4_trccon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine4_trccon_ready = 1'd1;
wire soc_sdram_bankmachine4_trascon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine4_trascon_ready = 1'd1;
wire soc_sdram_bankmachine5_req_valid;
wire soc_sdram_bankmachine5_req_ready;
wire soc_sdram_bankmachine5_req_we;
wire [20:0] soc_sdram_bankmachine5_req_addr;
wire soc_sdram_bankmachine5_req_lock;
reg soc_sdram_bankmachine5_req_wdata_ready = 1'd0;
reg soc_sdram_bankmachine5_req_rdata_valid = 1'd0;
wire soc_sdram_bankmachine5_refresh_req;
reg soc_sdram_bankmachine5_refresh_gnt = 1'd0;
reg soc_sdram_bankmachine5_cmd_valid = 1'd0;
reg soc_sdram_bankmachine5_cmd_ready = 1'd0;
reg [12:0] soc_sdram_bankmachine5_cmd_payload_a = 13'd0;
wire [2:0] soc_sdram_bankmachine5_cmd_payload_ba;
reg soc_sdram_bankmachine5_cmd_payload_cas = 1'd0;
reg soc_sdram_bankmachine5_cmd_payload_ras = 1'd0;
reg soc_sdram_bankmachine5_cmd_payload_we = 1'd0;
reg soc_sdram_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg soc_sdram_bankmachine5_cmd_payload_is_read = 1'd0;
reg soc_sdram_bankmachine5_cmd_payload_is_write = 1'd0;
reg soc_sdram_bankmachine5_auto_precharge = 1'd0;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_valid;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_ready;
reg soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_first = 1'd0;
reg soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_last = 1'd0;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_source_ready;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_source_first;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_source_last;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we;
wire [20:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable;
wire [23:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din;
wire [23:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
reg [4:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_level = 5'd0;
reg soc_sdram_bankmachine5_cmd_buffer_lookahead_replace = 1'd0;
reg [3:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_produce = 4'd0;
reg [3:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_consume = 4'd0;
reg [3:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr = 4'd0;
wire [23:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_r;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_we;
wire [23:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_do_read;
wire [3:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr;
wire [23:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first;
wire soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last;
wire soc_sdram_bankmachine5_cmd_buffer_sink_valid;
wire soc_sdram_bankmachine5_cmd_buffer_sink_ready;
wire soc_sdram_bankmachine5_cmd_buffer_sink_first;
wire soc_sdram_bankmachine5_cmd_buffer_sink_last;
wire soc_sdram_bankmachine5_cmd_buffer_sink_payload_we;
wire [20:0] soc_sdram_bankmachine5_cmd_buffer_sink_payload_addr;
reg soc_sdram_bankmachine5_cmd_buffer_source_valid = 1'd0;
wire soc_sdram_bankmachine5_cmd_buffer_source_ready;
reg soc_sdram_bankmachine5_cmd_buffer_source_first = 1'd0;
reg soc_sdram_bankmachine5_cmd_buffer_source_last = 1'd0;
reg soc_sdram_bankmachine5_cmd_buffer_source_payload_we = 1'd0;
reg [20:0] soc_sdram_bankmachine5_cmd_buffer_source_payload_addr = 21'd0;
reg [12:0] soc_sdram_bankmachine5_row = 13'd0;
reg soc_sdram_bankmachine5_row_opened = 1'd0;
wire soc_sdram_bankmachine5_row_hit;
reg soc_sdram_bankmachine5_row_open = 1'd0;
reg soc_sdram_bankmachine5_row_close = 1'd0;
reg soc_sdram_bankmachine5_row_col_n_addr_sel = 1'd0;
wire soc_sdram_bankmachine5_twtpcon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine5_twtpcon_ready = 1'd1;
reg [1:0] soc_sdram_bankmachine5_twtpcon_count = 2'd0;
wire soc_sdram_bankmachine5_trccon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine5_trccon_ready = 1'd1;
wire soc_sdram_bankmachine5_trascon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine5_trascon_ready = 1'd1;
wire soc_sdram_bankmachine6_req_valid;
wire soc_sdram_bankmachine6_req_ready;
wire soc_sdram_bankmachine6_req_we;
wire [20:0] soc_sdram_bankmachine6_req_addr;
wire soc_sdram_bankmachine6_req_lock;
reg soc_sdram_bankmachine6_req_wdata_ready = 1'd0;
reg soc_sdram_bankmachine6_req_rdata_valid = 1'd0;
wire soc_sdram_bankmachine6_refresh_req;
reg soc_sdram_bankmachine6_refresh_gnt = 1'd0;
reg soc_sdram_bankmachine6_cmd_valid = 1'd0;
reg soc_sdram_bankmachine6_cmd_ready = 1'd0;
reg [12:0] soc_sdram_bankmachine6_cmd_payload_a = 13'd0;
wire [2:0] soc_sdram_bankmachine6_cmd_payload_ba;
reg soc_sdram_bankmachine6_cmd_payload_cas = 1'd0;
reg soc_sdram_bankmachine6_cmd_payload_ras = 1'd0;
reg soc_sdram_bankmachine6_cmd_payload_we = 1'd0;
reg soc_sdram_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg soc_sdram_bankmachine6_cmd_payload_is_read = 1'd0;
reg soc_sdram_bankmachine6_cmd_payload_is_write = 1'd0;
reg soc_sdram_bankmachine6_auto_precharge = 1'd0;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_valid;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_ready;
reg soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_first = 1'd0;
reg soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_last = 1'd0;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_source_ready;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_source_first;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_source_last;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we;
wire [20:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable;
wire [23:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din;
wire [23:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
reg [4:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_level = 5'd0;
reg soc_sdram_bankmachine6_cmd_buffer_lookahead_replace = 1'd0;
reg [3:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_produce = 4'd0;
reg [3:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_consume = 4'd0;
reg [3:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr = 4'd0;
wire [23:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_r;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_we;
wire [23:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_do_read;
wire [3:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr;
wire [23:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first;
wire soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last;
wire soc_sdram_bankmachine6_cmd_buffer_sink_valid;
wire soc_sdram_bankmachine6_cmd_buffer_sink_ready;
wire soc_sdram_bankmachine6_cmd_buffer_sink_first;
wire soc_sdram_bankmachine6_cmd_buffer_sink_last;
wire soc_sdram_bankmachine6_cmd_buffer_sink_payload_we;
wire [20:0] soc_sdram_bankmachine6_cmd_buffer_sink_payload_addr;
reg soc_sdram_bankmachine6_cmd_buffer_source_valid = 1'd0;
wire soc_sdram_bankmachine6_cmd_buffer_source_ready;
reg soc_sdram_bankmachine6_cmd_buffer_source_first = 1'd0;
reg soc_sdram_bankmachine6_cmd_buffer_source_last = 1'd0;
reg soc_sdram_bankmachine6_cmd_buffer_source_payload_we = 1'd0;
reg [20:0] soc_sdram_bankmachine6_cmd_buffer_source_payload_addr = 21'd0;
reg [12:0] soc_sdram_bankmachine6_row = 13'd0;
reg soc_sdram_bankmachine6_row_opened = 1'd0;
wire soc_sdram_bankmachine6_row_hit;
reg soc_sdram_bankmachine6_row_open = 1'd0;
reg soc_sdram_bankmachine6_row_close = 1'd0;
reg soc_sdram_bankmachine6_row_col_n_addr_sel = 1'd0;
wire soc_sdram_bankmachine6_twtpcon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine6_twtpcon_ready = 1'd1;
reg [1:0] soc_sdram_bankmachine6_twtpcon_count = 2'd0;
wire soc_sdram_bankmachine6_trccon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine6_trccon_ready = 1'd1;
wire soc_sdram_bankmachine6_trascon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine6_trascon_ready = 1'd1;
wire soc_sdram_bankmachine7_req_valid;
wire soc_sdram_bankmachine7_req_ready;
wire soc_sdram_bankmachine7_req_we;
wire [20:0] soc_sdram_bankmachine7_req_addr;
wire soc_sdram_bankmachine7_req_lock;
reg soc_sdram_bankmachine7_req_wdata_ready = 1'd0;
reg soc_sdram_bankmachine7_req_rdata_valid = 1'd0;
wire soc_sdram_bankmachine7_refresh_req;
reg soc_sdram_bankmachine7_refresh_gnt = 1'd0;
reg soc_sdram_bankmachine7_cmd_valid = 1'd0;
reg soc_sdram_bankmachine7_cmd_ready = 1'd0;
reg [12:0] soc_sdram_bankmachine7_cmd_payload_a = 13'd0;
wire [2:0] soc_sdram_bankmachine7_cmd_payload_ba;
reg soc_sdram_bankmachine7_cmd_payload_cas = 1'd0;
reg soc_sdram_bankmachine7_cmd_payload_ras = 1'd0;
reg soc_sdram_bankmachine7_cmd_payload_we = 1'd0;
reg soc_sdram_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg soc_sdram_bankmachine7_cmd_payload_is_read = 1'd0;
reg soc_sdram_bankmachine7_cmd_payload_is_write = 1'd0;
reg soc_sdram_bankmachine7_auto_precharge = 1'd0;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_valid;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_ready;
reg soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_first = 1'd0;
reg soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_last = 1'd0;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we;
wire [20:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_source_ready;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_source_first;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_source_last;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we;
wire [20:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable;
wire [23:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din;
wire [23:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
reg [4:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_level = 5'd0;
reg soc_sdram_bankmachine7_cmd_buffer_lookahead_replace = 1'd0;
reg [3:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_produce = 4'd0;
reg [3:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_consume = 4'd0;
reg [3:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr = 4'd0;
wire [23:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_r;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_we;
wire [23:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_do_read;
wire [3:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr;
wire [23:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we;
wire [20:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we;
wire [20:0] soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first;
wire soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last;
wire soc_sdram_bankmachine7_cmd_buffer_sink_valid;
wire soc_sdram_bankmachine7_cmd_buffer_sink_ready;
wire soc_sdram_bankmachine7_cmd_buffer_sink_first;
wire soc_sdram_bankmachine7_cmd_buffer_sink_last;
wire soc_sdram_bankmachine7_cmd_buffer_sink_payload_we;
wire [20:0] soc_sdram_bankmachine7_cmd_buffer_sink_payload_addr;
reg soc_sdram_bankmachine7_cmd_buffer_source_valid = 1'd0;
wire soc_sdram_bankmachine7_cmd_buffer_source_ready;
reg soc_sdram_bankmachine7_cmd_buffer_source_first = 1'd0;
reg soc_sdram_bankmachine7_cmd_buffer_source_last = 1'd0;
reg soc_sdram_bankmachine7_cmd_buffer_source_payload_we = 1'd0;
reg [20:0] soc_sdram_bankmachine7_cmd_buffer_source_payload_addr = 21'd0;
reg [12:0] soc_sdram_bankmachine7_row = 13'd0;
reg soc_sdram_bankmachine7_row_opened = 1'd0;
wire soc_sdram_bankmachine7_row_hit;
reg soc_sdram_bankmachine7_row_open = 1'd0;
reg soc_sdram_bankmachine7_row_close = 1'd0;
reg soc_sdram_bankmachine7_row_col_n_addr_sel = 1'd0;
wire soc_sdram_bankmachine7_twtpcon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine7_twtpcon_ready = 1'd1;
reg [1:0] soc_sdram_bankmachine7_twtpcon_count = 2'd0;
wire soc_sdram_bankmachine7_trccon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine7_trccon_ready = 1'd1;
wire soc_sdram_bankmachine7_trascon_valid;
(* dont_touch = "true" *) reg soc_sdram_bankmachine7_trascon_ready = 1'd1;
wire soc_sdram_ras_allowed;
wire soc_sdram_cas_allowed;
reg soc_sdram_choose_cmd_want_reads = 1'd0;
reg soc_sdram_choose_cmd_want_writes = 1'd0;
reg soc_sdram_choose_cmd_want_cmds = 1'd0;
reg soc_sdram_choose_cmd_want_activates = 1'd0;
wire soc_sdram_choose_cmd_cmd_valid;
reg soc_sdram_choose_cmd_cmd_ready = 1'd0;
wire [12:0] soc_sdram_choose_cmd_cmd_payload_a;
wire [2:0] soc_sdram_choose_cmd_cmd_payload_ba;
reg soc_sdram_choose_cmd_cmd_payload_cas = 1'd0;
reg soc_sdram_choose_cmd_cmd_payload_ras = 1'd0;
reg soc_sdram_choose_cmd_cmd_payload_we = 1'd0;
wire soc_sdram_choose_cmd_cmd_payload_is_cmd;
wire soc_sdram_choose_cmd_cmd_payload_is_read;
wire soc_sdram_choose_cmd_cmd_payload_is_write;
reg [7:0] soc_sdram_choose_cmd_valids = 8'd0;
wire [7:0] soc_sdram_choose_cmd_request;
reg [2:0] soc_sdram_choose_cmd_grant = 3'd0;
wire soc_sdram_choose_cmd_ce;
reg soc_sdram_choose_req_want_reads = 1'd0;
reg soc_sdram_choose_req_want_writes = 1'd0;
reg soc_sdram_choose_req_want_cmds = 1'd0;
reg soc_sdram_choose_req_want_activates = 1'd0;
wire soc_sdram_choose_req_cmd_valid;
reg soc_sdram_choose_req_cmd_ready = 1'd0;
wire [12:0] soc_sdram_choose_req_cmd_payload_a;
wire [2:0] soc_sdram_choose_req_cmd_payload_ba;
reg soc_sdram_choose_req_cmd_payload_cas = 1'd0;
reg soc_sdram_choose_req_cmd_payload_ras = 1'd0;
reg soc_sdram_choose_req_cmd_payload_we = 1'd0;
wire soc_sdram_choose_req_cmd_payload_is_cmd;
wire soc_sdram_choose_req_cmd_payload_is_read;
wire soc_sdram_choose_req_cmd_payload_is_write;
reg [7:0] soc_sdram_choose_req_valids = 8'd0;
wire [7:0] soc_sdram_choose_req_request;
reg [2:0] soc_sdram_choose_req_grant = 3'd0;
wire soc_sdram_choose_req_ce;
reg [12:0] soc_sdram_nop_a = 13'd0;
reg [2:0] soc_sdram_nop_ba = 3'd0;
reg [1:0] soc_sdram_steerer_sel0 = 2'd0;
reg [1:0] soc_sdram_steerer_sel1 = 2'd0;
reg soc_sdram_steerer0 = 1'd1;
reg soc_sdram_steerer1 = 1'd1;
reg soc_sdram_steerer2 = 1'd1;
reg soc_sdram_steerer3 = 1'd1;
wire soc_sdram_trrdcon_valid;
(* dont_touch = "true" *) reg soc_sdram_trrdcon_ready = 1'd1;
wire soc_sdram_tfawcon_valid;
(* dont_touch = "true" *) reg soc_sdram_tfawcon_ready = 1'd1;
wire soc_sdram_tccdcon_valid;
(* dont_touch = "true" *) reg soc_sdram_tccdcon_ready = 1'd1;
reg soc_sdram_tccdcon_count = 1'd0;
wire soc_sdram_twtrcon_valid;
(* dont_touch = "true" *) reg soc_sdram_twtrcon_ready = 1'd1;
reg [1:0] soc_sdram_twtrcon_count = 2'd0;
wire soc_sdram_read_available;
wire soc_sdram_write_available;
reg soc_sdram_en0 = 1'd0;
wire soc_sdram_max_time0;
reg [4:0] soc_sdram_time0 = 5'd0;
reg soc_sdram_en1 = 1'd0;
wire soc_sdram_max_time1;
reg [3:0] soc_sdram_time1 = 4'd0;
wire soc_sdram_go_to_refresh;
reg soc_port_cmd_valid = 1'd0;
wire soc_port_cmd_ready;
reg soc_port_cmd_payload_we = 1'd0;
reg [23:0] soc_port_cmd_payload_addr = 24'd0;
wire soc_port_wdata_valid;
wire soc_port_wdata_ready;
wire soc_port_wdata_first;
wire soc_port_wdata_last;
wire [63:0] soc_port_wdata_payload_data;
wire [7:0] soc_port_wdata_payload_we;
wire soc_port_rdata_valid;
wire soc_port_rdata_ready;
reg soc_port_rdata_first = 1'd0;
reg soc_port_rdata_last = 1'd0;
wire [63:0] soc_port_rdata_payload_data;
wire [29:0] soc_wb_sdram_adr;
wire [31:0] soc_wb_sdram_dat_w;
reg [31:0] soc_wb_sdram_dat_r = 32'd0;
wire [3:0] soc_wb_sdram_sel;
wire soc_wb_sdram_cyc;
wire soc_wb_sdram_stb;
reg soc_wb_sdram_ack = 1'd0;
wire soc_wb_sdram_we;
wire [2:0] soc_wb_sdram_cti;
wire [1:0] soc_wb_sdram_bte;
reg soc_wb_sdram_err = 1'd0;
wire [29:0] soc_litedram_wb_adr;
reg [63:0] soc_litedram_wb_dat_w = 64'd0;
wire [63:0] soc_litedram_wb_dat_r;
reg [7:0] soc_litedram_wb_sel = 8'd0;
reg soc_litedram_wb_cyc = 1'd0;
reg soc_litedram_wb_stb = 1'd0;
reg soc_litedram_wb_ack = 1'd0;
reg soc_litedram_wb_we = 1'd0;
wire [2:0] soc_litedram_wb_cti;
reg soc_write = 1'd0;
reg soc_evict = 1'd0;
reg soc_refill = 1'd0;
reg soc_read = 1'd0;
wire [29:0] soc_address_d;
reg [29:0] soc_address_q = 30'd0;
reg soc_address_ce = 1'd0;
reg soc_address_reset = 1'd0;
reg soc_counter = 1'd0;
reg soc_counter_ce = 1'd0;
reg soc_counter_reset = 1'd0;
wire soc_counter_offset;
wire soc_counter_done;
wire [63:0] soc_cached_data;
wire [7:0] soc_cached_sel;
wire soc_end_of_burst;
wire soc_need_refill_d;
reg soc_need_refill_q = 1'd1;
reg soc_need_refill_ce = 1'd0;
wire soc_need_refill_reset;
reg [31:0] soc_cached_datas_flipflop0_d = 32'd0;
reg [31:0] soc_cached_datas_flipflop0_q = 32'd0;
reg soc_cached_datas_ce0 = 1'd0;
reg soc_cached_datas_reset0 = 1'd0;
reg [31:0] soc_cached_datas_flipflop1_d = 32'd0;
reg [31:0] soc_cached_datas_flipflop1_q = 32'd0;
reg soc_cached_datas_ce1 = 1'd0;
reg soc_cached_datas_reset1 = 1'd0;
wire [3:0] soc_cached_sels_flipflop0_d;
reg [3:0] soc_cached_sels_flipflop0_q = 4'd0;
reg soc_cached_sels_ce0 = 1'd0;
wire soc_cached_sels_reset0;
wire [3:0] soc_cached_sels_flipflop1_d;
reg [3:0] soc_cached_sels_flipflop1_q = 4'd0;
reg soc_cached_sels_ce1 = 1'd0;
wire soc_cached_sels_reset1;
reg soc_write_sel0 = 1'd0;
reg soc_write_sel1 = 1'd0;
wire soc_wdata_converter_sink_valid;
wire soc_wdata_converter_sink_ready;
reg soc_wdata_converter_sink_first = 1'd0;
reg soc_wdata_converter_sink_last = 1'd0;
wire [63:0] soc_wdata_converter_sink_payload_data;
wire [7:0] soc_wdata_converter_sink_payload_we;
wire soc_wdata_converter_source_valid;
wire soc_wdata_converter_source_ready;
wire soc_wdata_converter_source_first;
wire soc_wdata_converter_source_last;
wire [63:0] soc_wdata_converter_source_payload_data;
wire [7:0] soc_wdata_converter_source_payload_we;
wire soc_wdata_converter_converter_sink_valid;
wire soc_wdata_converter_converter_sink_ready;
wire soc_wdata_converter_converter_sink_first;
wire soc_wdata_converter_converter_sink_last;
wire [71:0] soc_wdata_converter_converter_sink_payload_data;
wire soc_wdata_converter_converter_source_valid;
wire soc_wdata_converter_converter_source_ready;
wire soc_wdata_converter_converter_source_first;
wire soc_wdata_converter_converter_source_last;
wire [71:0] soc_wdata_converter_converter_source_payload_data;
wire soc_wdata_converter_converter_source_payload_valid_token_count;
wire soc_wdata_converter_source_source_valid;
wire soc_wdata_converter_source_source_ready;
wire soc_wdata_converter_source_source_first;
wire soc_wdata_converter_source_source_last;
wire [71:0] soc_wdata_converter_source_source_payload_data;
wire soc_rdata_converter_sink_valid;
wire soc_rdata_converter_sink_ready;
wire soc_rdata_converter_sink_first;
wire soc_rdata_converter_sink_last;
wire [63:0] soc_rdata_converter_sink_payload_data;
wire soc_rdata_converter_source_valid;
wire soc_rdata_converter_source_ready;
wire soc_rdata_converter_source_first;
wire soc_rdata_converter_source_last;
wire [63:0] soc_rdata_converter_source_payload_data;
wire soc_rdata_converter_converter_sink_valid;
wire soc_rdata_converter_converter_sink_ready;
wire soc_rdata_converter_converter_sink_first;
wire soc_rdata_converter_converter_sink_last;
wire [63:0] soc_rdata_converter_converter_sink_payload_data;
wire soc_rdata_converter_converter_source_valid;
wire soc_rdata_converter_converter_source_ready;
wire soc_rdata_converter_converter_source_first;
wire soc_rdata_converter_converter_source_last;
wire [63:0] soc_rdata_converter_converter_source_payload_data;
wire soc_rdata_converter_converter_source_payload_valid_token_count;
wire soc_rdata_converter_source_source_valid;
wire soc_rdata_converter_source_source_ready;
wire soc_rdata_converter_source_source_first;
wire soc_rdata_converter_source_source_last;
wire [63:0] soc_rdata_converter_source_source_payload_data;
reg soc_count = 1'd0;
reg soc_init_done_storage = 1'd0;
reg soc_init_done_re = 1'd0;
reg soc_init_error_storage = 1'd0;
reg soc_init_error_re = 1'd0;
reg soc_cmd_valid = 1'd0;
wire soc_cmd_ready;
reg soc_cmd_payload_we = 1'd0;
reg [23:0] soc_cmd_payload_addr = 24'd0;
wire soc_wdata_valid;
wire soc_wdata_ready;
wire soc_wdata_first;
wire soc_wdata_last;
wire [63:0] soc_wdata_payload_data;
wire [7:0] soc_wdata_payload_we;
wire soc_rdata_valid;
wire soc_rdata_ready;
reg soc_rdata_first = 1'd0;
reg soc_rdata_last = 1'd0;
wire [63:0] soc_rdata_payload_data;
wire soc_aw_valid;
wire soc_aw_ready;
reg soc_aw_first = 1'd0;
reg soc_aw_last = 1'd0;
wire [26:0] soc_aw_payload_addr;
wire [1:0] soc_aw_payload_burst;
wire [7:0] soc_aw_payload_len;
wire [3:0] soc_aw_payload_size;
reg [1:0] soc_aw_payload_lock = 2'd0;
reg [2:0] soc_aw_payload_prot = 3'd0;
reg [3:0] soc_aw_payload_cache = 4'd0;
reg [3:0] soc_aw_payload_qos = 4'd0;
wire [5:0] soc_aw_payload_id;
wire soc_w_valid;
reg soc_w_ready = 1'd0;
reg soc_w_first = 1'd0;
wire soc_w_last;
wire [63:0] soc_w_payload_data;
wire [7:0] soc_w_payload_strb;
reg [5:0] soc_w_payload_id = 6'd0;
wire soc_b_valid;
wire soc_b_ready;
wire soc_b_first;
wire soc_b_last;
wire [1:0] soc_b_payload_resp;
wire [5:0] soc_b_payload_id;
wire soc_ar_valid;
wire soc_ar_ready;
reg soc_ar_first = 1'd0;
reg soc_ar_last = 1'd0;
wire [26:0] soc_ar_payload_addr;
wire [1:0] soc_ar_payload_burst;
wire [7:0] soc_ar_payload_len;
wire [3:0] soc_ar_payload_size;
reg [1:0] soc_ar_payload_lock = 2'd0;
reg [2:0] soc_ar_payload_prot = 3'd0;
reg [3:0] soc_ar_payload_cache = 4'd0;
reg [3:0] soc_ar_payload_qos = 4'd0;
wire [5:0] soc_ar_payload_id;
wire soc_r_valid;
wire soc_r_ready;
wire soc_r_first;
wire soc_r_last;
reg [1:0] soc_r_payload_resp = 2'd0;
wire [63:0] soc_r_payload_data;
wire [5:0] soc_r_payload_id;
wire soc_write_cmd_request;
wire soc_write_cmd_grant;
wire soc_write_aw_buffer_sink_valid;
wire soc_write_aw_buffer_sink_ready;
wire soc_write_aw_buffer_sink_first;
wire soc_write_aw_buffer_sink_last;
wire [26:0] soc_write_aw_buffer_sink_payload_addr;
wire [1:0] soc_write_aw_buffer_sink_payload_burst;
wire [7:0] soc_write_aw_buffer_sink_payload_len;
wire [3:0] soc_write_aw_buffer_sink_payload_size;
wire [1:0] soc_write_aw_buffer_sink_payload_lock;
wire [2:0] soc_write_aw_buffer_sink_payload_prot;
wire [3:0] soc_write_aw_buffer_sink_payload_cache;
wire [3:0] soc_write_aw_buffer_sink_payload_qos;
wire [5:0] soc_write_aw_buffer_sink_payload_id;
reg soc_write_aw_buffer_source_valid = 1'd0;
reg soc_write_aw_buffer_source_ready = 1'd0;
reg soc_write_aw_buffer_source_first = 1'd0;
reg soc_write_aw_buffer_source_last = 1'd0;
reg [26:0] soc_write_aw_buffer_source_payload_addr = 27'd0;
reg [1:0] soc_write_aw_buffer_source_payload_burst = 2'd0;
reg [7:0] soc_write_aw_buffer_source_payload_len = 8'd0;
reg [3:0] soc_write_aw_buffer_source_payload_size = 4'd0;
reg [1:0] soc_write_aw_buffer_source_payload_lock = 2'd0;
reg [2:0] soc_write_aw_buffer_source_payload_prot = 3'd0;
reg [3:0] soc_write_aw_buffer_source_payload_cache = 4'd0;
reg [3:0] soc_write_aw_buffer_source_payload_qos = 4'd0;
reg [5:0] soc_write_aw_buffer_source_payload_id = 6'd0;
wire soc_write_aw_valid;
reg soc_write_aw_ready = 1'd0;
wire soc_write_aw_first;
wire soc_write_aw_last;
wire [26:0] soc_write_aw_payload_addr;
wire [5:0] soc_write_aw_payload_id;
reg [7:0] soc_write_beat_count = 8'd0;
wire [11:0] soc_write_beat_size;
reg [11:0] soc_write_beat_offset = 12'd0;
wire [11:0] soc_write_beat_wrap;
reg soc_write_w_buffer_sink_valid = 1'd0;
wire soc_write_w_buffer_sink_ready;
reg soc_write_w_buffer_sink_first = 1'd0;
reg soc_write_w_buffer_sink_last = 1'd0;
reg [63:0] soc_write_w_buffer_sink_payload_data = 64'd0;
reg [7:0] soc_write_w_buffer_sink_payload_strb = 8'd0;
reg [5:0] soc_write_w_buffer_sink_payload_id = 6'd0;
wire soc_write_w_buffer_source_valid;
wire soc_write_w_buffer_source_ready;
wire soc_write_w_buffer_source_first;
wire soc_write_w_buffer_source_last;
wire [63:0] soc_write_w_buffer_source_payload_data;
wire [7:0] soc_write_w_buffer_source_payload_strb;
wire [5:0] soc_write_w_buffer_source_payload_id;
wire soc_write_w_buffer_re;
reg soc_write_w_buffer_readable = 1'd0;
wire soc_write_w_buffer_syncfifo_we;
wire soc_write_w_buffer_syncfifo_writable;
wire soc_write_w_buffer_syncfifo_re;
wire soc_write_w_buffer_syncfifo_readable;
wire [79:0] soc_write_w_buffer_syncfifo_din;
wire [79:0] soc_write_w_buffer_syncfifo_dout;
reg [4:0] soc_write_w_buffer_level0 = 5'd0;
reg soc_write_w_buffer_replace = 1'd0;
reg [3:0] soc_write_w_buffer_produce = 4'd0;
reg [3:0] soc_write_w_buffer_consume = 4'd0;
reg [3:0] soc_write_w_buffer_wrport_adr = 4'd0;
wire [79:0] soc_write_w_buffer_wrport_dat_r;
wire soc_write_w_buffer_wrport_we;
wire [79:0] soc_write_w_buffer_wrport_dat_w;
wire soc_write_w_buffer_do_read;
wire [3:0] soc_write_w_buffer_rdport_adr;
wire [79:0] soc_write_w_buffer_rdport_dat_r;
wire soc_write_w_buffer_rdport_re;
wire [4:0] soc_write_w_buffer_level1;
wire [63:0] soc_write_w_buffer_fifo_in_payload_data;
wire [7:0] soc_write_w_buffer_fifo_in_payload_strb;
wire [5:0] soc_write_w_buffer_fifo_in_payload_id;
wire soc_write_w_buffer_fifo_in_first;
wire soc_write_w_buffer_fifo_in_last;
wire [63:0] soc_write_w_buffer_fifo_out_payload_data;
wire [7:0] soc_write_w_buffer_fifo_out_payload_strb;
wire [5:0] soc_write_w_buffer_fifo_out_payload_id;
wire soc_write_w_buffer_fifo_out_first;
wire soc_write_w_buffer_fifo_out_last;
wire soc_write_id_buffer_sink_valid;
wire soc_write_id_buffer_sink_ready;
reg soc_write_id_buffer_sink_first = 1'd0;
reg soc_write_id_buffer_sink_last = 1'd0;
wire [5:0] soc_write_id_buffer_sink_payload_id;
wire soc_write_id_buffer_source_valid;
reg soc_write_id_buffer_source_ready = 1'd0;
wire soc_write_id_buffer_source_first;
wire soc_write_id_buffer_source_last;
wire [5:0] soc_write_id_buffer_source_payload_id;
wire soc_write_id_buffer_syncfifo_we;
wire soc_write_id_buffer_syncfifo_writable;
wire soc_write_id_buffer_syncfifo_re;
wire soc_write_id_buffer_syncfifo_readable;
wire [7:0] soc_write_id_buffer_syncfifo_din;
wire [7:0] soc_write_id_buffer_syncfifo_dout;
reg [4:0] soc_write_id_buffer_level = 5'd0;
reg soc_write_id_buffer_replace = 1'd0;
reg [3:0] soc_write_id_buffer_produce = 4'd0;
reg [3:0] soc_write_id_buffer_consume = 4'd0;
reg [3:0] soc_write_id_buffer_wrport_adr = 4'd0;
wire [7:0] soc_write_id_buffer_wrport_dat_r;
wire soc_write_id_buffer_wrport_we;
wire [7:0] soc_write_id_buffer_wrport_dat_w;
wire soc_write_id_buffer_do_read;
wire [3:0] soc_write_id_buffer_rdport_adr;
wire [7:0] soc_write_id_buffer_rdport_dat_r;
wire [5:0] soc_write_id_buffer_fifo_in_payload_id;
wire soc_write_id_buffer_fifo_in_first;
wire soc_write_id_buffer_fifo_in_last;
wire [5:0] soc_write_id_buffer_fifo_out_payload_id;
wire soc_write_id_buffer_fifo_out_first;
wire soc_write_id_buffer_fifo_out_last;
reg soc_write_resp_buffer_sink_valid = 1'd0;
wire soc_write_resp_buffer_sink_ready;
reg soc_write_resp_buffer_sink_first = 1'd0;
reg soc_write_resp_buffer_sink_last = 1'd0;
reg [5:0] soc_write_resp_buffer_sink_payload_id = 6'd0;
reg [1:0] soc_write_resp_buffer_sink_payload_resp = 2'd0;
wire soc_write_resp_buffer_source_valid;
wire soc_write_resp_buffer_source_ready;
wire soc_write_resp_buffer_source_first;
wire soc_write_resp_buffer_source_last;
wire [5:0] soc_write_resp_buffer_source_payload_id;
wire [1:0] soc_write_resp_buffer_source_payload_resp;
wire soc_write_resp_buffer_syncfifo_we;
wire soc_write_resp_buffer_syncfifo_writable;
wire soc_write_resp_buffer_syncfifo_re;
wire soc_write_resp_buffer_syncfifo_readable;
wire [9:0] soc_write_resp_buffer_syncfifo_din;
wire [9:0] soc_write_resp_buffer_syncfifo_dout;
reg [4:0] soc_write_resp_buffer_level = 5'd0;
reg soc_write_resp_buffer_replace = 1'd0;
reg [3:0] soc_write_resp_buffer_produce = 4'd0;
reg [3:0] soc_write_resp_buffer_consume = 4'd0;
reg [3:0] soc_write_resp_buffer_wrport_adr = 4'd0;
wire [9:0] soc_write_resp_buffer_wrport_dat_r;
wire soc_write_resp_buffer_wrport_we;
wire [9:0] soc_write_resp_buffer_wrport_dat_w;
wire soc_write_resp_buffer_do_read;
wire [3:0] soc_write_resp_buffer_rdport_adr;
wire [9:0] soc_write_resp_buffer_rdport_dat_r;
wire [5:0] soc_write_resp_buffer_fifo_in_payload_id;
wire [1:0] soc_write_resp_buffer_fifo_in_payload_resp;
wire soc_write_resp_buffer_fifo_in_first;
wire soc_write_resp_buffer_fifo_in_last;
wire [5:0] soc_write_resp_buffer_fifo_out_payload_id;
wire [1:0] soc_write_resp_buffer_fifo_out_payload_resp;
wire soc_write_resp_buffer_fifo_out_first;
wire soc_write_resp_buffer_fifo_out_last;
wire soc_read_cmd_request;
wire soc_read_cmd_grant;
wire soc_read_can_read;
wire soc_read_ar_buffer_sink_valid;
wire soc_read_ar_buffer_sink_ready;
wire soc_read_ar_buffer_sink_first;
wire soc_read_ar_buffer_sink_last;
wire [26:0] soc_read_ar_buffer_sink_payload_addr;
wire [1:0] soc_read_ar_buffer_sink_payload_burst;
wire [7:0] soc_read_ar_buffer_sink_payload_len;
wire [3:0] soc_read_ar_buffer_sink_payload_size;
wire [1:0] soc_read_ar_buffer_sink_payload_lock;
wire [2:0] soc_read_ar_buffer_sink_payload_prot;
wire [3:0] soc_read_ar_buffer_sink_payload_cache;
wire [3:0] soc_read_ar_buffer_sink_payload_qos;
wire [5:0] soc_read_ar_buffer_sink_payload_id;
reg soc_read_ar_buffer_source_valid = 1'd0;
reg soc_read_ar_buffer_source_ready = 1'd0;
reg soc_read_ar_buffer_source_first = 1'd0;
reg soc_read_ar_buffer_source_last = 1'd0;
reg [26:0] soc_read_ar_buffer_source_payload_addr = 27'd0;
reg [1:0] soc_read_ar_buffer_source_payload_burst = 2'd0;
reg [7:0] soc_read_ar_buffer_source_payload_len = 8'd0;
reg [3:0] soc_read_ar_buffer_source_payload_size = 4'd0;
reg [1:0] soc_read_ar_buffer_source_payload_lock = 2'd0;
reg [2:0] soc_read_ar_buffer_source_payload_prot = 3'd0;
reg [3:0] soc_read_ar_buffer_source_payload_cache = 4'd0;
reg [3:0] soc_read_ar_buffer_source_payload_qos = 4'd0;
reg [5:0] soc_read_ar_buffer_source_payload_id = 6'd0;
wire soc_read_ar_valid;
reg soc_read_ar_ready = 1'd0;
wire soc_read_ar_first;
wire soc_read_ar_last;
wire [26:0] soc_read_ar_payload_addr;
wire [5:0] soc_read_ar_payload_id;
reg [7:0] soc_read_beat_count = 8'd0;
wire [11:0] soc_read_beat_size;
reg [11:0] soc_read_beat_offset = 12'd0;
wire [11:0] soc_read_beat_wrap;
wire soc_read_r_buffer_sink_valid;
wire soc_read_r_buffer_sink_ready;
wire soc_read_r_buffer_sink_first;
wire soc_read_r_buffer_sink_last;
reg [1:0] soc_read_r_buffer_sink_payload_resp = 2'd0;
wire [63:0] soc_read_r_buffer_sink_payload_data;
reg [5:0] soc_read_r_buffer_sink_payload_id = 6'd0;
wire soc_read_r_buffer_source_valid;
wire soc_read_r_buffer_source_ready;
wire soc_read_r_buffer_source_first;
wire soc_read_r_buffer_source_last;
wire [1:0] soc_read_r_buffer_source_payload_resp;
wire [63:0] soc_read_r_buffer_source_payload_data;
wire [5:0] soc_read_r_buffer_source_payload_id;
wire soc_read_r_buffer_re;
reg soc_read_r_buffer_readable = 1'd0;
wire soc_read_r_buffer_syncfifo_we;
wire soc_read_r_buffer_syncfifo_writable;
wire soc_read_r_buffer_syncfifo_re;
wire soc_read_r_buffer_syncfifo_readable;
wire [73:0] soc_read_r_buffer_syncfifo_din;
wire [73:0] soc_read_r_buffer_syncfifo_dout;
reg [4:0] soc_read_r_buffer_level0 = 5'd0;
reg soc_read_r_buffer_replace = 1'd0;
reg [3:0] soc_read_r_buffer_produce = 4'd0;
reg [3:0] soc_read_r_buffer_consume = 4'd0;
reg [3:0] soc_read_r_buffer_wrport_adr = 4'd0;
wire [73:0] soc_read_r_buffer_wrport_dat_r;
wire soc_read_r_buffer_wrport_we;
wire [73:0] soc_read_r_buffer_wrport_dat_w;
wire soc_read_r_buffer_do_read;
wire [3:0] soc_read_r_buffer_rdport_adr;
wire [73:0] soc_read_r_buffer_rdport_dat_r;
wire soc_read_r_buffer_rdport_re;
wire [4:0] soc_read_r_buffer_level1;
wire [1:0] soc_read_r_buffer_fifo_in_payload_resp;
wire [63:0] soc_read_r_buffer_fifo_in_payload_data;
wire [5:0] soc_read_r_buffer_fifo_in_payload_id;
wire soc_read_r_buffer_fifo_in_first;
wire soc_read_r_buffer_fifo_in_last;
wire [1:0] soc_read_r_buffer_fifo_out_payload_resp;
wire [63:0] soc_read_r_buffer_fifo_out_payload_data;
wire [5:0] soc_read_r_buffer_fifo_out_payload_id;
wire soc_read_r_buffer_fifo_out_first;
wire soc_read_r_buffer_fifo_out_last;
wire soc_read_r_buffer_queue;
wire soc_read_r_buffer_dequeue;
reg [4:0] soc_read_r_buffer_level2 = 5'd0;
wire soc_read_id_buffer_sink_valid;
wire soc_read_id_buffer_sink_ready;
reg soc_read_id_buffer_sink_first = 1'd0;
wire soc_read_id_buffer_sink_last;
wire [5:0] soc_read_id_buffer_sink_payload_id;
wire soc_read_id_buffer_source_valid;
wire soc_read_id_buffer_source_ready;
wire soc_read_id_buffer_source_first;
wire soc_read_id_buffer_source_last;
wire [5:0] soc_read_id_buffer_source_payload_id;
wire soc_read_id_buffer_syncfifo_we;
wire soc_read_id_buffer_syncfifo_writable;
wire soc_read_id_buffer_syncfifo_re;
wire soc_read_id_buffer_syncfifo_readable;
wire [7:0] soc_read_id_buffer_syncfifo_din;
wire [7:0] soc_read_id_buffer_syncfifo_dout;
reg [4:0] soc_read_id_buffer_level = 5'd0;
reg soc_read_id_buffer_replace = 1'd0;
reg [3:0] soc_read_id_buffer_produce = 4'd0;
reg [3:0] soc_read_id_buffer_consume = 4'd0;
reg [3:0] soc_read_id_buffer_wrport_adr = 4'd0;
wire [7:0] soc_read_id_buffer_wrport_dat_r;
wire soc_read_id_buffer_wrport_we;
wire [7:0] soc_read_id_buffer_wrport_dat_w;
wire soc_read_id_buffer_do_read;
wire [3:0] soc_read_id_buffer_rdport_adr;
wire [7:0] soc_read_id_buffer_rdport_dat_r;
wire [5:0] soc_read_id_buffer_fifo_in_payload_id;
wire soc_read_id_buffer_fifo_in_first;
wire soc_read_id_buffer_fifo_in_last;
wire [5:0] soc_read_id_buffer_fifo_out_payload_id;
wire soc_read_id_buffer_fifo_out_first;
wire soc_read_id_buffer_fifo_out_last;
reg [1:0] soc_request = 2'd0;
reg soc_grant = 1'd0;
wire soc_ce;
reg vns_wb2csr_state = 1'd0;
reg vns_wb2csr_next_state = 1'd0;
wire vns_pll_fb0;
wire vns_pll_fb1;
reg [1:0] vns_refresher_state = 2'd0;
reg [1:0] vns_refresher_next_state = 2'd0;
reg [2:0] vns_bankmachine0_state = 3'd0;
reg [2:0] vns_bankmachine0_next_state = 3'd0;
reg [2:0] vns_bankmachine1_state = 3'd0;
reg [2:0] vns_bankmachine1_next_state = 3'd0;
reg [2:0] vns_bankmachine2_state = 3'd0;
reg [2:0] vns_bankmachine2_next_state = 3'd0;
reg [2:0] vns_bankmachine3_state = 3'd0;
reg [2:0] vns_bankmachine3_next_state = 3'd0;
reg [2:0] vns_bankmachine4_state = 3'd0;
reg [2:0] vns_bankmachine4_next_state = 3'd0;
reg [2:0] vns_bankmachine5_state = 3'd0;
reg [2:0] vns_bankmachine5_next_state = 3'd0;
reg [2:0] vns_bankmachine6_state = 3'd0;
reg [2:0] vns_bankmachine6_next_state = 3'd0;
reg [2:0] vns_bankmachine7_state = 3'd0;
reg [2:0] vns_bankmachine7_next_state = 3'd0;
reg [3:0] vns_multiplexer_state = 4'd0;
reg [3:0] vns_multiplexer_next_state = 4'd0;
wire [1:0] vns_roundrobin0_request;
reg vns_roundrobin0_grant = 1'd0;
wire vns_roundrobin0_ce;
wire [1:0] vns_roundrobin1_request;
reg vns_roundrobin1_grant = 1'd0;
wire vns_roundrobin1_ce;
wire [1:0] vns_roundrobin2_request;
reg vns_roundrobin2_grant = 1'd0;
wire vns_roundrobin2_ce;
wire [1:0] vns_roundrobin3_request;
reg vns_roundrobin3_grant = 1'd0;
wire vns_roundrobin3_ce;
wire [1:0] vns_roundrobin4_request;
reg vns_roundrobin4_grant = 1'd0;
wire vns_roundrobin4_ce;
wire [1:0] vns_roundrobin5_request;
reg vns_roundrobin5_grant = 1'd0;
wire vns_roundrobin5_ce;
wire [1:0] vns_roundrobin6_request;
reg vns_roundrobin6_grant = 1'd0;
wire vns_roundrobin6_ce;
wire [1:0] vns_roundrobin7_request;
reg vns_roundrobin7_grant = 1'd0;
wire vns_roundrobin7_ce;
reg vns_locked0 = 1'd0;
reg vns_locked1 = 1'd0;
reg vns_locked2 = 1'd0;
reg vns_locked3 = 1'd0;
reg vns_locked4 = 1'd0;
reg vns_locked5 = 1'd0;
reg vns_locked6 = 1'd0;
reg vns_locked7 = 1'd0;
reg vns_locked8 = 1'd0;
reg vns_locked9 = 1'd0;
reg vns_locked10 = 1'd0;
reg vns_locked11 = 1'd0;
reg vns_locked12 = 1'd0;
reg vns_locked13 = 1'd0;
reg vns_locked14 = 1'd0;
reg vns_locked15 = 1'd0;
reg vns_new_master_wdata_ready0 = 1'd0;
reg vns_new_master_wdata_ready1 = 1'd0;
reg vns_new_master_wdata_ready2 = 1'd0;
reg vns_new_master_wdata_ready3 = 1'd0;
reg vns_new_master_rdata_valid0 = 1'd0;
reg vns_new_master_rdata_valid1 = 1'd0;
reg vns_new_master_rdata_valid2 = 1'd0;
reg vns_new_master_rdata_valid3 = 1'd0;
reg vns_new_master_rdata_valid4 = 1'd0;
reg vns_new_master_rdata_valid5 = 1'd0;
reg vns_new_master_rdata_valid6 = 1'd0;
reg vns_new_master_rdata_valid7 = 1'd0;
reg vns_new_master_rdata_valid8 = 1'd0;
reg vns_new_master_rdata_valid9 = 1'd0;
reg vns_new_master_rdata_valid10 = 1'd0;
reg vns_new_master_rdata_valid11 = 1'd0;
reg vns_new_master_rdata_valid12 = 1'd0;
reg vns_new_master_rdata_valid13 = 1'd0;
reg vns_new_master_rdata_valid14 = 1'd0;
reg vns_new_master_rdata_valid15 = 1'd0;
reg vns_new_master_rdata_valid16 = 1'd0;
reg vns_new_master_rdata_valid17 = 1'd0;
reg [2:0] vns_converter_state = 3'd0;
reg [2:0] vns_converter_next_state = 3'd0;
reg [1:0] vns_litedramwishbone2native_state = 2'd0;
reg [1:0] vns_litedramwishbone2native_next_state = 2'd0;
reg soc_count_next_value = 1'd0;
reg soc_count_next_value_ce = 1'd0;
wire [29:0] vns_shared_adr;
wire [31:0] vns_shared_dat_w;
reg [31:0] vns_shared_dat_r = 32'd0;
wire [3:0] vns_shared_sel;
wire vns_shared_cyc;
wire vns_shared_stb;
reg vns_shared_ack = 1'd0;
wire vns_shared_we;
wire [2:0] vns_shared_cti;
wire [1:0] vns_shared_bte;
wire vns_shared_err;
wire [1:0] vns_request;
reg vns_grant = 1'd0;
reg [3:0] vns_slave_sel = 4'd0;
reg [3:0] vns_slave_sel_r = 4'd0;
reg vns_error = 1'd0;
wire vns_wait;
wire vns_done;
reg [19:0] vns_count = 20'd1000000;
wire [13:0] vns_interface0_bank_bus_adr;
wire vns_interface0_bank_bus_we;
wire [7:0] vns_interface0_bank_bus_dat_w;
reg [7:0] vns_interface0_bank_bus_dat_r = 8'd0;
wire vns_csrbank0_reset0_re;
wire vns_csrbank0_reset0_r;
wire vns_csrbank0_reset0_we;
wire vns_csrbank0_reset0_w;
wire vns_csrbank0_scratch3_re;
wire [7:0] vns_csrbank0_scratch3_r;
wire vns_csrbank0_scratch3_we;
wire [7:0] vns_csrbank0_scratch3_w;
wire vns_csrbank0_scratch2_re;
wire [7:0] vns_csrbank0_scratch2_r;
wire vns_csrbank0_scratch2_we;
wire [7:0] vns_csrbank0_scratch2_w;
wire vns_csrbank0_scratch1_re;
wire [7:0] vns_csrbank0_scratch1_r;
wire vns_csrbank0_scratch1_we;
wire [7:0] vns_csrbank0_scratch1_w;
wire vns_csrbank0_scratch0_re;
wire [7:0] vns_csrbank0_scratch0_r;
wire vns_csrbank0_scratch0_we;
wire [7:0] vns_csrbank0_scratch0_w;
wire vns_csrbank0_bus_errors3_re;
wire [7:0] vns_csrbank0_bus_errors3_r;
wire vns_csrbank0_bus_errors3_we;
wire [7:0] vns_csrbank0_bus_errors3_w;
wire vns_csrbank0_bus_errors2_re;
wire [7:0] vns_csrbank0_bus_errors2_r;
wire vns_csrbank0_bus_errors2_we;
wire [7:0] vns_csrbank0_bus_errors2_w;
wire vns_csrbank0_bus_errors1_re;
wire [7:0] vns_csrbank0_bus_errors1_r;
wire vns_csrbank0_bus_errors1_we;
wire [7:0] vns_csrbank0_bus_errors1_w;
wire vns_csrbank0_bus_errors0_re;
wire [7:0] vns_csrbank0_bus_errors0_r;
wire vns_csrbank0_bus_errors0_we;
wire [7:0] vns_csrbank0_bus_errors0_w;
wire vns_csrbank0_sel;
wire [13:0] vns_interface1_bank_bus_adr;
wire vns_interface1_bank_bus_we;
wire [7:0] vns_interface1_bank_bus_dat_w;
reg [7:0] vns_interface1_bank_bus_dat_r = 8'd0;
wire vns_csrbank1_init_done0_re;
wire vns_csrbank1_init_done0_r;
wire vns_csrbank1_init_done0_we;
wire vns_csrbank1_init_done0_w;
wire vns_csrbank1_init_error0_re;
wire vns_csrbank1_init_error0_r;
wire vns_csrbank1_init_error0_we;
wire vns_csrbank1_init_error0_w;
wire vns_csrbank1_sel;
wire [13:0] vns_interface2_bank_bus_adr;
wire vns_interface2_bank_bus_we;
wire [7:0] vns_interface2_bank_bus_dat_w;
reg [7:0] vns_interface2_bank_bus_dat_r = 8'd0;
wire vns_csrbank2_half_sys8x_taps0_re;
wire [4:0] vns_csrbank2_half_sys8x_taps0_r;
wire vns_csrbank2_half_sys8x_taps0_we;
wire [4:0] vns_csrbank2_half_sys8x_taps0_w;
wire vns_csrbank2_wlevel_en0_re;
wire vns_csrbank2_wlevel_en0_r;
wire vns_csrbank2_wlevel_en0_we;
wire vns_csrbank2_wlevel_en0_w;
wire vns_csrbank2_dly_sel0_re;
wire [1:0] vns_csrbank2_dly_sel0_r;
wire vns_csrbank2_dly_sel0_we;
wire [1:0] vns_csrbank2_dly_sel0_w;
wire vns_csrbank2_sel;
wire [13:0] vns_interface3_bank_bus_adr;
wire vns_interface3_bank_bus_we;
wire [7:0] vns_interface3_bank_bus_dat_w;
reg [7:0] vns_interface3_bank_bus_dat_r = 8'd0;
wire vns_csrbank3_dfii_control0_re;
wire [3:0] vns_csrbank3_dfii_control0_r;
wire vns_csrbank3_dfii_control0_we;
wire [3:0] vns_csrbank3_dfii_control0_w;
wire vns_csrbank3_dfii_pi0_command0_re;
wire [5:0] vns_csrbank3_dfii_pi0_command0_r;
wire vns_csrbank3_dfii_pi0_command0_we;
wire [5:0] vns_csrbank3_dfii_pi0_command0_w;
wire vns_csrbank3_dfii_pi0_address1_re;
wire [4:0] vns_csrbank3_dfii_pi0_address1_r;
wire vns_csrbank3_dfii_pi0_address1_we;
wire [4:0] vns_csrbank3_dfii_pi0_address1_w;
wire vns_csrbank3_dfii_pi0_address0_re;
wire [7:0] vns_csrbank3_dfii_pi0_address0_r;
wire vns_csrbank3_dfii_pi0_address0_we;
wire [7:0] vns_csrbank3_dfii_pi0_address0_w;
wire vns_csrbank3_dfii_pi0_baddress0_re;
wire [2:0] vns_csrbank3_dfii_pi0_baddress0_r;
wire vns_csrbank3_dfii_pi0_baddress0_we;
wire [2:0] vns_csrbank3_dfii_pi0_baddress0_w;
wire vns_csrbank3_dfii_pi0_wrdata3_re;
wire [7:0] vns_csrbank3_dfii_pi0_wrdata3_r;
wire vns_csrbank3_dfii_pi0_wrdata3_we;
wire [7:0] vns_csrbank3_dfii_pi0_wrdata3_w;
wire vns_csrbank3_dfii_pi0_wrdata2_re;
wire [7:0] vns_csrbank3_dfii_pi0_wrdata2_r;
wire vns_csrbank3_dfii_pi0_wrdata2_we;
wire [7:0] vns_csrbank3_dfii_pi0_wrdata2_w;
wire vns_csrbank3_dfii_pi0_wrdata1_re;
wire [7:0] vns_csrbank3_dfii_pi0_wrdata1_r;
wire vns_csrbank3_dfii_pi0_wrdata1_we;
wire [7:0] vns_csrbank3_dfii_pi0_wrdata1_w;
wire vns_csrbank3_dfii_pi0_wrdata0_re;
wire [7:0] vns_csrbank3_dfii_pi0_wrdata0_r;
wire vns_csrbank3_dfii_pi0_wrdata0_we;
wire [7:0] vns_csrbank3_dfii_pi0_wrdata0_w;
wire vns_csrbank3_dfii_pi0_rddata3_re;
wire [7:0] vns_csrbank3_dfii_pi0_rddata3_r;
wire vns_csrbank3_dfii_pi0_rddata3_we;
wire [7:0] vns_csrbank3_dfii_pi0_rddata3_w;
wire vns_csrbank3_dfii_pi0_rddata2_re;
wire [7:0] vns_csrbank3_dfii_pi0_rddata2_r;
wire vns_csrbank3_dfii_pi0_rddata2_we;
wire [7:0] vns_csrbank3_dfii_pi0_rddata2_w;
wire vns_csrbank3_dfii_pi0_rddata1_re;
wire [7:0] vns_csrbank3_dfii_pi0_rddata1_r;
wire vns_csrbank3_dfii_pi0_rddata1_we;
wire [7:0] vns_csrbank3_dfii_pi0_rddata1_w;
wire vns_csrbank3_dfii_pi0_rddata0_re;
wire [7:0] vns_csrbank3_dfii_pi0_rddata0_r;
wire vns_csrbank3_dfii_pi0_rddata0_we;
wire [7:0] vns_csrbank3_dfii_pi0_rddata0_w;
wire vns_csrbank3_dfii_pi1_command0_re;
wire [5:0] vns_csrbank3_dfii_pi1_command0_r;
wire vns_csrbank3_dfii_pi1_command0_we;
wire [5:0] vns_csrbank3_dfii_pi1_command0_w;
wire vns_csrbank3_dfii_pi1_address1_re;
wire [4:0] vns_csrbank3_dfii_pi1_address1_r;
wire vns_csrbank3_dfii_pi1_address1_we;
wire [4:0] vns_csrbank3_dfii_pi1_address1_w;
wire vns_csrbank3_dfii_pi1_address0_re;
wire [7:0] vns_csrbank3_dfii_pi1_address0_r;
wire vns_csrbank3_dfii_pi1_address0_we;
wire [7:0] vns_csrbank3_dfii_pi1_address0_w;
wire vns_csrbank3_dfii_pi1_baddress0_re;
wire [2:0] vns_csrbank3_dfii_pi1_baddress0_r;
wire vns_csrbank3_dfii_pi1_baddress0_we;
wire [2:0] vns_csrbank3_dfii_pi1_baddress0_w;
wire vns_csrbank3_dfii_pi1_wrdata3_re;
wire [7:0] vns_csrbank3_dfii_pi1_wrdata3_r;
wire vns_csrbank3_dfii_pi1_wrdata3_we;
wire [7:0] vns_csrbank3_dfii_pi1_wrdata3_w;
wire vns_csrbank3_dfii_pi1_wrdata2_re;
wire [7:0] vns_csrbank3_dfii_pi1_wrdata2_r;
wire vns_csrbank3_dfii_pi1_wrdata2_we;
wire [7:0] vns_csrbank3_dfii_pi1_wrdata2_w;
wire vns_csrbank3_dfii_pi1_wrdata1_re;
wire [7:0] vns_csrbank3_dfii_pi1_wrdata1_r;
wire vns_csrbank3_dfii_pi1_wrdata1_we;
wire [7:0] vns_csrbank3_dfii_pi1_wrdata1_w;
wire vns_csrbank3_dfii_pi1_wrdata0_re;
wire [7:0] vns_csrbank3_dfii_pi1_wrdata0_r;
wire vns_csrbank3_dfii_pi1_wrdata0_we;
wire [7:0] vns_csrbank3_dfii_pi1_wrdata0_w;
wire vns_csrbank3_dfii_pi1_rddata3_re;
wire [7:0] vns_csrbank3_dfii_pi1_rddata3_r;
wire vns_csrbank3_dfii_pi1_rddata3_we;
wire [7:0] vns_csrbank3_dfii_pi1_rddata3_w;
wire vns_csrbank3_dfii_pi1_rddata2_re;
wire [7:0] vns_csrbank3_dfii_pi1_rddata2_r;
wire vns_csrbank3_dfii_pi1_rddata2_we;
wire [7:0] vns_csrbank3_dfii_pi1_rddata2_w;
wire vns_csrbank3_dfii_pi1_rddata1_re;
wire [7:0] vns_csrbank3_dfii_pi1_rddata1_r;
wire vns_csrbank3_dfii_pi1_rddata1_we;
wire [7:0] vns_csrbank3_dfii_pi1_rddata1_w;
wire vns_csrbank3_dfii_pi1_rddata0_re;
wire [7:0] vns_csrbank3_dfii_pi1_rddata0_r;
wire vns_csrbank3_dfii_pi1_rddata0_we;
wire [7:0] vns_csrbank3_dfii_pi1_rddata0_w;
wire vns_csrbank3_sel;
wire [13:0] vns_interface4_bank_bus_adr;
wire vns_interface4_bank_bus_we;
wire [7:0] vns_interface4_bank_bus_dat_w;
reg [7:0] vns_interface4_bank_bus_dat_r = 8'd0;
wire vns_csrbank4_load3_re;
wire [7:0] vns_csrbank4_load3_r;
wire vns_csrbank4_load3_we;
wire [7:0] vns_csrbank4_load3_w;
wire vns_csrbank4_load2_re;
wire [7:0] vns_csrbank4_load2_r;
wire vns_csrbank4_load2_we;
wire [7:0] vns_csrbank4_load2_w;
wire vns_csrbank4_load1_re;
wire [7:0] vns_csrbank4_load1_r;
wire vns_csrbank4_load1_we;
wire [7:0] vns_csrbank4_load1_w;
wire vns_csrbank4_load0_re;
wire [7:0] vns_csrbank4_load0_r;
wire vns_csrbank4_load0_we;
wire [7:0] vns_csrbank4_load0_w;
wire vns_csrbank4_reload3_re;
wire [7:0] vns_csrbank4_reload3_r;
wire vns_csrbank4_reload3_we;
wire [7:0] vns_csrbank4_reload3_w;
wire vns_csrbank4_reload2_re;
wire [7:0] vns_csrbank4_reload2_r;
wire vns_csrbank4_reload2_we;
wire [7:0] vns_csrbank4_reload2_w;
wire vns_csrbank4_reload1_re;
wire [7:0] vns_csrbank4_reload1_r;
wire vns_csrbank4_reload1_we;
wire [7:0] vns_csrbank4_reload1_w;
wire vns_csrbank4_reload0_re;
wire [7:0] vns_csrbank4_reload0_r;
wire vns_csrbank4_reload0_we;
wire [7:0] vns_csrbank4_reload0_w;
wire vns_csrbank4_en0_re;
wire vns_csrbank4_en0_r;
wire vns_csrbank4_en0_we;
wire vns_csrbank4_en0_w;
wire vns_csrbank4_update_value0_re;
wire vns_csrbank4_update_value0_r;
wire vns_csrbank4_update_value0_we;
wire vns_csrbank4_update_value0_w;
wire vns_csrbank4_value3_re;
wire [7:0] vns_csrbank4_value3_r;
wire vns_csrbank4_value3_we;
wire [7:0] vns_csrbank4_value3_w;
wire vns_csrbank4_value2_re;
wire [7:0] vns_csrbank4_value2_r;
wire vns_csrbank4_value2_we;
wire [7:0] vns_csrbank4_value2_w;
wire vns_csrbank4_value1_re;
wire [7:0] vns_csrbank4_value1_r;
wire vns_csrbank4_value1_we;
wire [7:0] vns_csrbank4_value1_w;
wire vns_csrbank4_value0_re;
wire [7:0] vns_csrbank4_value0_r;
wire vns_csrbank4_value0_we;
wire [7:0] vns_csrbank4_value0_w;
wire vns_csrbank4_ev_enable0_re;
wire vns_csrbank4_ev_enable0_r;
wire vns_csrbank4_ev_enable0_we;
wire vns_csrbank4_ev_enable0_w;
wire vns_csrbank4_sel;
wire [13:0] vns_interface5_bank_bus_adr;
wire vns_interface5_bank_bus_we;
wire [7:0] vns_interface5_bank_bus_dat_w;
reg [7:0] vns_interface5_bank_bus_dat_r = 8'd0;
wire vns_csrbank5_txfull_re;
wire vns_csrbank5_txfull_r;
wire vns_csrbank5_txfull_we;
wire vns_csrbank5_txfull_w;
wire vns_csrbank5_rxempty_re;
wire vns_csrbank5_rxempty_r;
wire vns_csrbank5_rxempty_we;
wire vns_csrbank5_rxempty_w;
wire vns_csrbank5_ev_enable0_re;
wire [1:0] vns_csrbank5_ev_enable0_r;
wire vns_csrbank5_ev_enable0_we;
wire [1:0] vns_csrbank5_ev_enable0_w;
wire vns_csrbank5_sel;
wire [13:0] vns_interface6_bank_bus_adr;
wire vns_interface6_bank_bus_we;
wire [7:0] vns_interface6_bank_bus_dat_w;
reg [7:0] vns_interface6_bank_bus_dat_r = 8'd0;
wire vns_csrbank6_tuning_word3_re;
wire [7:0] vns_csrbank6_tuning_word3_r;
wire vns_csrbank6_tuning_word3_we;
wire [7:0] vns_csrbank6_tuning_word3_w;
wire vns_csrbank6_tuning_word2_re;
wire [7:0] vns_csrbank6_tuning_word2_r;
wire vns_csrbank6_tuning_word2_we;
wire [7:0] vns_csrbank6_tuning_word2_w;
wire vns_csrbank6_tuning_word1_re;
wire [7:0] vns_csrbank6_tuning_word1_r;
wire vns_csrbank6_tuning_word1_we;
wire [7:0] vns_csrbank6_tuning_word1_w;
wire vns_csrbank6_tuning_word0_re;
wire [7:0] vns_csrbank6_tuning_word0_r;
wire vns_csrbank6_tuning_word0_we;
wire [7:0] vns_csrbank6_tuning_word0_w;
wire vns_csrbank6_sel;
wire [13:0] vns_adr;
wire vns_we;
wire [7:0] vns_dat_w;
wire [7:0] vns_dat_r;
reg vns_rhs_array_muxed0 = 1'd0;
reg [12:0] vns_rhs_array_muxed1 = 13'd0;
reg [2:0] vns_rhs_array_muxed2 = 3'd0;
reg vns_rhs_array_muxed3 = 1'd0;
reg vns_rhs_array_muxed4 = 1'd0;
reg vns_rhs_array_muxed5 = 1'd0;
reg vns_t_array_muxed0 = 1'd0;
reg vns_t_array_muxed1 = 1'd0;
reg vns_t_array_muxed2 = 1'd0;
reg vns_rhs_array_muxed6 = 1'd0;
reg [12:0] vns_rhs_array_muxed7 = 13'd0;
reg [2:0] vns_rhs_array_muxed8 = 3'd0;
reg vns_rhs_array_muxed9 = 1'd0;
reg vns_rhs_array_muxed10 = 1'd0;
reg vns_rhs_array_muxed11 = 1'd0;
reg vns_t_array_muxed3 = 1'd0;
reg vns_t_array_muxed4 = 1'd0;
reg vns_t_array_muxed5 = 1'd0;
reg [20:0] vns_rhs_array_muxed12 = 21'd0;
reg vns_rhs_array_muxed13 = 1'd0;
reg vns_rhs_array_muxed14 = 1'd0;
reg [20:0] vns_rhs_array_muxed15 = 21'd0;
reg vns_rhs_array_muxed16 = 1'd0;
reg vns_rhs_array_muxed17 = 1'd0;
reg [20:0] vns_rhs_array_muxed18 = 21'd0;
reg vns_rhs_array_muxed19 = 1'd0;
reg vns_rhs_array_muxed20 = 1'd0;
reg [20:0] vns_rhs_array_muxed21 = 21'd0;
reg vns_rhs_array_muxed22 = 1'd0;
reg vns_rhs_array_muxed23 = 1'd0;
reg [20:0] vns_rhs_array_muxed24 = 21'd0;
reg vns_rhs_array_muxed25 = 1'd0;
reg vns_rhs_array_muxed26 = 1'd0;
reg [20:0] vns_rhs_array_muxed27 = 21'd0;
reg vns_rhs_array_muxed28 = 1'd0;
reg vns_rhs_array_muxed29 = 1'd0;
reg [20:0] vns_rhs_array_muxed30 = 21'd0;
reg vns_rhs_array_muxed31 = 1'd0;
reg vns_rhs_array_muxed32 = 1'd0;
reg [20:0] vns_rhs_array_muxed33 = 21'd0;
reg vns_rhs_array_muxed34 = 1'd0;
reg vns_rhs_array_muxed35 = 1'd0;
reg [29:0] vns_rhs_array_muxed36 = 30'd0;
reg [31:0] vns_rhs_array_muxed37 = 32'd0;
reg [3:0] vns_rhs_array_muxed38 = 4'd0;
reg vns_rhs_array_muxed39 = 1'd0;
reg vns_rhs_array_muxed40 = 1'd0;
reg vns_rhs_array_muxed41 = 1'd0;
reg [2:0] vns_rhs_array_muxed42 = 3'd0;
reg [1:0] vns_rhs_array_muxed43 = 2'd0;
reg [2:0] vns_array_muxed0 = 3'd0;
reg [12:0] vns_array_muxed1 = 13'd0;
reg vns_array_muxed2 = 1'd0;
reg vns_array_muxed3 = 1'd0;
reg vns_array_muxed4 = 1'd0;
reg vns_array_muxed5 = 1'd0;
reg vns_array_muxed6 = 1'd0;
reg [2:0] vns_array_muxed7 = 3'd0;
reg [12:0] vns_array_muxed8 = 13'd0;
reg vns_array_muxed9 = 1'd0;
reg vns_array_muxed10 = 1'd0;
reg vns_array_muxed11 = 1'd0;
reg vns_array_muxed12 = 1'd0;
reg vns_array_muxed13 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg vns_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *) reg vns_regs1 = 1'd0;
wire vns_xilinxasyncresetsynchronizerimpl0;
wire vns_xilinxasyncresetsynchronizerimpl0_rst_meta;
wire vns_xilinxasyncresetsynchronizerimpl1;
wire vns_xilinxasyncresetsynchronizerimpl1_rst_meta;
wire vns_xilinxasyncresetsynchronizerimpl1_expr;
wire vns_xilinxasyncresetsynchronizerimpl2;
wire vns_xilinxasyncresetsynchronizerimpl2_rst_meta;
wire vns_xilinxasyncresetsynchronizerimpl2_expr;
wire vns_xilinxasyncresetsynchronizerimpl3;
wire vns_xilinxasyncresetsynchronizerimpl3_rst_meta;

// synthesis translate_off
reg dummy_s;
initial dummy_s <= 1'd0;
// synthesis translate_on
assign soc_litedramcore_serv_reset = soc_litedramcore_soccontroller_reset;
assign init_done = soc_init_done_storage;
assign init_error = soc_init_error_storage;
assign user_clk = sys_clk;
assign user_rst = sys_rst;
assign soc_aw_valid = user_port_axi_0_awvalid;
assign user_port_axi_0_awready = soc_aw_ready;
assign soc_aw_payload_addr = user_port_axi_0_awaddr;
assign soc_aw_payload_burst = user_port_axi_0_awburst;
assign soc_aw_payload_len = user_port_axi_0_awlen;
assign soc_aw_payload_size = user_port_axi_0_awsize;
assign soc_aw_payload_id = user_port_axi_0_awid;
assign soc_w_valid = user_port_axi_0_wvalid;
assign user_port_axi_0_wready = soc_w_ready;
assign soc_w_last = user_port_axi_0_wlast;
assign soc_w_payload_strb = user_port_axi_0_wstrb;
assign soc_w_payload_data = user_port_axi_0_wdata;
assign user_port_axi_0_bvalid = soc_b_valid;
assign soc_b_ready = user_port_axi_0_bready;
assign user_port_axi_0_bresp = soc_b_payload_resp;
assign user_port_axi_0_bid = soc_b_payload_id;
assign soc_ar_valid = user_port_axi_0_arvalid;
assign user_port_axi_0_arready = soc_ar_ready;
assign soc_ar_payload_addr = user_port_axi_0_araddr;
assign soc_ar_payload_burst = user_port_axi_0_arburst;
assign soc_ar_payload_len = user_port_axi_0_arlen;
assign soc_ar_payload_size = user_port_axi_0_arsize;
assign soc_ar_payload_id = user_port_axi_0_arid;
assign user_port_axi_0_rvalid = soc_r_valid;
assign soc_r_ready = user_port_axi_0_rready;
assign user_port_axi_0_rlast = soc_r_last;
assign user_port_axi_0_rresp = soc_r_payload_resp;
assign user_port_axi_0_rdata = soc_r_payload_data;
assign user_port_axi_0_rid = soc_r_payload_id;
assign soc_litedramcore_soccontroller_bus_error = vns_error;
assign soc_litedramcore_soccontroller_reset = soc_litedramcore_soccontroller_reset_re;
assign soc_litedramcore_soccontroller_bus_errors_status = soc_litedramcore_soccontroller_bus_errors;
assign soc_litedramcore_serv_ibus_stb = soc_litedramcore_serv_ibus_cyc;
assign soc_litedramcore_serv_ibus_sel = 4'd15;
assign soc_litedramcore_serv_dbus_stb = soc_litedramcore_serv_dbus_cyc;
assign soc_litedramcore_litedramcore_adr = soc_litedramcore_litedramcore_ram_bus_adr[12:0];
assign soc_litedramcore_litedramcore_ram_bus_dat_r = soc_litedramcore_litedramcore_dat_r;

// synthesis translate_off
reg dummy_d;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_ram_we <= 4'd0;
	soc_litedramcore_ram_we[0] <= (((soc_litedramcore_ram_bus_ram_bus_cyc & soc_litedramcore_ram_bus_ram_bus_stb) & soc_litedramcore_ram_bus_ram_bus_we) & soc_litedramcore_ram_bus_ram_bus_sel[0]);
	soc_litedramcore_ram_we[1] <= (((soc_litedramcore_ram_bus_ram_bus_cyc & soc_litedramcore_ram_bus_ram_bus_stb) & soc_litedramcore_ram_bus_ram_bus_we) & soc_litedramcore_ram_bus_ram_bus_sel[1]);
	soc_litedramcore_ram_we[2] <= (((soc_litedramcore_ram_bus_ram_bus_cyc & soc_litedramcore_ram_bus_ram_bus_stb) & soc_litedramcore_ram_bus_ram_bus_we) & soc_litedramcore_ram_bus_ram_bus_sel[2]);
	soc_litedramcore_ram_we[3] <= (((soc_litedramcore_ram_bus_ram_bus_cyc & soc_litedramcore_ram_bus_ram_bus_stb) & soc_litedramcore_ram_bus_ram_bus_we) & soc_litedramcore_ram_bus_ram_bus_sel[3]);
// synthesis translate_off
	dummy_d = dummy_s;
// synthesis translate_on
end
assign soc_litedramcore_ram_adr = soc_litedramcore_ram_bus_ram_bus_adr[9:0];
assign soc_litedramcore_ram_bus_ram_bus_dat_r = soc_litedramcore_ram_dat_r;
assign soc_litedramcore_ram_dat_w = soc_litedramcore_ram_bus_ram_bus_dat_w;
assign soc_litedramcore_uart_uart_sink_valid = soc_litedramcore_source_valid;
assign soc_litedramcore_source_ready = soc_litedramcore_uart_uart_sink_ready;
assign soc_litedramcore_uart_uart_sink_first = soc_litedramcore_source_first;
assign soc_litedramcore_uart_uart_sink_last = soc_litedramcore_source_last;
assign soc_litedramcore_uart_uart_sink_payload_data = soc_litedramcore_source_payload_data;
assign soc_litedramcore_sink_valid = soc_litedramcore_uart_uart_source_valid;
assign soc_litedramcore_uart_uart_source_ready = soc_litedramcore_sink_ready;
assign soc_litedramcore_sink_first = soc_litedramcore_uart_uart_source_first;
assign soc_litedramcore_sink_last = soc_litedramcore_uart_uart_source_last;
assign soc_litedramcore_sink_payload_data = soc_litedramcore_uart_uart_source_payload_data;
assign soc_litedramcore_uart_tx_fifo_sink_valid = soc_litedramcore_uart_rxtx_re;
assign soc_litedramcore_uart_tx_fifo_sink_payload_data = soc_litedramcore_uart_rxtx_r;
assign soc_litedramcore_uart_txfull_status = (~soc_litedramcore_uart_tx_fifo_sink_ready);
assign soc_litedramcore_uart_uart_source_valid = soc_litedramcore_uart_tx_fifo_source_valid;
assign soc_litedramcore_uart_tx_fifo_source_ready = soc_litedramcore_uart_uart_source_ready;
assign soc_litedramcore_uart_uart_source_first = soc_litedramcore_uart_tx_fifo_source_first;
assign soc_litedramcore_uart_uart_source_last = soc_litedramcore_uart_tx_fifo_source_last;
assign soc_litedramcore_uart_uart_source_payload_data = soc_litedramcore_uart_tx_fifo_source_payload_data;
assign soc_litedramcore_uart_tx_trigger = (~soc_litedramcore_uart_tx_fifo_sink_ready);
assign soc_litedramcore_uart_rx_fifo_sink_valid = soc_litedramcore_uart_uart_sink_valid;
assign soc_litedramcore_uart_uart_sink_ready = soc_litedramcore_uart_rx_fifo_sink_ready;
assign soc_litedramcore_uart_rx_fifo_sink_first = soc_litedramcore_uart_uart_sink_first;
assign soc_litedramcore_uart_rx_fifo_sink_last = soc_litedramcore_uart_uart_sink_last;
assign soc_litedramcore_uart_rx_fifo_sink_payload_data = soc_litedramcore_uart_uart_sink_payload_data;
assign soc_litedramcore_uart_rxempty_status = (~soc_litedramcore_uart_rx_fifo_source_valid);
assign soc_litedramcore_uart_rxtx_w = soc_litedramcore_uart_rx_fifo_source_payload_data;
assign soc_litedramcore_uart_rx_fifo_source_ready = (soc_litedramcore_uart_rx_clear | (1'd0 & soc_litedramcore_uart_rxtx_we));
assign soc_litedramcore_uart_rx_trigger = (~soc_litedramcore_uart_rx_fifo_source_valid);

// synthesis translate_off
reg dummy_d_1;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_uart_eventmanager_status_w <= 2'd0;
	soc_litedramcore_uart_eventmanager_status_w[0] <= soc_litedramcore_uart_tx_status;
	soc_litedramcore_uart_eventmanager_status_w[1] <= soc_litedramcore_uart_rx_status;
// synthesis translate_off
	dummy_d_1 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_2;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_uart_tx_clear <= 1'd0;
	if ((soc_litedramcore_uart_eventmanager_pending_re & soc_litedramcore_uart_eventmanager_pending_r[0])) begin
		soc_litedramcore_uart_tx_clear <= 1'd1;
	end
// synthesis translate_off
	dummy_d_2 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_3;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_uart_eventmanager_pending_w <= 2'd0;
	soc_litedramcore_uart_eventmanager_pending_w[0] <= soc_litedramcore_uart_tx_pending;
	soc_litedramcore_uart_eventmanager_pending_w[1] <= soc_litedramcore_uart_rx_pending;
// synthesis translate_off
	dummy_d_3 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_4;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_uart_rx_clear <= 1'd0;
	if ((soc_litedramcore_uart_eventmanager_pending_re & soc_litedramcore_uart_eventmanager_pending_r[1])) begin
		soc_litedramcore_uart_rx_clear <= 1'd1;
	end
// synthesis translate_off
	dummy_d_4 = dummy_s;
// synthesis translate_on
end
assign soc_litedramcore_uart_irq = ((soc_litedramcore_uart_eventmanager_pending_w[0] & soc_litedramcore_uart_eventmanager_storage[0]) | (soc_litedramcore_uart_eventmanager_pending_w[1] & soc_litedramcore_uart_eventmanager_storage[1]));
assign soc_litedramcore_uart_tx_status = soc_litedramcore_uart_tx_trigger;
assign soc_litedramcore_uart_rx_status = soc_litedramcore_uart_rx_trigger;
assign soc_litedramcore_uart_tx_fifo_syncfifo_din = {soc_litedramcore_uart_tx_fifo_fifo_in_last, soc_litedramcore_uart_tx_fifo_fifo_in_first, soc_litedramcore_uart_tx_fifo_fifo_in_payload_data};
assign {soc_litedramcore_uart_tx_fifo_fifo_out_last, soc_litedramcore_uart_tx_fifo_fifo_out_first, soc_litedramcore_uart_tx_fifo_fifo_out_payload_data} = soc_litedramcore_uart_tx_fifo_syncfifo_dout;
assign {soc_litedramcore_uart_tx_fifo_fifo_out_last, soc_litedramcore_uart_tx_fifo_fifo_out_first, soc_litedramcore_uart_tx_fifo_fifo_out_payload_data} = soc_litedramcore_uart_tx_fifo_syncfifo_dout;
assign {soc_litedramcore_uart_tx_fifo_fifo_out_last, soc_litedramcore_uart_tx_fifo_fifo_out_first, soc_litedramcore_uart_tx_fifo_fifo_out_payload_data} = soc_litedramcore_uart_tx_fifo_syncfifo_dout;
assign soc_litedramcore_uart_tx_fifo_sink_ready = soc_litedramcore_uart_tx_fifo_syncfifo_writable;
assign soc_litedramcore_uart_tx_fifo_syncfifo_we = soc_litedramcore_uart_tx_fifo_sink_valid;
assign soc_litedramcore_uart_tx_fifo_fifo_in_first = soc_litedramcore_uart_tx_fifo_sink_first;
assign soc_litedramcore_uart_tx_fifo_fifo_in_last = soc_litedramcore_uart_tx_fifo_sink_last;
assign soc_litedramcore_uart_tx_fifo_fifo_in_payload_data = soc_litedramcore_uart_tx_fifo_sink_payload_data;
assign soc_litedramcore_uart_tx_fifo_source_valid = soc_litedramcore_uart_tx_fifo_readable;
assign soc_litedramcore_uart_tx_fifo_source_first = soc_litedramcore_uart_tx_fifo_fifo_out_first;
assign soc_litedramcore_uart_tx_fifo_source_last = soc_litedramcore_uart_tx_fifo_fifo_out_last;
assign soc_litedramcore_uart_tx_fifo_source_payload_data = soc_litedramcore_uart_tx_fifo_fifo_out_payload_data;
assign soc_litedramcore_uart_tx_fifo_re = soc_litedramcore_uart_tx_fifo_source_ready;
assign soc_litedramcore_uart_tx_fifo_syncfifo_re = (soc_litedramcore_uart_tx_fifo_syncfifo_readable & ((~soc_litedramcore_uart_tx_fifo_readable) | soc_litedramcore_uart_tx_fifo_re));
assign soc_litedramcore_uart_tx_fifo_level1 = (soc_litedramcore_uart_tx_fifo_level0 + soc_litedramcore_uart_tx_fifo_readable);

// synthesis translate_off
reg dummy_d_5;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_uart_tx_fifo_wrport_adr <= 4'd0;
	if (soc_litedramcore_uart_tx_fifo_replace) begin
		soc_litedramcore_uart_tx_fifo_wrport_adr <= (soc_litedramcore_uart_tx_fifo_produce - 1'd1);
	end else begin
		soc_litedramcore_uart_tx_fifo_wrport_adr <= soc_litedramcore_uart_tx_fifo_produce;
	end
// synthesis translate_off
	dummy_d_5 = dummy_s;
// synthesis translate_on
end
assign soc_litedramcore_uart_tx_fifo_wrport_dat_w = soc_litedramcore_uart_tx_fifo_syncfifo_din;
assign soc_litedramcore_uart_tx_fifo_wrport_we = (soc_litedramcore_uart_tx_fifo_syncfifo_we & (soc_litedramcore_uart_tx_fifo_syncfifo_writable | soc_litedramcore_uart_tx_fifo_replace));
assign soc_litedramcore_uart_tx_fifo_do_read = (soc_litedramcore_uart_tx_fifo_syncfifo_readable & soc_litedramcore_uart_tx_fifo_syncfifo_re);
assign soc_litedramcore_uart_tx_fifo_rdport_adr = soc_litedramcore_uart_tx_fifo_consume;
assign soc_litedramcore_uart_tx_fifo_syncfifo_dout = soc_litedramcore_uart_tx_fifo_rdport_dat_r;
assign soc_litedramcore_uart_tx_fifo_rdport_re = soc_litedramcore_uart_tx_fifo_do_read;
assign soc_litedramcore_uart_tx_fifo_syncfifo_writable = (soc_litedramcore_uart_tx_fifo_level0 != 5'd16);
assign soc_litedramcore_uart_tx_fifo_syncfifo_readable = (soc_litedramcore_uart_tx_fifo_level0 != 1'd0);
assign soc_litedramcore_uart_rx_fifo_syncfifo_din = {soc_litedramcore_uart_rx_fifo_fifo_in_last, soc_litedramcore_uart_rx_fifo_fifo_in_first, soc_litedramcore_uart_rx_fifo_fifo_in_payload_data};
assign {soc_litedramcore_uart_rx_fifo_fifo_out_last, soc_litedramcore_uart_rx_fifo_fifo_out_first, soc_litedramcore_uart_rx_fifo_fifo_out_payload_data} = soc_litedramcore_uart_rx_fifo_syncfifo_dout;
assign {soc_litedramcore_uart_rx_fifo_fifo_out_last, soc_litedramcore_uart_rx_fifo_fifo_out_first, soc_litedramcore_uart_rx_fifo_fifo_out_payload_data} = soc_litedramcore_uart_rx_fifo_syncfifo_dout;
assign {soc_litedramcore_uart_rx_fifo_fifo_out_last, soc_litedramcore_uart_rx_fifo_fifo_out_first, soc_litedramcore_uart_rx_fifo_fifo_out_payload_data} = soc_litedramcore_uart_rx_fifo_syncfifo_dout;
assign soc_litedramcore_uart_rx_fifo_sink_ready = soc_litedramcore_uart_rx_fifo_syncfifo_writable;
assign soc_litedramcore_uart_rx_fifo_syncfifo_we = soc_litedramcore_uart_rx_fifo_sink_valid;
assign soc_litedramcore_uart_rx_fifo_fifo_in_first = soc_litedramcore_uart_rx_fifo_sink_first;
assign soc_litedramcore_uart_rx_fifo_fifo_in_last = soc_litedramcore_uart_rx_fifo_sink_last;
assign soc_litedramcore_uart_rx_fifo_fifo_in_payload_data = soc_litedramcore_uart_rx_fifo_sink_payload_data;
assign soc_litedramcore_uart_rx_fifo_source_valid = soc_litedramcore_uart_rx_fifo_readable;
assign soc_litedramcore_uart_rx_fifo_source_first = soc_litedramcore_uart_rx_fifo_fifo_out_first;
assign soc_litedramcore_uart_rx_fifo_source_last = soc_litedramcore_uart_rx_fifo_fifo_out_last;
assign soc_litedramcore_uart_rx_fifo_source_payload_data = soc_litedramcore_uart_rx_fifo_fifo_out_payload_data;
assign soc_litedramcore_uart_rx_fifo_re = soc_litedramcore_uart_rx_fifo_source_ready;
assign soc_litedramcore_uart_rx_fifo_syncfifo_re = (soc_litedramcore_uart_rx_fifo_syncfifo_readable & ((~soc_litedramcore_uart_rx_fifo_readable) | soc_litedramcore_uart_rx_fifo_re));
assign soc_litedramcore_uart_rx_fifo_level1 = (soc_litedramcore_uart_rx_fifo_level0 + soc_litedramcore_uart_rx_fifo_readable);

// synthesis translate_off
reg dummy_d_6;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_uart_rx_fifo_wrport_adr <= 4'd0;
	if (soc_litedramcore_uart_rx_fifo_replace) begin
		soc_litedramcore_uart_rx_fifo_wrport_adr <= (soc_litedramcore_uart_rx_fifo_produce - 1'd1);
	end else begin
		soc_litedramcore_uart_rx_fifo_wrport_adr <= soc_litedramcore_uart_rx_fifo_produce;
	end
// synthesis translate_off
	dummy_d_6 = dummy_s;
// synthesis translate_on
end
assign soc_litedramcore_uart_rx_fifo_wrport_dat_w = soc_litedramcore_uart_rx_fifo_syncfifo_din;
assign soc_litedramcore_uart_rx_fifo_wrport_we = (soc_litedramcore_uart_rx_fifo_syncfifo_we & (soc_litedramcore_uart_rx_fifo_syncfifo_writable | soc_litedramcore_uart_rx_fifo_replace));
assign soc_litedramcore_uart_rx_fifo_do_read = (soc_litedramcore_uart_rx_fifo_syncfifo_readable & soc_litedramcore_uart_rx_fifo_syncfifo_re);
assign soc_litedramcore_uart_rx_fifo_rdport_adr = soc_litedramcore_uart_rx_fifo_consume;
assign soc_litedramcore_uart_rx_fifo_syncfifo_dout = soc_litedramcore_uart_rx_fifo_rdport_dat_r;
assign soc_litedramcore_uart_rx_fifo_rdport_re = soc_litedramcore_uart_rx_fifo_do_read;
assign soc_litedramcore_uart_rx_fifo_syncfifo_writable = (soc_litedramcore_uart_rx_fifo_level0 != 5'd16);
assign soc_litedramcore_uart_rx_fifo_syncfifo_readable = (soc_litedramcore_uart_rx_fifo_level0 != 1'd0);
assign soc_litedramcore_timer_zero_trigger = (soc_litedramcore_timer_value != 1'd0);
assign soc_litedramcore_timer_eventmanager_status_w = soc_litedramcore_timer_zero_status;

// synthesis translate_off
reg dummy_d_7;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_timer_zero_clear <= 1'd0;
	if ((soc_litedramcore_timer_eventmanager_pending_re & soc_litedramcore_timer_eventmanager_pending_r)) begin
		soc_litedramcore_timer_zero_clear <= 1'd1;
	end
// synthesis translate_off
	dummy_d_7 = dummy_s;
// synthesis translate_on
end
assign soc_litedramcore_timer_eventmanager_pending_w = soc_litedramcore_timer_zero_pending;
assign soc_litedramcore_timer_irq = (soc_litedramcore_timer_eventmanager_pending_w & soc_litedramcore_timer_eventmanager_storage);
assign soc_litedramcore_timer_zero_status = soc_litedramcore_timer_zero_trigger;
assign soc_litedramcore_interface_dat_w = soc_litedramcore_bus_wishbone_dat_w;
assign soc_litedramcore_bus_wishbone_dat_r = soc_litedramcore_interface_dat_r;

// synthesis translate_off
reg dummy_d_8;
// synthesis translate_on
always @(*) begin
	vns_wb2csr_next_state <= 1'd0;
	vns_wb2csr_next_state <= vns_wb2csr_state;
	case (vns_wb2csr_state)
		1'd1: begin
			vns_wb2csr_next_state <= 1'd0;
		end
		default: begin
			if ((soc_litedramcore_bus_wishbone_cyc & soc_litedramcore_bus_wishbone_stb)) begin
				vns_wb2csr_next_state <= 1'd1;
			end
		end
	endcase
// synthesis translate_off
	dummy_d_8 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_9;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_interface_adr <= 14'd0;
	case (vns_wb2csr_state)
		1'd1: begin
		end
		default: begin
			if ((soc_litedramcore_bus_wishbone_cyc & soc_litedramcore_bus_wishbone_stb)) begin
				soc_litedramcore_interface_adr <= soc_litedramcore_bus_wishbone_adr;
			end
		end
	endcase
// synthesis translate_off
	dummy_d_9 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_10;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_interface_we <= 1'd0;
	case (vns_wb2csr_state)
		1'd1: begin
		end
		default: begin
			if ((soc_litedramcore_bus_wishbone_cyc & soc_litedramcore_bus_wishbone_stb)) begin
				soc_litedramcore_interface_we <= soc_litedramcore_bus_wishbone_we;
			end
		end
	endcase
// synthesis translate_off
	dummy_d_10 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_11;
// synthesis translate_on
always @(*) begin
	soc_litedramcore_bus_wishbone_ack <= 1'd0;
	case (vns_wb2csr_state)
		1'd1: begin
			soc_litedramcore_bus_wishbone_ack <= 1'd1;
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_11 = dummy_s;
// synthesis translate_on
end
assign soc_sys_pll_reset = rst;
assign pll_locked = soc_sys_pll_locked;
assign soc_iodelay_pll_reset = rst;
assign soc_s7pll0_clkin = clk;
assign sys_clk = soc_s7pll0_clkout_buf0;
assign sys2x_clk = soc_s7pll0_clkout_buf1;
assign sys2x_dqs_clk = soc_s7pll0_clkout_buf2;
assign soc_s7pll1_clkin = clk;
assign iodelay_clk = soc_s7pll1_clkout_buf;
assign soc_a7ddrphy_bitslip0_i = soc_a7ddrphy_dq_i_data0;

// synthesis translate_off
reg dummy_d_12;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_dfi_p0_rddata <= 32'd0;
	soc_a7ddrphy_dfi_p0_rddata[0] <= soc_a7ddrphy_bitslip0_o[0];
	soc_a7ddrphy_dfi_p0_rddata[16] <= soc_a7ddrphy_bitslip0_o[1];
	soc_a7ddrphy_dfi_p0_rddata[1] <= soc_a7ddrphy_bitslip1_o[0];
	soc_a7ddrphy_dfi_p0_rddata[17] <= soc_a7ddrphy_bitslip1_o[1];
	soc_a7ddrphy_dfi_p0_rddata[2] <= soc_a7ddrphy_bitslip2_o[0];
	soc_a7ddrphy_dfi_p0_rddata[18] <= soc_a7ddrphy_bitslip2_o[1];
	soc_a7ddrphy_dfi_p0_rddata[3] <= soc_a7ddrphy_bitslip3_o[0];
	soc_a7ddrphy_dfi_p0_rddata[19] <= soc_a7ddrphy_bitslip3_o[1];
	soc_a7ddrphy_dfi_p0_rddata[4] <= soc_a7ddrphy_bitslip4_o[0];
	soc_a7ddrphy_dfi_p0_rddata[20] <= soc_a7ddrphy_bitslip4_o[1];
	soc_a7ddrphy_dfi_p0_rddata[5] <= soc_a7ddrphy_bitslip5_o[0];
	soc_a7ddrphy_dfi_p0_rddata[21] <= soc_a7ddrphy_bitslip5_o[1];
	soc_a7ddrphy_dfi_p0_rddata[6] <= soc_a7ddrphy_bitslip6_o[0];
	soc_a7ddrphy_dfi_p0_rddata[22] <= soc_a7ddrphy_bitslip6_o[1];
	soc_a7ddrphy_dfi_p0_rddata[7] <= soc_a7ddrphy_bitslip7_o[0];
	soc_a7ddrphy_dfi_p0_rddata[23] <= soc_a7ddrphy_bitslip7_o[1];
	soc_a7ddrphy_dfi_p0_rddata[8] <= soc_a7ddrphy_bitslip8_o[0];
	soc_a7ddrphy_dfi_p0_rddata[24] <= soc_a7ddrphy_bitslip8_o[1];
	soc_a7ddrphy_dfi_p0_rddata[9] <= soc_a7ddrphy_bitslip9_o[0];
	soc_a7ddrphy_dfi_p0_rddata[25] <= soc_a7ddrphy_bitslip9_o[1];
	soc_a7ddrphy_dfi_p0_rddata[10] <= soc_a7ddrphy_bitslip10_o[0];
	soc_a7ddrphy_dfi_p0_rddata[26] <= soc_a7ddrphy_bitslip10_o[1];
	soc_a7ddrphy_dfi_p0_rddata[11] <= soc_a7ddrphy_bitslip11_o[0];
	soc_a7ddrphy_dfi_p0_rddata[27] <= soc_a7ddrphy_bitslip11_o[1];
	soc_a7ddrphy_dfi_p0_rddata[12] <= soc_a7ddrphy_bitslip12_o[0];
	soc_a7ddrphy_dfi_p0_rddata[28] <= soc_a7ddrphy_bitslip12_o[1];
	soc_a7ddrphy_dfi_p0_rddata[13] <= soc_a7ddrphy_bitslip13_o[0];
	soc_a7ddrphy_dfi_p0_rddata[29] <= soc_a7ddrphy_bitslip13_o[1];
	soc_a7ddrphy_dfi_p0_rddata[14] <= soc_a7ddrphy_bitslip14_o[0];
	soc_a7ddrphy_dfi_p0_rddata[30] <= soc_a7ddrphy_bitslip14_o[1];
	soc_a7ddrphy_dfi_p0_rddata[15] <= soc_a7ddrphy_bitslip15_o[0];
	soc_a7ddrphy_dfi_p0_rddata[31] <= soc_a7ddrphy_bitslip15_o[1];
// synthesis translate_off
	dummy_d_12 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_13;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_dfi_p1_rddata <= 32'd0;
	soc_a7ddrphy_dfi_p1_rddata[0] <= soc_a7ddrphy_bitslip0_o[2];
	soc_a7ddrphy_dfi_p1_rddata[16] <= soc_a7ddrphy_bitslip0_o[3];
	soc_a7ddrphy_dfi_p1_rddata[1] <= soc_a7ddrphy_bitslip1_o[2];
	soc_a7ddrphy_dfi_p1_rddata[17] <= soc_a7ddrphy_bitslip1_o[3];
	soc_a7ddrphy_dfi_p1_rddata[2] <= soc_a7ddrphy_bitslip2_o[2];
	soc_a7ddrphy_dfi_p1_rddata[18] <= soc_a7ddrphy_bitslip2_o[3];
	soc_a7ddrphy_dfi_p1_rddata[3] <= soc_a7ddrphy_bitslip3_o[2];
	soc_a7ddrphy_dfi_p1_rddata[19] <= soc_a7ddrphy_bitslip3_o[3];
	soc_a7ddrphy_dfi_p1_rddata[4] <= soc_a7ddrphy_bitslip4_o[2];
	soc_a7ddrphy_dfi_p1_rddata[20] <= soc_a7ddrphy_bitslip4_o[3];
	soc_a7ddrphy_dfi_p1_rddata[5] <= soc_a7ddrphy_bitslip5_o[2];
	soc_a7ddrphy_dfi_p1_rddata[21] <= soc_a7ddrphy_bitslip5_o[3];
	soc_a7ddrphy_dfi_p1_rddata[6] <= soc_a7ddrphy_bitslip6_o[2];
	soc_a7ddrphy_dfi_p1_rddata[22] <= soc_a7ddrphy_bitslip6_o[3];
	soc_a7ddrphy_dfi_p1_rddata[7] <= soc_a7ddrphy_bitslip7_o[2];
	soc_a7ddrphy_dfi_p1_rddata[23] <= soc_a7ddrphy_bitslip7_o[3];
	soc_a7ddrphy_dfi_p1_rddata[8] <= soc_a7ddrphy_bitslip8_o[2];
	soc_a7ddrphy_dfi_p1_rddata[24] <= soc_a7ddrphy_bitslip8_o[3];
	soc_a7ddrphy_dfi_p1_rddata[9] <= soc_a7ddrphy_bitslip9_o[2];
	soc_a7ddrphy_dfi_p1_rddata[25] <= soc_a7ddrphy_bitslip9_o[3];
	soc_a7ddrphy_dfi_p1_rddata[10] <= soc_a7ddrphy_bitslip10_o[2];
	soc_a7ddrphy_dfi_p1_rddata[26] <= soc_a7ddrphy_bitslip10_o[3];
	soc_a7ddrphy_dfi_p1_rddata[11] <= soc_a7ddrphy_bitslip11_o[2];
	soc_a7ddrphy_dfi_p1_rddata[27] <= soc_a7ddrphy_bitslip11_o[3];
	soc_a7ddrphy_dfi_p1_rddata[12] <= soc_a7ddrphy_bitslip12_o[2];
	soc_a7ddrphy_dfi_p1_rddata[28] <= soc_a7ddrphy_bitslip12_o[3];
	soc_a7ddrphy_dfi_p1_rddata[13] <= soc_a7ddrphy_bitslip13_o[2];
	soc_a7ddrphy_dfi_p1_rddata[29] <= soc_a7ddrphy_bitslip13_o[3];
	soc_a7ddrphy_dfi_p1_rddata[14] <= soc_a7ddrphy_bitslip14_o[2];
	soc_a7ddrphy_dfi_p1_rddata[30] <= soc_a7ddrphy_bitslip14_o[3];
	soc_a7ddrphy_dfi_p1_rddata[15] <= soc_a7ddrphy_bitslip15_o[2];
	soc_a7ddrphy_dfi_p1_rddata[31] <= soc_a7ddrphy_bitslip15_o[3];
// synthesis translate_off
	dummy_d_13 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_14;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_dfi_p2_rddata <= 32'd0;
	soc_a7ddrphy_dfi_p2_rddata[0] <= soc_a7ddrphy_bitslip0_o[4];
	soc_a7ddrphy_dfi_p2_rddata[16] <= soc_a7ddrphy_bitslip0_o[5];
	soc_a7ddrphy_dfi_p2_rddata[1] <= soc_a7ddrphy_bitslip1_o[4];
	soc_a7ddrphy_dfi_p2_rddata[17] <= soc_a7ddrphy_bitslip1_o[5];
	soc_a7ddrphy_dfi_p2_rddata[2] <= soc_a7ddrphy_bitslip2_o[4];
	soc_a7ddrphy_dfi_p2_rddata[18] <= soc_a7ddrphy_bitslip2_o[5];
	soc_a7ddrphy_dfi_p2_rddata[3] <= soc_a7ddrphy_bitslip3_o[4];
	soc_a7ddrphy_dfi_p2_rddata[19] <= soc_a7ddrphy_bitslip3_o[5];
	soc_a7ddrphy_dfi_p2_rddata[4] <= soc_a7ddrphy_bitslip4_o[4];
	soc_a7ddrphy_dfi_p2_rddata[20] <= soc_a7ddrphy_bitslip4_o[5];
	soc_a7ddrphy_dfi_p2_rddata[5] <= soc_a7ddrphy_bitslip5_o[4];
	soc_a7ddrphy_dfi_p2_rddata[21] <= soc_a7ddrphy_bitslip5_o[5];
	soc_a7ddrphy_dfi_p2_rddata[6] <= soc_a7ddrphy_bitslip6_o[4];
	soc_a7ddrphy_dfi_p2_rddata[22] <= soc_a7ddrphy_bitslip6_o[5];
	soc_a7ddrphy_dfi_p2_rddata[7] <= soc_a7ddrphy_bitslip7_o[4];
	soc_a7ddrphy_dfi_p2_rddata[23] <= soc_a7ddrphy_bitslip7_o[5];
	soc_a7ddrphy_dfi_p2_rddata[8] <= soc_a7ddrphy_bitslip8_o[4];
	soc_a7ddrphy_dfi_p2_rddata[24] <= soc_a7ddrphy_bitslip8_o[5];
	soc_a7ddrphy_dfi_p2_rddata[9] <= soc_a7ddrphy_bitslip9_o[4];
	soc_a7ddrphy_dfi_p2_rddata[25] <= soc_a7ddrphy_bitslip9_o[5];
	soc_a7ddrphy_dfi_p2_rddata[10] <= soc_a7ddrphy_bitslip10_o[4];
	soc_a7ddrphy_dfi_p2_rddata[26] <= soc_a7ddrphy_bitslip10_o[5];
	soc_a7ddrphy_dfi_p2_rddata[11] <= soc_a7ddrphy_bitslip11_o[4];
	soc_a7ddrphy_dfi_p2_rddata[27] <= soc_a7ddrphy_bitslip11_o[5];
	soc_a7ddrphy_dfi_p2_rddata[12] <= soc_a7ddrphy_bitslip12_o[4];
	soc_a7ddrphy_dfi_p2_rddata[28] <= soc_a7ddrphy_bitslip12_o[5];
	soc_a7ddrphy_dfi_p2_rddata[13] <= soc_a7ddrphy_bitslip13_o[4];
	soc_a7ddrphy_dfi_p2_rddata[29] <= soc_a7ddrphy_bitslip13_o[5];
	soc_a7ddrphy_dfi_p2_rddata[14] <= soc_a7ddrphy_bitslip14_o[4];
	soc_a7ddrphy_dfi_p2_rddata[30] <= soc_a7ddrphy_bitslip14_o[5];
	soc_a7ddrphy_dfi_p2_rddata[15] <= soc_a7ddrphy_bitslip15_o[4];
	soc_a7ddrphy_dfi_p2_rddata[31] <= soc_a7ddrphy_bitslip15_o[5];
// synthesis translate_off
	dummy_d_14 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_15;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_dfi_p3_rddata <= 32'd0;
	soc_a7ddrphy_dfi_p3_rddata[0] <= soc_a7ddrphy_bitslip0_o[6];
	soc_a7ddrphy_dfi_p3_rddata[16] <= soc_a7ddrphy_bitslip0_o[7];
	soc_a7ddrphy_dfi_p3_rddata[1] <= soc_a7ddrphy_bitslip1_o[6];
	soc_a7ddrphy_dfi_p3_rddata[17] <= soc_a7ddrphy_bitslip1_o[7];
	soc_a7ddrphy_dfi_p3_rddata[2] <= soc_a7ddrphy_bitslip2_o[6];
	soc_a7ddrphy_dfi_p3_rddata[18] <= soc_a7ddrphy_bitslip2_o[7];
	soc_a7ddrphy_dfi_p3_rddata[3] <= soc_a7ddrphy_bitslip3_o[6];
	soc_a7ddrphy_dfi_p3_rddata[19] <= soc_a7ddrphy_bitslip3_o[7];
	soc_a7ddrphy_dfi_p3_rddata[4] <= soc_a7ddrphy_bitslip4_o[6];
	soc_a7ddrphy_dfi_p3_rddata[20] <= soc_a7ddrphy_bitslip4_o[7];
	soc_a7ddrphy_dfi_p3_rddata[5] <= soc_a7ddrphy_bitslip5_o[6];
	soc_a7ddrphy_dfi_p3_rddata[21] <= soc_a7ddrphy_bitslip5_o[7];
	soc_a7ddrphy_dfi_p3_rddata[6] <= soc_a7ddrphy_bitslip6_o[6];
	soc_a7ddrphy_dfi_p3_rddata[22] <= soc_a7ddrphy_bitslip6_o[7];
	soc_a7ddrphy_dfi_p3_rddata[7] <= soc_a7ddrphy_bitslip7_o[6];
	soc_a7ddrphy_dfi_p3_rddata[23] <= soc_a7ddrphy_bitslip7_o[7];
	soc_a7ddrphy_dfi_p3_rddata[8] <= soc_a7ddrphy_bitslip8_o[6];
	soc_a7ddrphy_dfi_p3_rddata[24] <= soc_a7ddrphy_bitslip8_o[7];
	soc_a7ddrphy_dfi_p3_rddata[9] <= soc_a7ddrphy_bitslip9_o[6];
	soc_a7ddrphy_dfi_p3_rddata[25] <= soc_a7ddrphy_bitslip9_o[7];
	soc_a7ddrphy_dfi_p3_rddata[10] <= soc_a7ddrphy_bitslip10_o[6];
	soc_a7ddrphy_dfi_p3_rddata[26] <= soc_a7ddrphy_bitslip10_o[7];
	soc_a7ddrphy_dfi_p3_rddata[11] <= soc_a7ddrphy_bitslip11_o[6];
	soc_a7ddrphy_dfi_p3_rddata[27] <= soc_a7ddrphy_bitslip11_o[7];
	soc_a7ddrphy_dfi_p3_rddata[12] <= soc_a7ddrphy_bitslip12_o[6];
	soc_a7ddrphy_dfi_p3_rddata[28] <= soc_a7ddrphy_bitslip12_o[7];
	soc_a7ddrphy_dfi_p3_rddata[13] <= soc_a7ddrphy_bitslip13_o[6];
	soc_a7ddrphy_dfi_p3_rddata[29] <= soc_a7ddrphy_bitslip13_o[7];
	soc_a7ddrphy_dfi_p3_rddata[14] <= soc_a7ddrphy_bitslip14_o[6];
	soc_a7ddrphy_dfi_p3_rddata[30] <= soc_a7ddrphy_bitslip14_o[7];
	soc_a7ddrphy_dfi_p3_rddata[15] <= soc_a7ddrphy_bitslip15_o[6];
	soc_a7ddrphy_dfi_p3_rddata[31] <= soc_a7ddrphy_bitslip15_o[7];
// synthesis translate_off
	dummy_d_15 = dummy_s;
// synthesis translate_on
end
assign soc_a7ddrphy_bitslip1_i = soc_a7ddrphy_dq_i_data1;
assign soc_a7ddrphy_bitslip2_i = soc_a7ddrphy_dq_i_data2;
assign soc_a7ddrphy_bitslip3_i = soc_a7ddrphy_dq_i_data3;
assign soc_a7ddrphy_bitslip4_i = soc_a7ddrphy_dq_i_data4;
assign soc_a7ddrphy_bitslip5_i = soc_a7ddrphy_dq_i_data5;
assign soc_a7ddrphy_bitslip6_i = soc_a7ddrphy_dq_i_data6;
assign soc_a7ddrphy_bitslip7_i = soc_a7ddrphy_dq_i_data7;
assign soc_a7ddrphy_bitslip8_i = soc_a7ddrphy_dq_i_data8;
assign soc_a7ddrphy_bitslip9_i = soc_a7ddrphy_dq_i_data9;
assign soc_a7ddrphy_bitslip10_i = soc_a7ddrphy_dq_i_data10;
assign soc_a7ddrphy_bitslip11_i = soc_a7ddrphy_dq_i_data11;
assign soc_a7ddrphy_bitslip12_i = soc_a7ddrphy_dq_i_data12;
assign soc_a7ddrphy_bitslip13_i = soc_a7ddrphy_dq_i_data13;
assign soc_a7ddrphy_bitslip14_i = soc_a7ddrphy_dq_i_data14;
assign soc_a7ddrphy_bitslip15_i = soc_a7ddrphy_dq_i_data15;
assign soc_a7ddrphy_rddata_en = {soc_a7ddrphy_rddata_en_last, soc_a7ddrphy_dfi_p1_rddata_en};
assign soc_a7ddrphy_wrdata_en = {soc_a7ddrphy_wrdata_en_last, soc_a7ddrphy_dfi_p0_wrdata_en};
assign soc_a7ddrphy_dq_oe = soc_a7ddrphy_wrdata_en[1];

// synthesis translate_off
reg dummy_d_16;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_dqs_oe <= 1'd0;
	if (soc_a7ddrphy_wlevel_en_storage) begin
		soc_a7ddrphy_dqs_oe <= 1'd1;
	end else begin
		soc_a7ddrphy_dqs_oe <= soc_a7ddrphy_dq_oe;
	end
// synthesis translate_off
	dummy_d_16 = dummy_s;
// synthesis translate_on
end
assign soc_a7ddrphy_dqspattern0 = (soc_a7ddrphy_wrdata_en[0] & (~soc_a7ddrphy_wrdata_en[1]));
assign soc_a7ddrphy_dqspattern1 = (soc_a7ddrphy_wrdata_en[2] & (~soc_a7ddrphy_wrdata_en[1]));

// synthesis translate_off
reg dummy_d_17;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_dqspattern_o0 <= 8'd0;
	soc_a7ddrphy_dqspattern_o0 <= 7'd85;
	if (soc_a7ddrphy_dqspattern0) begin
		soc_a7ddrphy_dqspattern_o0 <= 5'd21;
	end
	if (soc_a7ddrphy_dqspattern1) begin
		soc_a7ddrphy_dqspattern_o0 <= 7'd84;
	end
	if (soc_a7ddrphy_wlevel_en_storage) begin
		soc_a7ddrphy_dqspattern_o0 <= 1'd0;
		if (soc_a7ddrphy_wlevel_strobe_re) begin
			soc_a7ddrphy_dqspattern_o0 <= 1'd1;
		end
	end
// synthesis translate_off
	dummy_d_17 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_18;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip0_o <= 8'd0;
	case (soc_a7ddrphy_bitslip0_value)
		1'd0: begin
			soc_a7ddrphy_bitslip0_o <= soc_a7ddrphy_bitslip0_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip0_o <= soc_a7ddrphy_bitslip0_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip0_o <= soc_a7ddrphy_bitslip0_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip0_o <= soc_a7ddrphy_bitslip0_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip0_o <= soc_a7ddrphy_bitslip0_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip0_o <= soc_a7ddrphy_bitslip0_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip0_o <= soc_a7ddrphy_bitslip0_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip0_o <= soc_a7ddrphy_bitslip0_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_18 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_19;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip1_o <= 8'd0;
	case (soc_a7ddrphy_bitslip1_value)
		1'd0: begin
			soc_a7ddrphy_bitslip1_o <= soc_a7ddrphy_bitslip1_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip1_o <= soc_a7ddrphy_bitslip1_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip1_o <= soc_a7ddrphy_bitslip1_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip1_o <= soc_a7ddrphy_bitslip1_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip1_o <= soc_a7ddrphy_bitslip1_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip1_o <= soc_a7ddrphy_bitslip1_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip1_o <= soc_a7ddrphy_bitslip1_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip1_o <= soc_a7ddrphy_bitslip1_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_19 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_20;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip2_o <= 8'd0;
	case (soc_a7ddrphy_bitslip2_value)
		1'd0: begin
			soc_a7ddrphy_bitslip2_o <= soc_a7ddrphy_bitslip2_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip2_o <= soc_a7ddrphy_bitslip2_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip2_o <= soc_a7ddrphy_bitslip2_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip2_o <= soc_a7ddrphy_bitslip2_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip2_o <= soc_a7ddrphy_bitslip2_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip2_o <= soc_a7ddrphy_bitslip2_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip2_o <= soc_a7ddrphy_bitslip2_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip2_o <= soc_a7ddrphy_bitslip2_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_20 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_21;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip3_o <= 8'd0;
	case (soc_a7ddrphy_bitslip3_value)
		1'd0: begin
			soc_a7ddrphy_bitslip3_o <= soc_a7ddrphy_bitslip3_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip3_o <= soc_a7ddrphy_bitslip3_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip3_o <= soc_a7ddrphy_bitslip3_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip3_o <= soc_a7ddrphy_bitslip3_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip3_o <= soc_a7ddrphy_bitslip3_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip3_o <= soc_a7ddrphy_bitslip3_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip3_o <= soc_a7ddrphy_bitslip3_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip3_o <= soc_a7ddrphy_bitslip3_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_21 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_22;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip4_o <= 8'd0;
	case (soc_a7ddrphy_bitslip4_value)
		1'd0: begin
			soc_a7ddrphy_bitslip4_o <= soc_a7ddrphy_bitslip4_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip4_o <= soc_a7ddrphy_bitslip4_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip4_o <= soc_a7ddrphy_bitslip4_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip4_o <= soc_a7ddrphy_bitslip4_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip4_o <= soc_a7ddrphy_bitslip4_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip4_o <= soc_a7ddrphy_bitslip4_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip4_o <= soc_a7ddrphy_bitslip4_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip4_o <= soc_a7ddrphy_bitslip4_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_22 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_23;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip5_o <= 8'd0;
	case (soc_a7ddrphy_bitslip5_value)
		1'd0: begin
			soc_a7ddrphy_bitslip5_o <= soc_a7ddrphy_bitslip5_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip5_o <= soc_a7ddrphy_bitslip5_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip5_o <= soc_a7ddrphy_bitslip5_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip5_o <= soc_a7ddrphy_bitslip5_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip5_o <= soc_a7ddrphy_bitslip5_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip5_o <= soc_a7ddrphy_bitslip5_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip5_o <= soc_a7ddrphy_bitslip5_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip5_o <= soc_a7ddrphy_bitslip5_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_23 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_24;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip6_o <= 8'd0;
	case (soc_a7ddrphy_bitslip6_value)
		1'd0: begin
			soc_a7ddrphy_bitslip6_o <= soc_a7ddrphy_bitslip6_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip6_o <= soc_a7ddrphy_bitslip6_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip6_o <= soc_a7ddrphy_bitslip6_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip6_o <= soc_a7ddrphy_bitslip6_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip6_o <= soc_a7ddrphy_bitslip6_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip6_o <= soc_a7ddrphy_bitslip6_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip6_o <= soc_a7ddrphy_bitslip6_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip6_o <= soc_a7ddrphy_bitslip6_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_24 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_25;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip7_o <= 8'd0;
	case (soc_a7ddrphy_bitslip7_value)
		1'd0: begin
			soc_a7ddrphy_bitslip7_o <= soc_a7ddrphy_bitslip7_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip7_o <= soc_a7ddrphy_bitslip7_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip7_o <= soc_a7ddrphy_bitslip7_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip7_o <= soc_a7ddrphy_bitslip7_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip7_o <= soc_a7ddrphy_bitslip7_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip7_o <= soc_a7ddrphy_bitslip7_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip7_o <= soc_a7ddrphy_bitslip7_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip7_o <= soc_a7ddrphy_bitslip7_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_25 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_26;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip8_o <= 8'd0;
	case (soc_a7ddrphy_bitslip8_value)
		1'd0: begin
			soc_a7ddrphy_bitslip8_o <= soc_a7ddrphy_bitslip8_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip8_o <= soc_a7ddrphy_bitslip8_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip8_o <= soc_a7ddrphy_bitslip8_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip8_o <= soc_a7ddrphy_bitslip8_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip8_o <= soc_a7ddrphy_bitslip8_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip8_o <= soc_a7ddrphy_bitslip8_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip8_o <= soc_a7ddrphy_bitslip8_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip8_o <= soc_a7ddrphy_bitslip8_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_26 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_27;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip9_o <= 8'd0;
	case (soc_a7ddrphy_bitslip9_value)
		1'd0: begin
			soc_a7ddrphy_bitslip9_o <= soc_a7ddrphy_bitslip9_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip9_o <= soc_a7ddrphy_bitslip9_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip9_o <= soc_a7ddrphy_bitslip9_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip9_o <= soc_a7ddrphy_bitslip9_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip9_o <= soc_a7ddrphy_bitslip9_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip9_o <= soc_a7ddrphy_bitslip9_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip9_o <= soc_a7ddrphy_bitslip9_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip9_o <= soc_a7ddrphy_bitslip9_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_27 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_28;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip10_o <= 8'd0;
	case (soc_a7ddrphy_bitslip10_value)
		1'd0: begin
			soc_a7ddrphy_bitslip10_o <= soc_a7ddrphy_bitslip10_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip10_o <= soc_a7ddrphy_bitslip10_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip10_o <= soc_a7ddrphy_bitslip10_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip10_o <= soc_a7ddrphy_bitslip10_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip10_o <= soc_a7ddrphy_bitslip10_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip10_o <= soc_a7ddrphy_bitslip10_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip10_o <= soc_a7ddrphy_bitslip10_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip10_o <= soc_a7ddrphy_bitslip10_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_28 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_29;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip11_o <= 8'd0;
	case (soc_a7ddrphy_bitslip11_value)
		1'd0: begin
			soc_a7ddrphy_bitslip11_o <= soc_a7ddrphy_bitslip11_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip11_o <= soc_a7ddrphy_bitslip11_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip11_o <= soc_a7ddrphy_bitslip11_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip11_o <= soc_a7ddrphy_bitslip11_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip11_o <= soc_a7ddrphy_bitslip11_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip11_o <= soc_a7ddrphy_bitslip11_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip11_o <= soc_a7ddrphy_bitslip11_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip11_o <= soc_a7ddrphy_bitslip11_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_29 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_30;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip12_o <= 8'd0;
	case (soc_a7ddrphy_bitslip12_value)
		1'd0: begin
			soc_a7ddrphy_bitslip12_o <= soc_a7ddrphy_bitslip12_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip12_o <= soc_a7ddrphy_bitslip12_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip12_o <= soc_a7ddrphy_bitslip12_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip12_o <= soc_a7ddrphy_bitslip12_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip12_o <= soc_a7ddrphy_bitslip12_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip12_o <= soc_a7ddrphy_bitslip12_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip12_o <= soc_a7ddrphy_bitslip12_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip12_o <= soc_a7ddrphy_bitslip12_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_30 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_31;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip13_o <= 8'd0;
	case (soc_a7ddrphy_bitslip13_value)
		1'd0: begin
			soc_a7ddrphy_bitslip13_o <= soc_a7ddrphy_bitslip13_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip13_o <= soc_a7ddrphy_bitslip13_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip13_o <= soc_a7ddrphy_bitslip13_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip13_o <= soc_a7ddrphy_bitslip13_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip13_o <= soc_a7ddrphy_bitslip13_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip13_o <= soc_a7ddrphy_bitslip13_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip13_o <= soc_a7ddrphy_bitslip13_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip13_o <= soc_a7ddrphy_bitslip13_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_31 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_32;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip14_o <= 8'd0;
	case (soc_a7ddrphy_bitslip14_value)
		1'd0: begin
			soc_a7ddrphy_bitslip14_o <= soc_a7ddrphy_bitslip14_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip14_o <= soc_a7ddrphy_bitslip14_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip14_o <= soc_a7ddrphy_bitslip14_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip14_o <= soc_a7ddrphy_bitslip14_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip14_o <= soc_a7ddrphy_bitslip14_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip14_o <= soc_a7ddrphy_bitslip14_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip14_o <= soc_a7ddrphy_bitslip14_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip14_o <= soc_a7ddrphy_bitslip14_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_32 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_33;
// synthesis translate_on
always @(*) begin
	soc_a7ddrphy_bitslip15_o <= 8'd0;
	case (soc_a7ddrphy_bitslip15_value)
		1'd0: begin
			soc_a7ddrphy_bitslip15_o <= soc_a7ddrphy_bitslip15_r[7:0];
		end
		1'd1: begin
			soc_a7ddrphy_bitslip15_o <= soc_a7ddrphy_bitslip15_r[8:1];
		end
		2'd2: begin
			soc_a7ddrphy_bitslip15_o <= soc_a7ddrphy_bitslip15_r[9:2];
		end
		2'd3: begin
			soc_a7ddrphy_bitslip15_o <= soc_a7ddrphy_bitslip15_r[10:3];
		end
		3'd4: begin
			soc_a7ddrphy_bitslip15_o <= soc_a7ddrphy_bitslip15_r[11:4];
		end
		3'd5: begin
			soc_a7ddrphy_bitslip15_o <= soc_a7ddrphy_bitslip15_r[12:5];
		end
		3'd6: begin
			soc_a7ddrphy_bitslip15_o <= soc_a7ddrphy_bitslip15_r[13:6];
		end
		3'd7: begin
			soc_a7ddrphy_bitslip15_o <= soc_a7ddrphy_bitslip15_r[14:7];
		end
	endcase
// synthesis translate_off
	dummy_d_33 = dummy_s;
// synthesis translate_on
end
assign soc_a7ddrphy_dfi_p0_address = soc_sdram_master_p0_address;
assign soc_a7ddrphy_dfi_p0_bank = soc_sdram_master_p0_bank;
assign soc_a7ddrphy_dfi_p0_cas_n = soc_sdram_master_p0_cas_n;
assign soc_a7ddrphy_dfi_p0_cs_n = soc_sdram_master_p0_cs_n;
assign soc_a7ddrphy_dfi_p0_ras_n = soc_sdram_master_p0_ras_n;
assign soc_a7ddrphy_dfi_p0_we_n = soc_sdram_master_p0_we_n;
assign soc_a7ddrphy_dfi_p0_cke = soc_sdram_master_p0_cke;
assign soc_a7ddrphy_dfi_p0_odt = soc_sdram_master_p0_odt;
assign soc_a7ddrphy_dfi_p0_reset_n = soc_sdram_master_p0_reset_n;
assign soc_a7ddrphy_dfi_p0_act_n = soc_sdram_master_p0_act_n;
assign soc_a7ddrphy_dfi_p0_wrdata = soc_sdram_master_p0_wrdata;
assign soc_a7ddrphy_dfi_p0_wrdata_en = soc_sdram_master_p0_wrdata_en;
assign soc_a7ddrphy_dfi_p0_wrdata_mask = soc_sdram_master_p0_wrdata_mask;
assign soc_a7ddrphy_dfi_p0_rddata_en = soc_sdram_master_p0_rddata_en;
assign soc_sdram_master_p0_rddata = soc_a7ddrphy_dfi_p0_rddata;
assign soc_sdram_master_p0_rddata_valid = soc_a7ddrphy_dfi_p0_rddata_valid;
assign soc_a7ddrphy_dfi_p1_address = soc_sdram_master_p1_address;
assign soc_a7ddrphy_dfi_p1_bank = soc_sdram_master_p1_bank;
assign soc_a7ddrphy_dfi_p1_cas_n = soc_sdram_master_p1_cas_n;
assign soc_a7ddrphy_dfi_p1_cs_n = soc_sdram_master_p1_cs_n;
assign soc_a7ddrphy_dfi_p1_ras_n = soc_sdram_master_p1_ras_n;
assign soc_a7ddrphy_dfi_p1_we_n = soc_sdram_master_p1_we_n;
assign soc_a7ddrphy_dfi_p1_cke = soc_sdram_master_p1_cke;
assign soc_a7ddrphy_dfi_p1_odt = soc_sdram_master_p1_odt;
assign soc_a7ddrphy_dfi_p1_reset_n = soc_sdram_master_p1_reset_n;
assign soc_a7ddrphy_dfi_p1_act_n = soc_sdram_master_p1_act_n;
assign soc_a7ddrphy_dfi_p1_wrdata = soc_sdram_master_p1_wrdata;
assign soc_a7ddrphy_dfi_p1_wrdata_en = soc_sdram_master_p1_wrdata_en;
assign soc_a7ddrphy_dfi_p1_wrdata_mask = soc_sdram_master_p1_wrdata_mask;
assign soc_a7ddrphy_dfi_p1_rddata_en = soc_sdram_master_p1_rddata_en;
assign soc_sdram_master_p1_rddata = soc_a7ddrphy_dfi_p1_rddata;
assign soc_sdram_master_p1_rddata_valid = soc_a7ddrphy_dfi_p1_rddata_valid;
assign soc_sdram_slave_p0_address = soc_sdram_dfi_p0_address;
assign soc_sdram_slave_p0_bank = soc_sdram_dfi_p0_bank;
assign soc_sdram_slave_p0_cas_n = soc_sdram_dfi_p0_cas_n;
assign soc_sdram_slave_p0_cs_n = soc_sdram_dfi_p0_cs_n;
assign soc_sdram_slave_p0_ras_n = soc_sdram_dfi_p0_ras_n;
assign soc_sdram_slave_p0_we_n = soc_sdram_dfi_p0_we_n;
assign soc_sdram_slave_p0_cke = soc_sdram_dfi_p0_cke;
assign soc_sdram_slave_p0_odt = soc_sdram_dfi_p0_odt;
assign soc_sdram_slave_p0_reset_n = soc_sdram_dfi_p0_reset_n;
assign soc_sdram_slave_p0_act_n = soc_sdram_dfi_p0_act_n;
assign soc_sdram_slave_p0_wrdata = soc_sdram_dfi_p0_wrdata;
assign soc_sdram_slave_p0_wrdata_en = soc_sdram_dfi_p0_wrdata_en;
assign soc_sdram_slave_p0_wrdata_mask = soc_sdram_dfi_p0_wrdata_mask;
assign soc_sdram_slave_p0_rddata_en = soc_sdram_dfi_p0_rddata_en;
assign soc_sdram_dfi_p0_rddata = soc_sdram_slave_p0_rddata;
assign soc_sdram_dfi_p0_rddata_valid = soc_sdram_slave_p0_rddata_valid;
assign soc_sdram_slave_p1_address = soc_sdram_dfi_p1_address;
assign soc_sdram_slave_p1_bank = soc_sdram_dfi_p1_bank;
assign soc_sdram_slave_p1_cas_n = soc_sdram_dfi_p1_cas_n;
assign soc_sdram_slave_p1_cs_n = soc_sdram_dfi_p1_cs_n;
assign soc_sdram_slave_p1_ras_n = soc_sdram_dfi_p1_ras_n;
assign soc_sdram_slave_p1_we_n = soc_sdram_dfi_p1_we_n;
assign soc_sdram_slave_p1_cke = soc_sdram_dfi_p1_cke;
assign soc_sdram_slave_p1_odt = soc_sdram_dfi_p1_odt;
assign soc_sdram_slave_p1_reset_n = soc_sdram_dfi_p1_reset_n;
assign soc_sdram_slave_p1_act_n = soc_sdram_dfi_p1_act_n;
assign soc_sdram_slave_p1_wrdata = soc_sdram_dfi_p1_wrdata;
assign soc_sdram_slave_p1_wrdata_en = soc_sdram_dfi_p1_wrdata_en;
assign soc_sdram_slave_p1_wrdata_mask = soc_sdram_dfi_p1_wrdata_mask;
assign soc_sdram_slave_p1_rddata_en = soc_sdram_dfi_p1_rddata_en;
assign soc_sdram_dfi_p1_rddata = soc_sdram_slave_p1_rddata;
assign soc_sdram_dfi_p1_rddata_valid = soc_sdram_slave_p1_rddata_valid;

// synthesis translate_off
reg dummy_d_34;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_cs_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_cs_n <= soc_sdram_slave_p1_cs_n;
	end else begin
		soc_sdram_master_p1_cs_n <= soc_sdram_inti_p1_cs_n;
	end
// synthesis translate_off
	dummy_d_34 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_35;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_ras_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_ras_n <= soc_sdram_slave_p1_ras_n;
	end else begin
		soc_sdram_master_p1_ras_n <= soc_sdram_inti_p1_ras_n;
	end
// synthesis translate_off
	dummy_d_35 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_36;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p1_rddata <= 32'd0;
	if (soc_sdram_storage[0]) begin
	end else begin
		soc_sdram_inti_p1_rddata <= soc_sdram_master_p1_rddata;
	end
// synthesis translate_off
	dummy_d_36 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_37;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_we_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_we_n <= soc_sdram_slave_p1_we_n;
	end else begin
		soc_sdram_master_p1_we_n <= soc_sdram_inti_p1_we_n;
	end
// synthesis translate_off
	dummy_d_37 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_38;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p1_rddata_valid <= 1'd0;
	if (soc_sdram_storage[0]) begin
	end else begin
		soc_sdram_inti_p1_rddata_valid <= soc_sdram_master_p1_rddata_valid;
	end
// synthesis translate_off
	dummy_d_38 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_39;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_cke <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_cke <= soc_sdram_slave_p1_cke;
	end else begin
		soc_sdram_master_p1_cke <= soc_sdram_inti_p1_cke;
	end
// synthesis translate_off
	dummy_d_39 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_40;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_odt <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_odt <= soc_sdram_slave_p1_odt;
	end else begin
		soc_sdram_master_p1_odt <= soc_sdram_inti_p1_odt;
	end
// synthesis translate_off
	dummy_d_40 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_41;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_reset_n <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_reset_n <= soc_sdram_slave_p1_reset_n;
	end else begin
		soc_sdram_master_p1_reset_n <= soc_sdram_inti_p1_reset_n;
	end
// synthesis translate_off
	dummy_d_41 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_42;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_act_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_act_n <= soc_sdram_slave_p1_act_n;
	end else begin
		soc_sdram_master_p1_act_n <= soc_sdram_inti_p1_act_n;
	end
// synthesis translate_off
	dummy_d_42 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_43;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_wrdata <= 32'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_wrdata <= soc_sdram_slave_p1_wrdata;
	end else begin
		soc_sdram_master_p1_wrdata <= soc_sdram_inti_p1_wrdata;
	end
// synthesis translate_off
	dummy_d_43 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_44;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_wrdata_en <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_wrdata_en <= soc_sdram_slave_p1_wrdata_en;
	end else begin
		soc_sdram_master_p1_wrdata_en <= soc_sdram_inti_p1_wrdata_en;
	end
// synthesis translate_off
	dummy_d_44 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_45;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_wrdata_mask <= 4'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_wrdata_mask <= soc_sdram_slave_p1_wrdata_mask;
	end else begin
		soc_sdram_master_p1_wrdata_mask <= soc_sdram_inti_p1_wrdata_mask;
	end
// synthesis translate_off
	dummy_d_45 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_46;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_rddata_en <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_rddata_en <= soc_sdram_slave_p1_rddata_en;
	end else begin
		soc_sdram_master_p1_rddata_en <= soc_sdram_inti_p1_rddata_en;
	end
// synthesis translate_off
	dummy_d_46 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_47;
// synthesis translate_on
always @(*) begin
	soc_sdram_slave_p0_rddata <= 32'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_slave_p0_rddata <= soc_sdram_master_p0_rddata;
	end else begin
	end
// synthesis translate_off
	dummy_d_47 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_48;
// synthesis translate_on
always @(*) begin
	soc_sdram_slave_p0_rddata_valid <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_slave_p0_rddata_valid <= soc_sdram_master_p0_rddata_valid;
	end else begin
	end
// synthesis translate_off
	dummy_d_48 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_49;
// synthesis translate_on
always @(*) begin
	soc_sdram_slave_p1_rddata <= 32'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_slave_p1_rddata <= soc_sdram_master_p1_rddata;
	end else begin
	end
// synthesis translate_off
	dummy_d_49 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_50;
// synthesis translate_on
always @(*) begin
	soc_sdram_slave_p1_rddata_valid <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_slave_p1_rddata_valid <= soc_sdram_master_p1_rddata_valid;
	end else begin
	end
// synthesis translate_off
	dummy_d_50 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_51;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_address <= 13'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_address <= soc_sdram_slave_p0_address;
	end else begin
		soc_sdram_master_p0_address <= soc_sdram_inti_p0_address;
	end
// synthesis translate_off
	dummy_d_51 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_52;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_bank <= 3'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_bank <= soc_sdram_slave_p0_bank;
	end else begin
		soc_sdram_master_p0_bank <= soc_sdram_inti_p0_bank;
	end
// synthesis translate_off
	dummy_d_52 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_53;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_cas_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_cas_n <= soc_sdram_slave_p0_cas_n;
	end else begin
		soc_sdram_master_p0_cas_n <= soc_sdram_inti_p0_cas_n;
	end
// synthesis translate_off
	dummy_d_53 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_54;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_cs_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_cs_n <= soc_sdram_slave_p0_cs_n;
	end else begin
		soc_sdram_master_p0_cs_n <= soc_sdram_inti_p0_cs_n;
	end
// synthesis translate_off
	dummy_d_54 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_55;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_ras_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_ras_n <= soc_sdram_slave_p0_ras_n;
	end else begin
		soc_sdram_master_p0_ras_n <= soc_sdram_inti_p0_ras_n;
	end
// synthesis translate_off
	dummy_d_55 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_56;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p0_rddata <= 32'd0;
	if (soc_sdram_storage[0]) begin
	end else begin
		soc_sdram_inti_p0_rddata <= soc_sdram_master_p0_rddata;
	end
// synthesis translate_off
	dummy_d_56 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_57;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_we_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_we_n <= soc_sdram_slave_p0_we_n;
	end else begin
		soc_sdram_master_p0_we_n <= soc_sdram_inti_p0_we_n;
	end
// synthesis translate_off
	dummy_d_57 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_58;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p0_rddata_valid <= 1'd0;
	if (soc_sdram_storage[0]) begin
	end else begin
		soc_sdram_inti_p0_rddata_valid <= soc_sdram_master_p0_rddata_valid;
	end
// synthesis translate_off
	dummy_d_58 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_59;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_cke <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_cke <= soc_sdram_slave_p0_cke;
	end else begin
		soc_sdram_master_p0_cke <= soc_sdram_inti_p0_cke;
	end
// synthesis translate_off
	dummy_d_59 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_60;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_odt <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_odt <= soc_sdram_slave_p0_odt;
	end else begin
		soc_sdram_master_p0_odt <= soc_sdram_inti_p0_odt;
	end
// synthesis translate_off
	dummy_d_60 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_61;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_reset_n <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_reset_n <= soc_sdram_slave_p0_reset_n;
	end else begin
		soc_sdram_master_p0_reset_n <= soc_sdram_inti_p0_reset_n;
	end
// synthesis translate_off
	dummy_d_61 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_62;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_act_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_act_n <= soc_sdram_slave_p0_act_n;
	end else begin
		soc_sdram_master_p0_act_n <= soc_sdram_inti_p0_act_n;
	end
// synthesis translate_off
	dummy_d_62 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_63;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_wrdata <= 32'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_wrdata <= soc_sdram_slave_p0_wrdata;
	end else begin
		soc_sdram_master_p0_wrdata <= soc_sdram_inti_p0_wrdata;
	end
// synthesis translate_off
	dummy_d_63 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_64;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_wrdata_en <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_wrdata_en <= soc_sdram_slave_p0_wrdata_en;
	end else begin
		soc_sdram_master_p0_wrdata_en <= soc_sdram_inti_p0_wrdata_en;
	end
// synthesis translate_off
	dummy_d_64 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_65;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_wrdata_mask <= 4'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_wrdata_mask <= soc_sdram_slave_p0_wrdata_mask;
	end else begin
		soc_sdram_master_p0_wrdata_mask <= soc_sdram_inti_p0_wrdata_mask;
	end
// synthesis translate_off
	dummy_d_65 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_66;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p0_rddata_en <= 1'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p0_rddata_en <= soc_sdram_slave_p0_rddata_en;
	end else begin
		soc_sdram_master_p0_rddata_en <= soc_sdram_inti_p0_rddata_en;
	end
// synthesis translate_off
	dummy_d_66 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_67;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_address <= 13'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_address <= soc_sdram_slave_p1_address;
	end else begin
		soc_sdram_master_p1_address <= soc_sdram_inti_p1_address;
	end
// synthesis translate_off
	dummy_d_67 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_68;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_bank <= 3'd0;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_bank <= soc_sdram_slave_p1_bank;
	end else begin
		soc_sdram_master_p1_bank <= soc_sdram_inti_p1_bank;
	end
// synthesis translate_off
	dummy_d_68 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_69;
// synthesis translate_on
always @(*) begin
	soc_sdram_master_p1_cas_n <= 1'd1;
	if (soc_sdram_storage[0]) begin
		soc_sdram_master_p1_cas_n <= soc_sdram_slave_p1_cas_n;
	end else begin
		soc_sdram_master_p1_cas_n <= soc_sdram_inti_p1_cas_n;
	end
// synthesis translate_off
	dummy_d_69 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_inti_p0_cke = soc_sdram_storage[1];
assign soc_sdram_inti_p1_cke = soc_sdram_storage[1];
assign soc_sdram_inti_p0_odt = soc_sdram_storage[2];
assign soc_sdram_inti_p1_odt = soc_sdram_storage[2];
assign soc_sdram_inti_p0_reset_n = soc_sdram_storage[3];
assign soc_sdram_inti_p1_reset_n = soc_sdram_storage[3];

// synthesis translate_off
reg dummy_d_70;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p0_we_n <= 1'd1;
	if (soc_sdram_phaseinjector0_command_issue_re) begin
		soc_sdram_inti_p0_we_n <= (~soc_sdram_phaseinjector0_command_storage[1]);
	end else begin
		soc_sdram_inti_p0_we_n <= 1'd1;
	end
// synthesis translate_off
	dummy_d_70 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_71;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p0_cas_n <= 1'd1;
	if (soc_sdram_phaseinjector0_command_issue_re) begin
		soc_sdram_inti_p0_cas_n <= (~soc_sdram_phaseinjector0_command_storage[2]);
	end else begin
		soc_sdram_inti_p0_cas_n <= 1'd1;
	end
// synthesis translate_off
	dummy_d_71 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_72;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p0_cs_n <= 1'd1;
	if (soc_sdram_phaseinjector0_command_issue_re) begin
		soc_sdram_inti_p0_cs_n <= {1{(~soc_sdram_phaseinjector0_command_storage[0])}};
	end else begin
		soc_sdram_inti_p0_cs_n <= {1{1'd1}};
	end
// synthesis translate_off
	dummy_d_72 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_73;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p0_ras_n <= 1'd1;
	if (soc_sdram_phaseinjector0_command_issue_re) begin
		soc_sdram_inti_p0_ras_n <= (~soc_sdram_phaseinjector0_command_storage[3]);
	end else begin
		soc_sdram_inti_p0_ras_n <= 1'd1;
	end
// synthesis translate_off
	dummy_d_73 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_inti_p0_address = soc_sdram_phaseinjector0_address_storage;
assign soc_sdram_inti_p0_bank = soc_sdram_phaseinjector0_baddress_storage;
assign soc_sdram_inti_p0_wrdata_en = (soc_sdram_phaseinjector0_command_issue_re & soc_sdram_phaseinjector0_command_storage[4]);
assign soc_sdram_inti_p0_rddata_en = (soc_sdram_phaseinjector0_command_issue_re & soc_sdram_phaseinjector0_command_storage[5]);
assign soc_sdram_inti_p0_wrdata = soc_sdram_phaseinjector0_wrdata_storage;
assign soc_sdram_inti_p0_wrdata_mask = 1'd0;

// synthesis translate_off
reg dummy_d_74;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p1_we_n <= 1'd1;
	if (soc_sdram_phaseinjector1_command_issue_re) begin
		soc_sdram_inti_p1_we_n <= (~soc_sdram_phaseinjector1_command_storage[1]);
	end else begin
		soc_sdram_inti_p1_we_n <= 1'd1;
	end
// synthesis translate_off
	dummy_d_74 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_75;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p1_cas_n <= 1'd1;
	if (soc_sdram_phaseinjector1_command_issue_re) begin
		soc_sdram_inti_p1_cas_n <= (~soc_sdram_phaseinjector1_command_storage[2]);
	end else begin
		soc_sdram_inti_p1_cas_n <= 1'd1;
	end
// synthesis translate_off
	dummy_d_75 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_76;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p1_cs_n <= 1'd1;
	if (soc_sdram_phaseinjector1_command_issue_re) begin
		soc_sdram_inti_p1_cs_n <= {1{(~soc_sdram_phaseinjector1_command_storage[0])}};
	end else begin
		soc_sdram_inti_p1_cs_n <= {1{1'd1}};
	end
// synthesis translate_off
	dummy_d_76 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_77;
// synthesis translate_on
always @(*) begin
	soc_sdram_inti_p1_ras_n <= 1'd1;
	if (soc_sdram_phaseinjector1_command_issue_re) begin
		soc_sdram_inti_p1_ras_n <= (~soc_sdram_phaseinjector1_command_storage[3]);
	end else begin
		soc_sdram_inti_p1_ras_n <= 1'd1;
	end
// synthesis translate_off
	dummy_d_77 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_inti_p1_address = soc_sdram_phaseinjector1_address_storage;
assign soc_sdram_inti_p1_bank = soc_sdram_phaseinjector1_baddress_storage;
assign soc_sdram_inti_p1_wrdata_en = (soc_sdram_phaseinjector1_command_issue_re & soc_sdram_phaseinjector1_command_storage[4]);
assign soc_sdram_inti_p1_rddata_en = (soc_sdram_phaseinjector1_command_issue_re & soc_sdram_phaseinjector1_command_storage[5]);
assign soc_sdram_inti_p1_wrdata = soc_sdram_phaseinjector1_wrdata_storage;
assign soc_sdram_inti_p1_wrdata_mask = 1'd0;
assign soc_sdram_bankmachine0_req_valid = soc_sdram_interface_bank0_valid;
assign soc_sdram_interface_bank0_ready = soc_sdram_bankmachine0_req_ready;
assign soc_sdram_bankmachine0_req_we = soc_sdram_interface_bank0_we;
assign soc_sdram_bankmachine0_req_addr = soc_sdram_interface_bank0_addr;
assign soc_sdram_interface_bank0_lock = soc_sdram_bankmachine0_req_lock;
assign soc_sdram_interface_bank0_wdata_ready = soc_sdram_bankmachine0_req_wdata_ready;
assign soc_sdram_interface_bank0_rdata_valid = soc_sdram_bankmachine0_req_rdata_valid;
assign soc_sdram_bankmachine1_req_valid = soc_sdram_interface_bank1_valid;
assign soc_sdram_interface_bank1_ready = soc_sdram_bankmachine1_req_ready;
assign soc_sdram_bankmachine1_req_we = soc_sdram_interface_bank1_we;
assign soc_sdram_bankmachine1_req_addr = soc_sdram_interface_bank1_addr;
assign soc_sdram_interface_bank1_lock = soc_sdram_bankmachine1_req_lock;
assign soc_sdram_interface_bank1_wdata_ready = soc_sdram_bankmachine1_req_wdata_ready;
assign soc_sdram_interface_bank1_rdata_valid = soc_sdram_bankmachine1_req_rdata_valid;
assign soc_sdram_bankmachine2_req_valid = soc_sdram_interface_bank2_valid;
assign soc_sdram_interface_bank2_ready = soc_sdram_bankmachine2_req_ready;
assign soc_sdram_bankmachine2_req_we = soc_sdram_interface_bank2_we;
assign soc_sdram_bankmachine2_req_addr = soc_sdram_interface_bank2_addr;
assign soc_sdram_interface_bank2_lock = soc_sdram_bankmachine2_req_lock;
assign soc_sdram_interface_bank2_wdata_ready = soc_sdram_bankmachine2_req_wdata_ready;
assign soc_sdram_interface_bank2_rdata_valid = soc_sdram_bankmachine2_req_rdata_valid;
assign soc_sdram_bankmachine3_req_valid = soc_sdram_interface_bank3_valid;
assign soc_sdram_interface_bank3_ready = soc_sdram_bankmachine3_req_ready;
assign soc_sdram_bankmachine3_req_we = soc_sdram_interface_bank3_we;
assign soc_sdram_bankmachine3_req_addr = soc_sdram_interface_bank3_addr;
assign soc_sdram_interface_bank3_lock = soc_sdram_bankmachine3_req_lock;
assign soc_sdram_interface_bank3_wdata_ready = soc_sdram_bankmachine3_req_wdata_ready;
assign soc_sdram_interface_bank3_rdata_valid = soc_sdram_bankmachine3_req_rdata_valid;
assign soc_sdram_bankmachine4_req_valid = soc_sdram_interface_bank4_valid;
assign soc_sdram_interface_bank4_ready = soc_sdram_bankmachine4_req_ready;
assign soc_sdram_bankmachine4_req_we = soc_sdram_interface_bank4_we;
assign soc_sdram_bankmachine4_req_addr = soc_sdram_interface_bank4_addr;
assign soc_sdram_interface_bank4_lock = soc_sdram_bankmachine4_req_lock;
assign soc_sdram_interface_bank4_wdata_ready = soc_sdram_bankmachine4_req_wdata_ready;
assign soc_sdram_interface_bank4_rdata_valid = soc_sdram_bankmachine4_req_rdata_valid;
assign soc_sdram_bankmachine5_req_valid = soc_sdram_interface_bank5_valid;
assign soc_sdram_interface_bank5_ready = soc_sdram_bankmachine5_req_ready;
assign soc_sdram_bankmachine5_req_we = soc_sdram_interface_bank5_we;
assign soc_sdram_bankmachine5_req_addr = soc_sdram_interface_bank5_addr;
assign soc_sdram_interface_bank5_lock = soc_sdram_bankmachine5_req_lock;
assign soc_sdram_interface_bank5_wdata_ready = soc_sdram_bankmachine5_req_wdata_ready;
assign soc_sdram_interface_bank5_rdata_valid = soc_sdram_bankmachine5_req_rdata_valid;
assign soc_sdram_bankmachine6_req_valid = soc_sdram_interface_bank6_valid;
assign soc_sdram_interface_bank6_ready = soc_sdram_bankmachine6_req_ready;
assign soc_sdram_bankmachine6_req_we = soc_sdram_interface_bank6_we;
assign soc_sdram_bankmachine6_req_addr = soc_sdram_interface_bank6_addr;
assign soc_sdram_interface_bank6_lock = soc_sdram_bankmachine6_req_lock;
assign soc_sdram_interface_bank6_wdata_ready = soc_sdram_bankmachine6_req_wdata_ready;
assign soc_sdram_interface_bank6_rdata_valid = soc_sdram_bankmachine6_req_rdata_valid;
assign soc_sdram_bankmachine7_req_valid = soc_sdram_interface_bank7_valid;
assign soc_sdram_interface_bank7_ready = soc_sdram_bankmachine7_req_ready;
assign soc_sdram_bankmachine7_req_we = soc_sdram_interface_bank7_we;
assign soc_sdram_bankmachine7_req_addr = soc_sdram_interface_bank7_addr;
assign soc_sdram_interface_bank7_lock = soc_sdram_bankmachine7_req_lock;
assign soc_sdram_interface_bank7_wdata_ready = soc_sdram_bankmachine7_req_wdata_ready;
assign soc_sdram_interface_bank7_rdata_valid = soc_sdram_bankmachine7_req_rdata_valid;
assign soc_sdram_timer_wait = (~soc_sdram_timer_done0);
assign soc_sdram_postponer_req_i = soc_sdram_timer_done0;
assign soc_sdram_wants_refresh = soc_sdram_postponer_req_o;
assign soc_sdram_timer_done1 = (soc_sdram_timer_count1 == 1'd0);
assign soc_sdram_timer_done0 = soc_sdram_timer_done1;
assign soc_sdram_timer_count0 = soc_sdram_timer_count1;
assign soc_sdram_sequencer_start1 = (soc_sdram_sequencer_start0 | (soc_sdram_sequencer_count != 1'd0));
assign soc_sdram_sequencer_done0 = (soc_sdram_sequencer_done1 & (soc_sdram_sequencer_count == 1'd0));

// synthesis translate_off
reg dummy_d_78;
// synthesis translate_on
always @(*) begin
	vns_refresher_next_state <= 2'd0;
	vns_refresher_next_state <= vns_refresher_state;
	case (vns_refresher_state)
		1'd1: begin
			if (soc_sdram_cmd_ready) begin
				vns_refresher_next_state <= 2'd2;
			end
		end
		2'd2: begin
			if (soc_sdram_sequencer_done0) begin
				vns_refresher_next_state <= 1'd0;
			end
		end
		default: begin
			if (1'd1) begin
				if (soc_sdram_wants_refresh) begin
					vns_refresher_next_state <= 1'd1;
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_78 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_79;
// synthesis translate_on
always @(*) begin
	soc_sdram_sequencer_start0 <= 1'd0;
	case (vns_refresher_state)
		1'd1: begin
			if (soc_sdram_cmd_ready) begin
				soc_sdram_sequencer_start0 <= 1'd1;
			end
		end
		2'd2: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_79 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_80;
// synthesis translate_on
always @(*) begin
	soc_sdram_cmd_last <= 1'd0;
	case (vns_refresher_state)
		1'd1: begin
		end
		2'd2: begin
			if (soc_sdram_sequencer_done0) begin
				soc_sdram_cmd_last <= 1'd1;
			end
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_80 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_81;
// synthesis translate_on
always @(*) begin
	soc_sdram_cmd_valid <= 1'd0;
	case (vns_refresher_state)
		1'd1: begin
			soc_sdram_cmd_valid <= 1'd1;
		end
		2'd2: begin
			soc_sdram_cmd_valid <= 1'd1;
			if (soc_sdram_sequencer_done0) begin
				soc_sdram_cmd_valid <= 1'd0;
			end
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_81 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_valid = soc_sdram_bankmachine0_req_valid;
assign soc_sdram_bankmachine0_req_ready = soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_ready;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we = soc_sdram_bankmachine0_req_we;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr = soc_sdram_bankmachine0_req_addr;
assign soc_sdram_bankmachine0_cmd_buffer_sink_valid = soc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_source_ready = soc_sdram_bankmachine0_cmd_buffer_sink_ready;
assign soc_sdram_bankmachine0_cmd_buffer_sink_first = soc_sdram_bankmachine0_cmd_buffer_lookahead_source_first;
assign soc_sdram_bankmachine0_cmd_buffer_sink_last = soc_sdram_bankmachine0_cmd_buffer_lookahead_source_last;
assign soc_sdram_bankmachine0_cmd_buffer_sink_payload_we = soc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we;
assign soc_sdram_bankmachine0_cmd_buffer_sink_payload_addr = soc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr;
assign soc_sdram_bankmachine0_cmd_buffer_source_ready = (soc_sdram_bankmachine0_req_wdata_ready | soc_sdram_bankmachine0_req_rdata_valid);
assign soc_sdram_bankmachine0_req_lock = (soc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid | soc_sdram_bankmachine0_cmd_buffer_source_valid);
assign soc_sdram_bankmachine0_row_hit = (soc_sdram_bankmachine0_row == soc_sdram_bankmachine0_cmd_buffer_source_payload_addr[20:8]);
assign soc_sdram_bankmachine0_cmd_payload_ba = 1'd0;

// synthesis translate_off
reg dummy_d_82;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_payload_a <= 13'd0;
	if (soc_sdram_bankmachine0_row_col_n_addr_sel) begin
		soc_sdram_bankmachine0_cmd_payload_a <= soc_sdram_bankmachine0_cmd_buffer_source_payload_addr[20:8];
	end else begin
		soc_sdram_bankmachine0_cmd_payload_a <= ((soc_sdram_bankmachine0_auto_precharge <<< 4'd10) | {soc_sdram_bankmachine0_cmd_buffer_source_payload_addr[7:0], {2{1'd0}}});
	end
// synthesis translate_off
	dummy_d_82 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine0_twtpcon_valid = ((soc_sdram_bankmachine0_cmd_valid & soc_sdram_bankmachine0_cmd_ready) & soc_sdram_bankmachine0_cmd_payload_is_write);
assign soc_sdram_bankmachine0_trccon_valid = ((soc_sdram_bankmachine0_cmd_valid & soc_sdram_bankmachine0_cmd_ready) & soc_sdram_bankmachine0_row_open);
assign soc_sdram_bankmachine0_trascon_valid = ((soc_sdram_bankmachine0_cmd_valid & soc_sdram_bankmachine0_cmd_ready) & soc_sdram_bankmachine0_row_open);

// synthesis translate_off
reg dummy_d_83;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_auto_precharge <= 1'd0;
	if ((soc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid & soc_sdram_bankmachine0_cmd_buffer_source_valid)) begin
		if ((soc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr[20:8] != soc_sdram_bankmachine0_cmd_buffer_source_payload_addr[20:8])) begin
			soc_sdram_bankmachine0_auto_precharge <= (soc_sdram_bankmachine0_row_close == 1'd0);
		end
	end
// synthesis translate_off
	dummy_d_83 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din = {soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we};
assign {soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
assign {soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
assign {soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
assign {soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_ready = soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we = soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_valid;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_first = soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_first;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_last = soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_last;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_we = soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_we;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_in_payload_addr = soc_sdram_bankmachine0_cmd_buffer_lookahead_sink_payload_addr;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_source_valid = soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_source_first = soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_first;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_source_last = soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_last;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_we = soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_we;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_source_payload_addr = soc_sdram_bankmachine0_cmd_buffer_lookahead_fifo_out_payload_addr;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re = soc_sdram_bankmachine0_cmd_buffer_lookahead_source_ready;

// synthesis translate_off
reg dummy_d_84;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= 4'd0;
	if (soc_sdram_bankmachine0_cmd_buffer_lookahead_replace) begin
		soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= (soc_sdram_bankmachine0_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr <= soc_sdram_bankmachine0_cmd_buffer_lookahead_produce;
	end
// synthesis translate_off
	dummy_d_84 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w = soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_din;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_we = (soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & (soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable | soc_sdram_bankmachine0_cmd_buffer_lookahead_replace));
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_do_read = (soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable & soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_re);
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr = soc_sdram_bankmachine0_cmd_buffer_lookahead_consume;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_dout = soc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable = (soc_sdram_bankmachine0_cmd_buffer_lookahead_level != 5'd16);
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_readable = (soc_sdram_bankmachine0_cmd_buffer_lookahead_level != 1'd0);
assign soc_sdram_bankmachine0_cmd_buffer_sink_ready = ((~soc_sdram_bankmachine0_cmd_buffer_source_valid) | soc_sdram_bankmachine0_cmd_buffer_source_ready);

// synthesis translate_off
reg dummy_d_85;
// synthesis translate_on
always @(*) begin
	vns_bankmachine0_next_state <= 3'd0;
	vns_bankmachine0_next_state <= vns_bankmachine0_state;
	case (vns_bankmachine0_state)
		1'd1: begin
			if ((soc_sdram_bankmachine0_twtpcon_ready & soc_sdram_bankmachine0_trascon_ready)) begin
				if (soc_sdram_bankmachine0_cmd_ready) begin
					vns_bankmachine0_next_state <= 3'd5;
				end
			end
		end
		2'd2: begin
			if ((soc_sdram_bankmachine0_twtpcon_ready & soc_sdram_bankmachine0_trascon_ready)) begin
				vns_bankmachine0_next_state <= 3'd5;
			end
		end
		2'd3: begin
			if (soc_sdram_bankmachine0_trccon_ready) begin
				if (soc_sdram_bankmachine0_cmd_ready) begin
					vns_bankmachine0_next_state <= 3'd6;
				end
			end
		end
		3'd4: begin
			if ((~soc_sdram_bankmachine0_refresh_req)) begin
				vns_bankmachine0_next_state <= 1'd0;
			end
		end
		3'd5: begin
			vns_bankmachine0_next_state <= 2'd3;
		end
		3'd6: begin
			vns_bankmachine0_next_state <= 1'd0;
		end
		default: begin
			if (soc_sdram_bankmachine0_refresh_req) begin
				vns_bankmachine0_next_state <= 3'd4;
			end else begin
				if (soc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine0_row_opened) begin
						if (soc_sdram_bankmachine0_row_hit) begin
							if ((soc_sdram_bankmachine0_cmd_ready & soc_sdram_bankmachine0_auto_precharge)) begin
								vns_bankmachine0_next_state <= 2'd2;
							end
						end else begin
							vns_bankmachine0_next_state <= 1'd1;
						end
					end else begin
						vns_bankmachine0_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_85 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_86;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_payload_is_write <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine0_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine0_row_opened) begin
						if (soc_sdram_bankmachine0_row_hit) begin
							if (soc_sdram_bankmachine0_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine0_cmd_payload_is_write <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_86 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_87;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_req_wdata_ready <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine0_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine0_row_opened) begin
						if (soc_sdram_bankmachine0_row_hit) begin
							if (soc_sdram_bankmachine0_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine0_req_wdata_ready <= soc_sdram_bankmachine0_cmd_ready;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_87 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_88;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_req_rdata_valid <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine0_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine0_row_opened) begin
						if (soc_sdram_bankmachine0_row_hit) begin
							if (soc_sdram_bankmachine0_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine0_req_rdata_valid <= soc_sdram_bankmachine0_cmd_ready;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_88 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_89;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_payload_ras <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
			if ((soc_sdram_bankmachine0_twtpcon_ready & soc_sdram_bankmachine0_trascon_ready)) begin
				soc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine0_trccon_ready) begin
				soc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_89 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_90;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_refresh_gnt <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			if (soc_sdram_bankmachine0_twtpcon_ready) begin
				soc_sdram_bankmachine0_refresh_gnt <= 1'd1;
			end
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_90 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_91;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_valid <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
			if ((soc_sdram_bankmachine0_twtpcon_ready & soc_sdram_bankmachine0_trascon_ready)) begin
				soc_sdram_bankmachine0_cmd_valid <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine0_trccon_ready) begin
				soc_sdram_bankmachine0_cmd_valid <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine0_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine0_row_opened) begin
						if (soc_sdram_bankmachine0_row_hit) begin
							soc_sdram_bankmachine0_cmd_valid <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_91 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_92;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_row_open <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine0_trccon_ready) begin
				soc_sdram_bankmachine0_row_open <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_92 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_93;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_row_close <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
			soc_sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd2: begin
			soc_sdram_bankmachine0_row_close <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
			soc_sdram_bankmachine0_row_close <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_93 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_94;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine0_trccon_ready) begin
				soc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_94 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_95;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_payload_cas <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine0_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine0_row_opened) begin
						if (soc_sdram_bankmachine0_row_hit) begin
							soc_sdram_bankmachine0_cmd_payload_cas <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_95 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_96;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_payload_we <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
			if ((soc_sdram_bankmachine0_twtpcon_ready & soc_sdram_bankmachine0_trascon_ready)) begin
				soc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine0_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine0_row_opened) begin
						if (soc_sdram_bankmachine0_row_hit) begin
							if (soc_sdram_bankmachine0_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_96 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_97;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
			if ((soc_sdram_bankmachine0_twtpcon_ready & soc_sdram_bankmachine0_trascon_ready)) begin
				soc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine0_trccon_ready) begin
				soc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
			end
		end
		3'd4: begin
			soc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_97 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_98;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_payload_is_read <= 1'd0;
	case (vns_bankmachine0_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine0_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine0_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine0_row_opened) begin
						if (soc_sdram_bankmachine0_row_hit) begin
							if (soc_sdram_bankmachine0_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine0_cmd_payload_is_read <= 1'd1;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_98 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_valid = soc_sdram_bankmachine1_req_valid;
assign soc_sdram_bankmachine1_req_ready = soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_ready;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we = soc_sdram_bankmachine1_req_we;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr = soc_sdram_bankmachine1_req_addr;
assign soc_sdram_bankmachine1_cmd_buffer_sink_valid = soc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_source_ready = soc_sdram_bankmachine1_cmd_buffer_sink_ready;
assign soc_sdram_bankmachine1_cmd_buffer_sink_first = soc_sdram_bankmachine1_cmd_buffer_lookahead_source_first;
assign soc_sdram_bankmachine1_cmd_buffer_sink_last = soc_sdram_bankmachine1_cmd_buffer_lookahead_source_last;
assign soc_sdram_bankmachine1_cmd_buffer_sink_payload_we = soc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we;
assign soc_sdram_bankmachine1_cmd_buffer_sink_payload_addr = soc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr;
assign soc_sdram_bankmachine1_cmd_buffer_source_ready = (soc_sdram_bankmachine1_req_wdata_ready | soc_sdram_bankmachine1_req_rdata_valid);
assign soc_sdram_bankmachine1_req_lock = (soc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid | soc_sdram_bankmachine1_cmd_buffer_source_valid);
assign soc_sdram_bankmachine1_row_hit = (soc_sdram_bankmachine1_row == soc_sdram_bankmachine1_cmd_buffer_source_payload_addr[20:8]);
assign soc_sdram_bankmachine1_cmd_payload_ba = 1'd1;

// synthesis translate_off
reg dummy_d_99;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_payload_a <= 13'd0;
	if (soc_sdram_bankmachine1_row_col_n_addr_sel) begin
		soc_sdram_bankmachine1_cmd_payload_a <= soc_sdram_bankmachine1_cmd_buffer_source_payload_addr[20:8];
	end else begin
		soc_sdram_bankmachine1_cmd_payload_a <= ((soc_sdram_bankmachine1_auto_precharge <<< 4'd10) | {soc_sdram_bankmachine1_cmd_buffer_source_payload_addr[7:0], {2{1'd0}}});
	end
// synthesis translate_off
	dummy_d_99 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine1_twtpcon_valid = ((soc_sdram_bankmachine1_cmd_valid & soc_sdram_bankmachine1_cmd_ready) & soc_sdram_bankmachine1_cmd_payload_is_write);
assign soc_sdram_bankmachine1_trccon_valid = ((soc_sdram_bankmachine1_cmd_valid & soc_sdram_bankmachine1_cmd_ready) & soc_sdram_bankmachine1_row_open);
assign soc_sdram_bankmachine1_trascon_valid = ((soc_sdram_bankmachine1_cmd_valid & soc_sdram_bankmachine1_cmd_ready) & soc_sdram_bankmachine1_row_open);

// synthesis translate_off
reg dummy_d_100;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_auto_precharge <= 1'd0;
	if ((soc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid & soc_sdram_bankmachine1_cmd_buffer_source_valid)) begin
		if ((soc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr[20:8] != soc_sdram_bankmachine1_cmd_buffer_source_payload_addr[20:8])) begin
			soc_sdram_bankmachine1_auto_precharge <= (soc_sdram_bankmachine1_row_close == 1'd0);
		end
	end
// synthesis translate_off
	dummy_d_100 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din = {soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we};
assign {soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
assign {soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
assign {soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
assign {soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_ready = soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we = soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_valid;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_first = soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_first;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_last = soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_last;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_we = soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_we;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_in_payload_addr = soc_sdram_bankmachine1_cmd_buffer_lookahead_sink_payload_addr;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_source_valid = soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_source_first = soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_first;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_source_last = soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_last;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_we = soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_we;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_source_payload_addr = soc_sdram_bankmachine1_cmd_buffer_lookahead_fifo_out_payload_addr;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re = soc_sdram_bankmachine1_cmd_buffer_lookahead_source_ready;

// synthesis translate_off
reg dummy_d_101;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= 4'd0;
	if (soc_sdram_bankmachine1_cmd_buffer_lookahead_replace) begin
		soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= (soc_sdram_bankmachine1_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr <= soc_sdram_bankmachine1_cmd_buffer_lookahead_produce;
	end
// synthesis translate_off
	dummy_d_101 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w = soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_din;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_we = (soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & (soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable | soc_sdram_bankmachine1_cmd_buffer_lookahead_replace));
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_do_read = (soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable & soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_re);
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr = soc_sdram_bankmachine1_cmd_buffer_lookahead_consume;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_dout = soc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable = (soc_sdram_bankmachine1_cmd_buffer_lookahead_level != 5'd16);
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_readable = (soc_sdram_bankmachine1_cmd_buffer_lookahead_level != 1'd0);
assign soc_sdram_bankmachine1_cmd_buffer_sink_ready = ((~soc_sdram_bankmachine1_cmd_buffer_source_valid) | soc_sdram_bankmachine1_cmd_buffer_source_ready);

// synthesis translate_off
reg dummy_d_102;
// synthesis translate_on
always @(*) begin
	vns_bankmachine1_next_state <= 3'd0;
	vns_bankmachine1_next_state <= vns_bankmachine1_state;
	case (vns_bankmachine1_state)
		1'd1: begin
			if ((soc_sdram_bankmachine1_twtpcon_ready & soc_sdram_bankmachine1_trascon_ready)) begin
				if (soc_sdram_bankmachine1_cmd_ready) begin
					vns_bankmachine1_next_state <= 3'd5;
				end
			end
		end
		2'd2: begin
			if ((soc_sdram_bankmachine1_twtpcon_ready & soc_sdram_bankmachine1_trascon_ready)) begin
				vns_bankmachine1_next_state <= 3'd5;
			end
		end
		2'd3: begin
			if (soc_sdram_bankmachine1_trccon_ready) begin
				if (soc_sdram_bankmachine1_cmd_ready) begin
					vns_bankmachine1_next_state <= 3'd6;
				end
			end
		end
		3'd4: begin
			if ((~soc_sdram_bankmachine1_refresh_req)) begin
				vns_bankmachine1_next_state <= 1'd0;
			end
		end
		3'd5: begin
			vns_bankmachine1_next_state <= 2'd3;
		end
		3'd6: begin
			vns_bankmachine1_next_state <= 1'd0;
		end
		default: begin
			if (soc_sdram_bankmachine1_refresh_req) begin
				vns_bankmachine1_next_state <= 3'd4;
			end else begin
				if (soc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine1_row_opened) begin
						if (soc_sdram_bankmachine1_row_hit) begin
							if ((soc_sdram_bankmachine1_cmd_ready & soc_sdram_bankmachine1_auto_precharge)) begin
								vns_bankmachine1_next_state <= 2'd2;
							end
						end else begin
							vns_bankmachine1_next_state <= 1'd1;
						end
					end else begin
						vns_bankmachine1_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_102 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_103;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_payload_ras <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
			if ((soc_sdram_bankmachine1_twtpcon_ready & soc_sdram_bankmachine1_trascon_ready)) begin
				soc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine1_trccon_ready) begin
				soc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_103 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_104;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_payload_we <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
			if ((soc_sdram_bankmachine1_twtpcon_ready & soc_sdram_bankmachine1_trascon_ready)) begin
				soc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine1_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine1_row_opened) begin
						if (soc_sdram_bankmachine1_row_hit) begin
							if (soc_sdram_bankmachine1_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_104 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_105;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine1_trccon_ready) begin
				soc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_105 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_106;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
			if ((soc_sdram_bankmachine1_twtpcon_ready & soc_sdram_bankmachine1_trascon_ready)) begin
				soc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine1_trccon_ready) begin
				soc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
			end
		end
		3'd4: begin
			soc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_106 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_107;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_payload_is_read <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine1_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine1_row_opened) begin
						if (soc_sdram_bankmachine1_row_hit) begin
							if (soc_sdram_bankmachine1_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine1_cmd_payload_is_read <= 1'd1;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_107 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_108;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_payload_is_write <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine1_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine1_row_opened) begin
						if (soc_sdram_bankmachine1_row_hit) begin
							if (soc_sdram_bankmachine1_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine1_cmd_payload_is_write <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_108 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_109;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_req_wdata_ready <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine1_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine1_row_opened) begin
						if (soc_sdram_bankmachine1_row_hit) begin
							if (soc_sdram_bankmachine1_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine1_req_wdata_ready <= soc_sdram_bankmachine1_cmd_ready;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_109 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_110;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_req_rdata_valid <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine1_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine1_row_opened) begin
						if (soc_sdram_bankmachine1_row_hit) begin
							if (soc_sdram_bankmachine1_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine1_req_rdata_valid <= soc_sdram_bankmachine1_cmd_ready;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_110 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_111;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_refresh_gnt <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			if (soc_sdram_bankmachine1_twtpcon_ready) begin
				soc_sdram_bankmachine1_refresh_gnt <= 1'd1;
			end
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_111 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_112;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_valid <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
			if ((soc_sdram_bankmachine1_twtpcon_ready & soc_sdram_bankmachine1_trascon_ready)) begin
				soc_sdram_bankmachine1_cmd_valid <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine1_trccon_ready) begin
				soc_sdram_bankmachine1_cmd_valid <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine1_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine1_row_opened) begin
						if (soc_sdram_bankmachine1_row_hit) begin
							soc_sdram_bankmachine1_cmd_valid <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_112 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_113;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_row_open <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine1_trccon_ready) begin
				soc_sdram_bankmachine1_row_open <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_113 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_114;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_row_close <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
			soc_sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd2: begin
			soc_sdram_bankmachine1_row_close <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
			soc_sdram_bankmachine1_row_close <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_114 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_115;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_payload_cas <= 1'd0;
	case (vns_bankmachine1_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine1_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine1_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine1_row_opened) begin
						if (soc_sdram_bankmachine1_row_hit) begin
							soc_sdram_bankmachine1_cmd_payload_cas <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_115 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_valid = soc_sdram_bankmachine2_req_valid;
assign soc_sdram_bankmachine2_req_ready = soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_ready;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we = soc_sdram_bankmachine2_req_we;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr = soc_sdram_bankmachine2_req_addr;
assign soc_sdram_bankmachine2_cmd_buffer_sink_valid = soc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_source_ready = soc_sdram_bankmachine2_cmd_buffer_sink_ready;
assign soc_sdram_bankmachine2_cmd_buffer_sink_first = soc_sdram_bankmachine2_cmd_buffer_lookahead_source_first;
assign soc_sdram_bankmachine2_cmd_buffer_sink_last = soc_sdram_bankmachine2_cmd_buffer_lookahead_source_last;
assign soc_sdram_bankmachine2_cmd_buffer_sink_payload_we = soc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we;
assign soc_sdram_bankmachine2_cmd_buffer_sink_payload_addr = soc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr;
assign soc_sdram_bankmachine2_cmd_buffer_source_ready = (soc_sdram_bankmachine2_req_wdata_ready | soc_sdram_bankmachine2_req_rdata_valid);
assign soc_sdram_bankmachine2_req_lock = (soc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid | soc_sdram_bankmachine2_cmd_buffer_source_valid);
assign soc_sdram_bankmachine2_row_hit = (soc_sdram_bankmachine2_row == soc_sdram_bankmachine2_cmd_buffer_source_payload_addr[20:8]);
assign soc_sdram_bankmachine2_cmd_payload_ba = 2'd2;

// synthesis translate_off
reg dummy_d_116;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_payload_a <= 13'd0;
	if (soc_sdram_bankmachine2_row_col_n_addr_sel) begin
		soc_sdram_bankmachine2_cmd_payload_a <= soc_sdram_bankmachine2_cmd_buffer_source_payload_addr[20:8];
	end else begin
		soc_sdram_bankmachine2_cmd_payload_a <= ((soc_sdram_bankmachine2_auto_precharge <<< 4'd10) | {soc_sdram_bankmachine2_cmd_buffer_source_payload_addr[7:0], {2{1'd0}}});
	end
// synthesis translate_off
	dummy_d_116 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine2_twtpcon_valid = ((soc_sdram_bankmachine2_cmd_valid & soc_sdram_bankmachine2_cmd_ready) & soc_sdram_bankmachine2_cmd_payload_is_write);
assign soc_sdram_bankmachine2_trccon_valid = ((soc_sdram_bankmachine2_cmd_valid & soc_sdram_bankmachine2_cmd_ready) & soc_sdram_bankmachine2_row_open);
assign soc_sdram_bankmachine2_trascon_valid = ((soc_sdram_bankmachine2_cmd_valid & soc_sdram_bankmachine2_cmd_ready) & soc_sdram_bankmachine2_row_open);

// synthesis translate_off
reg dummy_d_117;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_auto_precharge <= 1'd0;
	if ((soc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid & soc_sdram_bankmachine2_cmd_buffer_source_valid)) begin
		if ((soc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr[20:8] != soc_sdram_bankmachine2_cmd_buffer_source_payload_addr[20:8])) begin
			soc_sdram_bankmachine2_auto_precharge <= (soc_sdram_bankmachine2_row_close == 1'd0);
		end
	end
// synthesis translate_off
	dummy_d_117 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din = {soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we};
assign {soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
assign {soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
assign {soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
assign {soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_ready = soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we = soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_valid;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_first = soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_first;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_last = soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_last;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_we = soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_we;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_in_payload_addr = soc_sdram_bankmachine2_cmd_buffer_lookahead_sink_payload_addr;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_source_valid = soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_source_first = soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_first;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_source_last = soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_last;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_we = soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_we;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_source_payload_addr = soc_sdram_bankmachine2_cmd_buffer_lookahead_fifo_out_payload_addr;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re = soc_sdram_bankmachine2_cmd_buffer_lookahead_source_ready;

// synthesis translate_off
reg dummy_d_118;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= 4'd0;
	if (soc_sdram_bankmachine2_cmd_buffer_lookahead_replace) begin
		soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= (soc_sdram_bankmachine2_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr <= soc_sdram_bankmachine2_cmd_buffer_lookahead_produce;
	end
// synthesis translate_off
	dummy_d_118 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w = soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_din;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_we = (soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & (soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable | soc_sdram_bankmachine2_cmd_buffer_lookahead_replace));
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_do_read = (soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable & soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_re);
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr = soc_sdram_bankmachine2_cmd_buffer_lookahead_consume;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_dout = soc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable = (soc_sdram_bankmachine2_cmd_buffer_lookahead_level != 5'd16);
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_readable = (soc_sdram_bankmachine2_cmd_buffer_lookahead_level != 1'd0);
assign soc_sdram_bankmachine2_cmd_buffer_sink_ready = ((~soc_sdram_bankmachine2_cmd_buffer_source_valid) | soc_sdram_bankmachine2_cmd_buffer_source_ready);

// synthesis translate_off
reg dummy_d_119;
// synthesis translate_on
always @(*) begin
	vns_bankmachine2_next_state <= 3'd0;
	vns_bankmachine2_next_state <= vns_bankmachine2_state;
	case (vns_bankmachine2_state)
		1'd1: begin
			if ((soc_sdram_bankmachine2_twtpcon_ready & soc_sdram_bankmachine2_trascon_ready)) begin
				if (soc_sdram_bankmachine2_cmd_ready) begin
					vns_bankmachine2_next_state <= 3'd5;
				end
			end
		end
		2'd2: begin
			if ((soc_sdram_bankmachine2_twtpcon_ready & soc_sdram_bankmachine2_trascon_ready)) begin
				vns_bankmachine2_next_state <= 3'd5;
			end
		end
		2'd3: begin
			if (soc_sdram_bankmachine2_trccon_ready) begin
				if (soc_sdram_bankmachine2_cmd_ready) begin
					vns_bankmachine2_next_state <= 3'd6;
				end
			end
		end
		3'd4: begin
			if ((~soc_sdram_bankmachine2_refresh_req)) begin
				vns_bankmachine2_next_state <= 1'd0;
			end
		end
		3'd5: begin
			vns_bankmachine2_next_state <= 2'd3;
		end
		3'd6: begin
			vns_bankmachine2_next_state <= 1'd0;
		end
		default: begin
			if (soc_sdram_bankmachine2_refresh_req) begin
				vns_bankmachine2_next_state <= 3'd4;
			end else begin
				if (soc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine2_row_opened) begin
						if (soc_sdram_bankmachine2_row_hit) begin
							if ((soc_sdram_bankmachine2_cmd_ready & soc_sdram_bankmachine2_auto_precharge)) begin
								vns_bankmachine2_next_state <= 2'd2;
							end
						end else begin
							vns_bankmachine2_next_state <= 1'd1;
						end
					end else begin
						vns_bankmachine2_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_119 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_120;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_row_open <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine2_trccon_ready) begin
				soc_sdram_bankmachine2_row_open <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_120 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_121;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_row_close <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
			soc_sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd2: begin
			soc_sdram_bankmachine2_row_close <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
			soc_sdram_bankmachine2_row_close <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_121 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_122;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_payload_cas <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine2_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine2_row_opened) begin
						if (soc_sdram_bankmachine2_row_hit) begin
							soc_sdram_bankmachine2_cmd_payload_cas <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_122 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_123;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_payload_ras <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
			if ((soc_sdram_bankmachine2_twtpcon_ready & soc_sdram_bankmachine2_trascon_ready)) begin
				soc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine2_trccon_ready) begin
				soc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_123 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_124;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_payload_we <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
			if ((soc_sdram_bankmachine2_twtpcon_ready & soc_sdram_bankmachine2_trascon_ready)) begin
				soc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine2_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine2_row_opened) begin
						if (soc_sdram_bankmachine2_row_hit) begin
							if (soc_sdram_bankmachine2_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_124 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_125;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine2_trccon_ready) begin
				soc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_125 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_126;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
			if ((soc_sdram_bankmachine2_twtpcon_ready & soc_sdram_bankmachine2_trascon_ready)) begin
				soc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine2_trccon_ready) begin
				soc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
			end
		end
		3'd4: begin
			soc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_126 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_127;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_payload_is_read <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine2_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine2_row_opened) begin
						if (soc_sdram_bankmachine2_row_hit) begin
							if (soc_sdram_bankmachine2_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine2_cmd_payload_is_read <= 1'd1;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_127 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_128;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_payload_is_write <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine2_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine2_row_opened) begin
						if (soc_sdram_bankmachine2_row_hit) begin
							if (soc_sdram_bankmachine2_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine2_cmd_payload_is_write <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_128 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_129;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_req_wdata_ready <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine2_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine2_row_opened) begin
						if (soc_sdram_bankmachine2_row_hit) begin
							if (soc_sdram_bankmachine2_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine2_req_wdata_ready <= soc_sdram_bankmachine2_cmd_ready;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_129 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_130;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_req_rdata_valid <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine2_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine2_row_opened) begin
						if (soc_sdram_bankmachine2_row_hit) begin
							if (soc_sdram_bankmachine2_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine2_req_rdata_valid <= soc_sdram_bankmachine2_cmd_ready;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_130 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_131;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_refresh_gnt <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			if (soc_sdram_bankmachine2_twtpcon_ready) begin
				soc_sdram_bankmachine2_refresh_gnt <= 1'd1;
			end
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_131 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_132;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_valid <= 1'd0;
	case (vns_bankmachine2_state)
		1'd1: begin
			if ((soc_sdram_bankmachine2_twtpcon_ready & soc_sdram_bankmachine2_trascon_ready)) begin
				soc_sdram_bankmachine2_cmd_valid <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine2_trccon_ready) begin
				soc_sdram_bankmachine2_cmd_valid <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine2_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine2_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine2_row_opened) begin
						if (soc_sdram_bankmachine2_row_hit) begin
							soc_sdram_bankmachine2_cmd_valid <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_132 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_valid = soc_sdram_bankmachine3_req_valid;
assign soc_sdram_bankmachine3_req_ready = soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_ready;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we = soc_sdram_bankmachine3_req_we;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr = soc_sdram_bankmachine3_req_addr;
assign soc_sdram_bankmachine3_cmd_buffer_sink_valid = soc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_source_ready = soc_sdram_bankmachine3_cmd_buffer_sink_ready;
assign soc_sdram_bankmachine3_cmd_buffer_sink_first = soc_sdram_bankmachine3_cmd_buffer_lookahead_source_first;
assign soc_sdram_bankmachine3_cmd_buffer_sink_last = soc_sdram_bankmachine3_cmd_buffer_lookahead_source_last;
assign soc_sdram_bankmachine3_cmd_buffer_sink_payload_we = soc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we;
assign soc_sdram_bankmachine3_cmd_buffer_sink_payload_addr = soc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr;
assign soc_sdram_bankmachine3_cmd_buffer_source_ready = (soc_sdram_bankmachine3_req_wdata_ready | soc_sdram_bankmachine3_req_rdata_valid);
assign soc_sdram_bankmachine3_req_lock = (soc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid | soc_sdram_bankmachine3_cmd_buffer_source_valid);
assign soc_sdram_bankmachine3_row_hit = (soc_sdram_bankmachine3_row == soc_sdram_bankmachine3_cmd_buffer_source_payload_addr[20:8]);
assign soc_sdram_bankmachine3_cmd_payload_ba = 2'd3;

// synthesis translate_off
reg dummy_d_133;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_payload_a <= 13'd0;
	if (soc_sdram_bankmachine3_row_col_n_addr_sel) begin
		soc_sdram_bankmachine3_cmd_payload_a <= soc_sdram_bankmachine3_cmd_buffer_source_payload_addr[20:8];
	end else begin
		soc_sdram_bankmachine3_cmd_payload_a <= ((soc_sdram_bankmachine3_auto_precharge <<< 4'd10) | {soc_sdram_bankmachine3_cmd_buffer_source_payload_addr[7:0], {2{1'd0}}});
	end
// synthesis translate_off
	dummy_d_133 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine3_twtpcon_valid = ((soc_sdram_bankmachine3_cmd_valid & soc_sdram_bankmachine3_cmd_ready) & soc_sdram_bankmachine3_cmd_payload_is_write);
assign soc_sdram_bankmachine3_trccon_valid = ((soc_sdram_bankmachine3_cmd_valid & soc_sdram_bankmachine3_cmd_ready) & soc_sdram_bankmachine3_row_open);
assign soc_sdram_bankmachine3_trascon_valid = ((soc_sdram_bankmachine3_cmd_valid & soc_sdram_bankmachine3_cmd_ready) & soc_sdram_bankmachine3_row_open);

// synthesis translate_off
reg dummy_d_134;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_auto_precharge <= 1'd0;
	if ((soc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid & soc_sdram_bankmachine3_cmd_buffer_source_valid)) begin
		if ((soc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr[20:8] != soc_sdram_bankmachine3_cmd_buffer_source_payload_addr[20:8])) begin
			soc_sdram_bankmachine3_auto_precharge <= (soc_sdram_bankmachine3_row_close == 1'd0);
		end
	end
// synthesis translate_off
	dummy_d_134 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din = {soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we};
assign {soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
assign {soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
assign {soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
assign {soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_ready = soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we = soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_valid;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_first = soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_first;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_last = soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_last;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_we = soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_we;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_in_payload_addr = soc_sdram_bankmachine3_cmd_buffer_lookahead_sink_payload_addr;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_source_valid = soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_source_first = soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_first;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_source_last = soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_last;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_we = soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_we;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_source_payload_addr = soc_sdram_bankmachine3_cmd_buffer_lookahead_fifo_out_payload_addr;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re = soc_sdram_bankmachine3_cmd_buffer_lookahead_source_ready;

// synthesis translate_off
reg dummy_d_135;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= 4'd0;
	if (soc_sdram_bankmachine3_cmd_buffer_lookahead_replace) begin
		soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= (soc_sdram_bankmachine3_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr <= soc_sdram_bankmachine3_cmd_buffer_lookahead_produce;
	end
// synthesis translate_off
	dummy_d_135 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w = soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_din;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_we = (soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & (soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable | soc_sdram_bankmachine3_cmd_buffer_lookahead_replace));
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_do_read = (soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable & soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_re);
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr = soc_sdram_bankmachine3_cmd_buffer_lookahead_consume;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_dout = soc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable = (soc_sdram_bankmachine3_cmd_buffer_lookahead_level != 5'd16);
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_readable = (soc_sdram_bankmachine3_cmd_buffer_lookahead_level != 1'd0);
assign soc_sdram_bankmachine3_cmd_buffer_sink_ready = ((~soc_sdram_bankmachine3_cmd_buffer_source_valid) | soc_sdram_bankmachine3_cmd_buffer_source_ready);

// synthesis translate_off
reg dummy_d_136;
// synthesis translate_on
always @(*) begin
	vns_bankmachine3_next_state <= 3'd0;
	vns_bankmachine3_next_state <= vns_bankmachine3_state;
	case (vns_bankmachine3_state)
		1'd1: begin
			if ((soc_sdram_bankmachine3_twtpcon_ready & soc_sdram_bankmachine3_trascon_ready)) begin
				if (soc_sdram_bankmachine3_cmd_ready) begin
					vns_bankmachine3_next_state <= 3'd5;
				end
			end
		end
		2'd2: begin
			if ((soc_sdram_bankmachine3_twtpcon_ready & soc_sdram_bankmachine3_trascon_ready)) begin
				vns_bankmachine3_next_state <= 3'd5;
			end
		end
		2'd3: begin
			if (soc_sdram_bankmachine3_trccon_ready) begin
				if (soc_sdram_bankmachine3_cmd_ready) begin
					vns_bankmachine3_next_state <= 3'd6;
				end
			end
		end
		3'd4: begin
			if ((~soc_sdram_bankmachine3_refresh_req)) begin
				vns_bankmachine3_next_state <= 1'd0;
			end
		end
		3'd5: begin
			vns_bankmachine3_next_state <= 2'd3;
		end
		3'd6: begin
			vns_bankmachine3_next_state <= 1'd0;
		end
		default: begin
			if (soc_sdram_bankmachine3_refresh_req) begin
				vns_bankmachine3_next_state <= 3'd4;
			end else begin
				if (soc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine3_row_opened) begin
						if (soc_sdram_bankmachine3_row_hit) begin
							if ((soc_sdram_bankmachine3_cmd_ready & soc_sdram_bankmachine3_auto_precharge)) begin
								vns_bankmachine3_next_state <= 2'd2;
							end
						end else begin
							vns_bankmachine3_next_state <= 1'd1;
						end
					end else begin
						vns_bankmachine3_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_136 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_137;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_refresh_gnt <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			if (soc_sdram_bankmachine3_twtpcon_ready) begin
				soc_sdram_bankmachine3_refresh_gnt <= 1'd1;
			end
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_137 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_138;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_valid <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
			if ((soc_sdram_bankmachine3_twtpcon_ready & soc_sdram_bankmachine3_trascon_ready)) begin
				soc_sdram_bankmachine3_cmd_valid <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine3_trccon_ready) begin
				soc_sdram_bankmachine3_cmd_valid <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine3_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine3_row_opened) begin
						if (soc_sdram_bankmachine3_row_hit) begin
							soc_sdram_bankmachine3_cmd_valid <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_138 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_139;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_row_open <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine3_trccon_ready) begin
				soc_sdram_bankmachine3_row_open <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_139 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_140;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_row_close <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
			soc_sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd2: begin
			soc_sdram_bankmachine3_row_close <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
			soc_sdram_bankmachine3_row_close <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_140 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_141;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_payload_cas <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine3_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine3_row_opened) begin
						if (soc_sdram_bankmachine3_row_hit) begin
							soc_sdram_bankmachine3_cmd_payload_cas <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_141 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_142;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_payload_ras <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
			if ((soc_sdram_bankmachine3_twtpcon_ready & soc_sdram_bankmachine3_trascon_ready)) begin
				soc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine3_trccon_ready) begin
				soc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_142 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_143;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_payload_we <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
			if ((soc_sdram_bankmachine3_twtpcon_ready & soc_sdram_bankmachine3_trascon_ready)) begin
				soc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine3_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine3_row_opened) begin
						if (soc_sdram_bankmachine3_row_hit) begin
							if (soc_sdram_bankmachine3_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_143 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_144;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine3_trccon_ready) begin
				soc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_144 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_145;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
			if ((soc_sdram_bankmachine3_twtpcon_ready & soc_sdram_bankmachine3_trascon_ready)) begin
				soc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine3_trccon_ready) begin
				soc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
			end
		end
		3'd4: begin
			soc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_145 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_146;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_payload_is_read <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine3_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine3_row_opened) begin
						if (soc_sdram_bankmachine3_row_hit) begin
							if (soc_sdram_bankmachine3_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine3_cmd_payload_is_read <= 1'd1;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_146 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_147;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_payload_is_write <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine3_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine3_row_opened) begin
						if (soc_sdram_bankmachine3_row_hit) begin
							if (soc_sdram_bankmachine3_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine3_cmd_payload_is_write <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_147 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_148;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_req_wdata_ready <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine3_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine3_row_opened) begin
						if (soc_sdram_bankmachine3_row_hit) begin
							if (soc_sdram_bankmachine3_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine3_req_wdata_ready <= soc_sdram_bankmachine3_cmd_ready;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_148 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_149;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_req_rdata_valid <= 1'd0;
	case (vns_bankmachine3_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine3_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine3_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine3_row_opened) begin
						if (soc_sdram_bankmachine3_row_hit) begin
							if (soc_sdram_bankmachine3_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine3_req_rdata_valid <= soc_sdram_bankmachine3_cmd_ready;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_149 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_valid = soc_sdram_bankmachine4_req_valid;
assign soc_sdram_bankmachine4_req_ready = soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_ready;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we = soc_sdram_bankmachine4_req_we;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr = soc_sdram_bankmachine4_req_addr;
assign soc_sdram_bankmachine4_cmd_buffer_sink_valid = soc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_source_ready = soc_sdram_bankmachine4_cmd_buffer_sink_ready;
assign soc_sdram_bankmachine4_cmd_buffer_sink_first = soc_sdram_bankmachine4_cmd_buffer_lookahead_source_first;
assign soc_sdram_bankmachine4_cmd_buffer_sink_last = soc_sdram_bankmachine4_cmd_buffer_lookahead_source_last;
assign soc_sdram_bankmachine4_cmd_buffer_sink_payload_we = soc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we;
assign soc_sdram_bankmachine4_cmd_buffer_sink_payload_addr = soc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr;
assign soc_sdram_bankmachine4_cmd_buffer_source_ready = (soc_sdram_bankmachine4_req_wdata_ready | soc_sdram_bankmachine4_req_rdata_valid);
assign soc_sdram_bankmachine4_req_lock = (soc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid | soc_sdram_bankmachine4_cmd_buffer_source_valid);
assign soc_sdram_bankmachine4_row_hit = (soc_sdram_bankmachine4_row == soc_sdram_bankmachine4_cmd_buffer_source_payload_addr[20:8]);
assign soc_sdram_bankmachine4_cmd_payload_ba = 3'd4;

// synthesis translate_off
reg dummy_d_150;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_payload_a <= 13'd0;
	if (soc_sdram_bankmachine4_row_col_n_addr_sel) begin
		soc_sdram_bankmachine4_cmd_payload_a <= soc_sdram_bankmachine4_cmd_buffer_source_payload_addr[20:8];
	end else begin
		soc_sdram_bankmachine4_cmd_payload_a <= ((soc_sdram_bankmachine4_auto_precharge <<< 4'd10) | {soc_sdram_bankmachine4_cmd_buffer_source_payload_addr[7:0], {2{1'd0}}});
	end
// synthesis translate_off
	dummy_d_150 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine4_twtpcon_valid = ((soc_sdram_bankmachine4_cmd_valid & soc_sdram_bankmachine4_cmd_ready) & soc_sdram_bankmachine4_cmd_payload_is_write);
assign soc_sdram_bankmachine4_trccon_valid = ((soc_sdram_bankmachine4_cmd_valid & soc_sdram_bankmachine4_cmd_ready) & soc_sdram_bankmachine4_row_open);
assign soc_sdram_bankmachine4_trascon_valid = ((soc_sdram_bankmachine4_cmd_valid & soc_sdram_bankmachine4_cmd_ready) & soc_sdram_bankmachine4_row_open);

// synthesis translate_off
reg dummy_d_151;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_auto_precharge <= 1'd0;
	if ((soc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid & soc_sdram_bankmachine4_cmd_buffer_source_valid)) begin
		if ((soc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr[20:8] != soc_sdram_bankmachine4_cmd_buffer_source_payload_addr[20:8])) begin
			soc_sdram_bankmachine4_auto_precharge <= (soc_sdram_bankmachine4_row_close == 1'd0);
		end
	end
// synthesis translate_off
	dummy_d_151 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din = {soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we};
assign {soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
assign {soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
assign {soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
assign {soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_ready = soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we = soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_valid;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_first = soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_first;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_last = soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_last;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_we = soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_we;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_in_payload_addr = soc_sdram_bankmachine4_cmd_buffer_lookahead_sink_payload_addr;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_source_valid = soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_source_first = soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_first;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_source_last = soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_last;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_we = soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_we;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_source_payload_addr = soc_sdram_bankmachine4_cmd_buffer_lookahead_fifo_out_payload_addr;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re = soc_sdram_bankmachine4_cmd_buffer_lookahead_source_ready;

// synthesis translate_off
reg dummy_d_152;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= 4'd0;
	if (soc_sdram_bankmachine4_cmd_buffer_lookahead_replace) begin
		soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= (soc_sdram_bankmachine4_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr <= soc_sdram_bankmachine4_cmd_buffer_lookahead_produce;
	end
// synthesis translate_off
	dummy_d_152 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w = soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_din;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_we = (soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & (soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable | soc_sdram_bankmachine4_cmd_buffer_lookahead_replace));
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_do_read = (soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable & soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_re);
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr = soc_sdram_bankmachine4_cmd_buffer_lookahead_consume;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_dout = soc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable = (soc_sdram_bankmachine4_cmd_buffer_lookahead_level != 5'd16);
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_readable = (soc_sdram_bankmachine4_cmd_buffer_lookahead_level != 1'd0);
assign soc_sdram_bankmachine4_cmd_buffer_sink_ready = ((~soc_sdram_bankmachine4_cmd_buffer_source_valid) | soc_sdram_bankmachine4_cmd_buffer_source_ready);

// synthesis translate_off
reg dummy_d_153;
// synthesis translate_on
always @(*) begin
	vns_bankmachine4_next_state <= 3'd0;
	vns_bankmachine4_next_state <= vns_bankmachine4_state;
	case (vns_bankmachine4_state)
		1'd1: begin
			if ((soc_sdram_bankmachine4_twtpcon_ready & soc_sdram_bankmachine4_trascon_ready)) begin
				if (soc_sdram_bankmachine4_cmd_ready) begin
					vns_bankmachine4_next_state <= 3'd5;
				end
			end
		end
		2'd2: begin
			if ((soc_sdram_bankmachine4_twtpcon_ready & soc_sdram_bankmachine4_trascon_ready)) begin
				vns_bankmachine4_next_state <= 3'd5;
			end
		end
		2'd3: begin
			if (soc_sdram_bankmachine4_trccon_ready) begin
				if (soc_sdram_bankmachine4_cmd_ready) begin
					vns_bankmachine4_next_state <= 3'd6;
				end
			end
		end
		3'd4: begin
			if ((~soc_sdram_bankmachine4_refresh_req)) begin
				vns_bankmachine4_next_state <= 1'd0;
			end
		end
		3'd5: begin
			vns_bankmachine4_next_state <= 2'd3;
		end
		3'd6: begin
			vns_bankmachine4_next_state <= 1'd0;
		end
		default: begin
			if (soc_sdram_bankmachine4_refresh_req) begin
				vns_bankmachine4_next_state <= 3'd4;
			end else begin
				if (soc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine4_row_opened) begin
						if (soc_sdram_bankmachine4_row_hit) begin
							if ((soc_sdram_bankmachine4_cmd_ready & soc_sdram_bankmachine4_auto_precharge)) begin
								vns_bankmachine4_next_state <= 2'd2;
							end
						end else begin
							vns_bankmachine4_next_state <= 1'd1;
						end
					end else begin
						vns_bankmachine4_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_153 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_154;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_payload_is_write <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine4_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine4_row_opened) begin
						if (soc_sdram_bankmachine4_row_hit) begin
							if (soc_sdram_bankmachine4_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine4_cmd_payload_is_write <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_154 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_155;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_req_wdata_ready <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine4_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine4_row_opened) begin
						if (soc_sdram_bankmachine4_row_hit) begin
							if (soc_sdram_bankmachine4_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine4_req_wdata_ready <= soc_sdram_bankmachine4_cmd_ready;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_155 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_156;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_req_rdata_valid <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine4_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine4_row_opened) begin
						if (soc_sdram_bankmachine4_row_hit) begin
							if (soc_sdram_bankmachine4_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine4_req_rdata_valid <= soc_sdram_bankmachine4_cmd_ready;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_156 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_157;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_refresh_gnt <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			if (soc_sdram_bankmachine4_twtpcon_ready) begin
				soc_sdram_bankmachine4_refresh_gnt <= 1'd1;
			end
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_157 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_158;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_valid <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
			if ((soc_sdram_bankmachine4_twtpcon_ready & soc_sdram_bankmachine4_trascon_ready)) begin
				soc_sdram_bankmachine4_cmd_valid <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine4_trccon_ready) begin
				soc_sdram_bankmachine4_cmd_valid <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine4_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine4_row_opened) begin
						if (soc_sdram_bankmachine4_row_hit) begin
							soc_sdram_bankmachine4_cmd_valid <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_158 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_159;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_row_open <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine4_trccon_ready) begin
				soc_sdram_bankmachine4_row_open <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_159 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_160;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_row_close <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
			soc_sdram_bankmachine4_row_close <= 1'd1;
		end
		2'd2: begin
			soc_sdram_bankmachine4_row_close <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
			soc_sdram_bankmachine4_row_close <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_160 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_161;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_row_col_n_addr_sel <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine4_trccon_ready) begin
				soc_sdram_bankmachine4_row_col_n_addr_sel <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_161 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_162;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_payload_cas <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine4_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine4_row_opened) begin
						if (soc_sdram_bankmachine4_row_hit) begin
							soc_sdram_bankmachine4_cmd_payload_cas <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_162 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_163;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_payload_ras <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
			if ((soc_sdram_bankmachine4_twtpcon_ready & soc_sdram_bankmachine4_trascon_ready)) begin
				soc_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine4_trccon_ready) begin
				soc_sdram_bankmachine4_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_163 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_164;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_payload_we <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
			if ((soc_sdram_bankmachine4_twtpcon_ready & soc_sdram_bankmachine4_trascon_ready)) begin
				soc_sdram_bankmachine4_cmd_payload_we <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine4_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine4_row_opened) begin
						if (soc_sdram_bankmachine4_row_hit) begin
							if (soc_sdram_bankmachine4_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine4_cmd_payload_we <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_164 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_165;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
			if ((soc_sdram_bankmachine4_twtpcon_ready & soc_sdram_bankmachine4_trascon_ready)) begin
				soc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine4_trccon_ready) begin
				soc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
			end
		end
		3'd4: begin
			soc_sdram_bankmachine4_cmd_payload_is_cmd <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_165 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_166;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_payload_is_read <= 1'd0;
	case (vns_bankmachine4_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine4_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine4_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine4_row_opened) begin
						if (soc_sdram_bankmachine4_row_hit) begin
							if (soc_sdram_bankmachine4_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine4_cmd_payload_is_read <= 1'd1;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_166 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_valid = soc_sdram_bankmachine5_req_valid;
assign soc_sdram_bankmachine5_req_ready = soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_ready;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we = soc_sdram_bankmachine5_req_we;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr = soc_sdram_bankmachine5_req_addr;
assign soc_sdram_bankmachine5_cmd_buffer_sink_valid = soc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_source_ready = soc_sdram_bankmachine5_cmd_buffer_sink_ready;
assign soc_sdram_bankmachine5_cmd_buffer_sink_first = soc_sdram_bankmachine5_cmd_buffer_lookahead_source_first;
assign soc_sdram_bankmachine5_cmd_buffer_sink_last = soc_sdram_bankmachine5_cmd_buffer_lookahead_source_last;
assign soc_sdram_bankmachine5_cmd_buffer_sink_payload_we = soc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we;
assign soc_sdram_bankmachine5_cmd_buffer_sink_payload_addr = soc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr;
assign soc_sdram_bankmachine5_cmd_buffer_source_ready = (soc_sdram_bankmachine5_req_wdata_ready | soc_sdram_bankmachine5_req_rdata_valid);
assign soc_sdram_bankmachine5_req_lock = (soc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid | soc_sdram_bankmachine5_cmd_buffer_source_valid);
assign soc_sdram_bankmachine5_row_hit = (soc_sdram_bankmachine5_row == soc_sdram_bankmachine5_cmd_buffer_source_payload_addr[20:8]);
assign soc_sdram_bankmachine5_cmd_payload_ba = 3'd5;

// synthesis translate_off
reg dummy_d_167;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_payload_a <= 13'd0;
	if (soc_sdram_bankmachine5_row_col_n_addr_sel) begin
		soc_sdram_bankmachine5_cmd_payload_a <= soc_sdram_bankmachine5_cmd_buffer_source_payload_addr[20:8];
	end else begin
		soc_sdram_bankmachine5_cmd_payload_a <= ((soc_sdram_bankmachine5_auto_precharge <<< 4'd10) | {soc_sdram_bankmachine5_cmd_buffer_source_payload_addr[7:0], {2{1'd0}}});
	end
// synthesis translate_off
	dummy_d_167 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine5_twtpcon_valid = ((soc_sdram_bankmachine5_cmd_valid & soc_sdram_bankmachine5_cmd_ready) & soc_sdram_bankmachine5_cmd_payload_is_write);
assign soc_sdram_bankmachine5_trccon_valid = ((soc_sdram_bankmachine5_cmd_valid & soc_sdram_bankmachine5_cmd_ready) & soc_sdram_bankmachine5_row_open);
assign soc_sdram_bankmachine5_trascon_valid = ((soc_sdram_bankmachine5_cmd_valid & soc_sdram_bankmachine5_cmd_ready) & soc_sdram_bankmachine5_row_open);

// synthesis translate_off
reg dummy_d_168;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_auto_precharge <= 1'd0;
	if ((soc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid & soc_sdram_bankmachine5_cmd_buffer_source_valid)) begin
		if ((soc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr[20:8] != soc_sdram_bankmachine5_cmd_buffer_source_payload_addr[20:8])) begin
			soc_sdram_bankmachine5_auto_precharge <= (soc_sdram_bankmachine5_row_close == 1'd0);
		end
	end
// synthesis translate_off
	dummy_d_168 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din = {soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we};
assign {soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
assign {soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
assign {soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
assign {soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_ready = soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we = soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_valid;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_first = soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_first;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_last = soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_last;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_we = soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_we;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_in_payload_addr = soc_sdram_bankmachine5_cmd_buffer_lookahead_sink_payload_addr;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_source_valid = soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_source_first = soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_first;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_source_last = soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_last;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_we = soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_we;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_source_payload_addr = soc_sdram_bankmachine5_cmd_buffer_lookahead_fifo_out_payload_addr;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re = soc_sdram_bankmachine5_cmd_buffer_lookahead_source_ready;

// synthesis translate_off
reg dummy_d_169;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= 4'd0;
	if (soc_sdram_bankmachine5_cmd_buffer_lookahead_replace) begin
		soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= (soc_sdram_bankmachine5_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr <= soc_sdram_bankmachine5_cmd_buffer_lookahead_produce;
	end
// synthesis translate_off
	dummy_d_169 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w = soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_din;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_we = (soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & (soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable | soc_sdram_bankmachine5_cmd_buffer_lookahead_replace));
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_do_read = (soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable & soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_re);
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr = soc_sdram_bankmachine5_cmd_buffer_lookahead_consume;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_dout = soc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable = (soc_sdram_bankmachine5_cmd_buffer_lookahead_level != 5'd16);
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_readable = (soc_sdram_bankmachine5_cmd_buffer_lookahead_level != 1'd0);
assign soc_sdram_bankmachine5_cmd_buffer_sink_ready = ((~soc_sdram_bankmachine5_cmd_buffer_source_valid) | soc_sdram_bankmachine5_cmd_buffer_source_ready);

// synthesis translate_off
reg dummy_d_170;
// synthesis translate_on
always @(*) begin
	vns_bankmachine5_next_state <= 3'd0;
	vns_bankmachine5_next_state <= vns_bankmachine5_state;
	case (vns_bankmachine5_state)
		1'd1: begin
			if ((soc_sdram_bankmachine5_twtpcon_ready & soc_sdram_bankmachine5_trascon_ready)) begin
				if (soc_sdram_bankmachine5_cmd_ready) begin
					vns_bankmachine5_next_state <= 3'd5;
				end
			end
		end
		2'd2: begin
			if ((soc_sdram_bankmachine5_twtpcon_ready & soc_sdram_bankmachine5_trascon_ready)) begin
				vns_bankmachine5_next_state <= 3'd5;
			end
		end
		2'd3: begin
			if (soc_sdram_bankmachine5_trccon_ready) begin
				if (soc_sdram_bankmachine5_cmd_ready) begin
					vns_bankmachine5_next_state <= 3'd6;
				end
			end
		end
		3'd4: begin
			if ((~soc_sdram_bankmachine5_refresh_req)) begin
				vns_bankmachine5_next_state <= 1'd0;
			end
		end
		3'd5: begin
			vns_bankmachine5_next_state <= 2'd3;
		end
		3'd6: begin
			vns_bankmachine5_next_state <= 1'd0;
		end
		default: begin
			if (soc_sdram_bankmachine5_refresh_req) begin
				vns_bankmachine5_next_state <= 3'd4;
			end else begin
				if (soc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine5_row_opened) begin
						if (soc_sdram_bankmachine5_row_hit) begin
							if ((soc_sdram_bankmachine5_cmd_ready & soc_sdram_bankmachine5_auto_precharge)) begin
								vns_bankmachine5_next_state <= 2'd2;
							end
						end else begin
							vns_bankmachine5_next_state <= 1'd1;
						end
					end else begin
						vns_bankmachine5_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_170 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_171;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_payload_ras <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
			if ((soc_sdram_bankmachine5_twtpcon_ready & soc_sdram_bankmachine5_trascon_ready)) begin
				soc_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine5_trccon_ready) begin
				soc_sdram_bankmachine5_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_171 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_172;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_payload_we <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
			if ((soc_sdram_bankmachine5_twtpcon_ready & soc_sdram_bankmachine5_trascon_ready)) begin
				soc_sdram_bankmachine5_cmd_payload_we <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine5_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine5_row_opened) begin
						if (soc_sdram_bankmachine5_row_hit) begin
							if (soc_sdram_bankmachine5_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine5_cmd_payload_we <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_172 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_173;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_row_col_n_addr_sel <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine5_trccon_ready) begin
				soc_sdram_bankmachine5_row_col_n_addr_sel <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_173 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_174;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
			if ((soc_sdram_bankmachine5_twtpcon_ready & soc_sdram_bankmachine5_trascon_ready)) begin
				soc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine5_trccon_ready) begin
				soc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
			end
		end
		3'd4: begin
			soc_sdram_bankmachine5_cmd_payload_is_cmd <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_174 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_175;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_payload_is_read <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine5_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine5_row_opened) begin
						if (soc_sdram_bankmachine5_row_hit) begin
							if (soc_sdram_bankmachine5_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine5_cmd_payload_is_read <= 1'd1;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_175 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_176;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_payload_is_write <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine5_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine5_row_opened) begin
						if (soc_sdram_bankmachine5_row_hit) begin
							if (soc_sdram_bankmachine5_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine5_cmd_payload_is_write <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_176 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_177;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_req_wdata_ready <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine5_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine5_row_opened) begin
						if (soc_sdram_bankmachine5_row_hit) begin
							if (soc_sdram_bankmachine5_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine5_req_wdata_ready <= soc_sdram_bankmachine5_cmd_ready;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_177 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_178;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_req_rdata_valid <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine5_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine5_row_opened) begin
						if (soc_sdram_bankmachine5_row_hit) begin
							if (soc_sdram_bankmachine5_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine5_req_rdata_valid <= soc_sdram_bankmachine5_cmd_ready;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_178 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_179;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_refresh_gnt <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			if (soc_sdram_bankmachine5_twtpcon_ready) begin
				soc_sdram_bankmachine5_refresh_gnt <= 1'd1;
			end
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_179 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_180;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_valid <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
			if ((soc_sdram_bankmachine5_twtpcon_ready & soc_sdram_bankmachine5_trascon_ready)) begin
				soc_sdram_bankmachine5_cmd_valid <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine5_trccon_ready) begin
				soc_sdram_bankmachine5_cmd_valid <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine5_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine5_row_opened) begin
						if (soc_sdram_bankmachine5_row_hit) begin
							soc_sdram_bankmachine5_cmd_valid <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_180 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_181;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_row_open <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine5_trccon_ready) begin
				soc_sdram_bankmachine5_row_open <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_181 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_182;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_row_close <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
			soc_sdram_bankmachine5_row_close <= 1'd1;
		end
		2'd2: begin
			soc_sdram_bankmachine5_row_close <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
			soc_sdram_bankmachine5_row_close <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_182 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_183;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_payload_cas <= 1'd0;
	case (vns_bankmachine5_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine5_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine5_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine5_row_opened) begin
						if (soc_sdram_bankmachine5_row_hit) begin
							soc_sdram_bankmachine5_cmd_payload_cas <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_183 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_valid = soc_sdram_bankmachine6_req_valid;
assign soc_sdram_bankmachine6_req_ready = soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_ready;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we = soc_sdram_bankmachine6_req_we;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr = soc_sdram_bankmachine6_req_addr;
assign soc_sdram_bankmachine6_cmd_buffer_sink_valid = soc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_source_ready = soc_sdram_bankmachine6_cmd_buffer_sink_ready;
assign soc_sdram_bankmachine6_cmd_buffer_sink_first = soc_sdram_bankmachine6_cmd_buffer_lookahead_source_first;
assign soc_sdram_bankmachine6_cmd_buffer_sink_last = soc_sdram_bankmachine6_cmd_buffer_lookahead_source_last;
assign soc_sdram_bankmachine6_cmd_buffer_sink_payload_we = soc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we;
assign soc_sdram_bankmachine6_cmd_buffer_sink_payload_addr = soc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr;
assign soc_sdram_bankmachine6_cmd_buffer_source_ready = (soc_sdram_bankmachine6_req_wdata_ready | soc_sdram_bankmachine6_req_rdata_valid);
assign soc_sdram_bankmachine6_req_lock = (soc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid | soc_sdram_bankmachine6_cmd_buffer_source_valid);
assign soc_sdram_bankmachine6_row_hit = (soc_sdram_bankmachine6_row == soc_sdram_bankmachine6_cmd_buffer_source_payload_addr[20:8]);
assign soc_sdram_bankmachine6_cmd_payload_ba = 3'd6;

// synthesis translate_off
reg dummy_d_184;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_payload_a <= 13'd0;
	if (soc_sdram_bankmachine6_row_col_n_addr_sel) begin
		soc_sdram_bankmachine6_cmd_payload_a <= soc_sdram_bankmachine6_cmd_buffer_source_payload_addr[20:8];
	end else begin
		soc_sdram_bankmachine6_cmd_payload_a <= ((soc_sdram_bankmachine6_auto_precharge <<< 4'd10) | {soc_sdram_bankmachine6_cmd_buffer_source_payload_addr[7:0], {2{1'd0}}});
	end
// synthesis translate_off
	dummy_d_184 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine6_twtpcon_valid = ((soc_sdram_bankmachine6_cmd_valid & soc_sdram_bankmachine6_cmd_ready) & soc_sdram_bankmachine6_cmd_payload_is_write);
assign soc_sdram_bankmachine6_trccon_valid = ((soc_sdram_bankmachine6_cmd_valid & soc_sdram_bankmachine6_cmd_ready) & soc_sdram_bankmachine6_row_open);
assign soc_sdram_bankmachine6_trascon_valid = ((soc_sdram_bankmachine6_cmd_valid & soc_sdram_bankmachine6_cmd_ready) & soc_sdram_bankmachine6_row_open);

// synthesis translate_off
reg dummy_d_185;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_auto_precharge <= 1'd0;
	if ((soc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid & soc_sdram_bankmachine6_cmd_buffer_source_valid)) begin
		if ((soc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr[20:8] != soc_sdram_bankmachine6_cmd_buffer_source_payload_addr[20:8])) begin
			soc_sdram_bankmachine6_auto_precharge <= (soc_sdram_bankmachine6_row_close == 1'd0);
		end
	end
// synthesis translate_off
	dummy_d_185 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din = {soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we};
assign {soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
assign {soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
assign {soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
assign {soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_ready = soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we = soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_valid;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_first = soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_first;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_last = soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_last;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_we = soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_we;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_in_payload_addr = soc_sdram_bankmachine6_cmd_buffer_lookahead_sink_payload_addr;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_source_valid = soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_source_first = soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_first;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_source_last = soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_last;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_we = soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_we;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_source_payload_addr = soc_sdram_bankmachine6_cmd_buffer_lookahead_fifo_out_payload_addr;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re = soc_sdram_bankmachine6_cmd_buffer_lookahead_source_ready;

// synthesis translate_off
reg dummy_d_186;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= 4'd0;
	if (soc_sdram_bankmachine6_cmd_buffer_lookahead_replace) begin
		soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= (soc_sdram_bankmachine6_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr <= soc_sdram_bankmachine6_cmd_buffer_lookahead_produce;
	end
// synthesis translate_off
	dummy_d_186 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w = soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_din;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_we = (soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & (soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable | soc_sdram_bankmachine6_cmd_buffer_lookahead_replace));
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_do_read = (soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable & soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_re);
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr = soc_sdram_bankmachine6_cmd_buffer_lookahead_consume;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_dout = soc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable = (soc_sdram_bankmachine6_cmd_buffer_lookahead_level != 5'd16);
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_readable = (soc_sdram_bankmachine6_cmd_buffer_lookahead_level != 1'd0);
assign soc_sdram_bankmachine6_cmd_buffer_sink_ready = ((~soc_sdram_bankmachine6_cmd_buffer_source_valid) | soc_sdram_bankmachine6_cmd_buffer_source_ready);

// synthesis translate_off
reg dummy_d_187;
// synthesis translate_on
always @(*) begin
	vns_bankmachine6_next_state <= 3'd0;
	vns_bankmachine6_next_state <= vns_bankmachine6_state;
	case (vns_bankmachine6_state)
		1'd1: begin
			if ((soc_sdram_bankmachine6_twtpcon_ready & soc_sdram_bankmachine6_trascon_ready)) begin
				if (soc_sdram_bankmachine6_cmd_ready) begin
					vns_bankmachine6_next_state <= 3'd5;
				end
			end
		end
		2'd2: begin
			if ((soc_sdram_bankmachine6_twtpcon_ready & soc_sdram_bankmachine6_trascon_ready)) begin
				vns_bankmachine6_next_state <= 3'd5;
			end
		end
		2'd3: begin
			if (soc_sdram_bankmachine6_trccon_ready) begin
				if (soc_sdram_bankmachine6_cmd_ready) begin
					vns_bankmachine6_next_state <= 3'd6;
				end
			end
		end
		3'd4: begin
			if ((~soc_sdram_bankmachine6_refresh_req)) begin
				vns_bankmachine6_next_state <= 1'd0;
			end
		end
		3'd5: begin
			vns_bankmachine6_next_state <= 2'd3;
		end
		3'd6: begin
			vns_bankmachine6_next_state <= 1'd0;
		end
		default: begin
			if (soc_sdram_bankmachine6_refresh_req) begin
				vns_bankmachine6_next_state <= 3'd4;
			end else begin
				if (soc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine6_row_opened) begin
						if (soc_sdram_bankmachine6_row_hit) begin
							if ((soc_sdram_bankmachine6_cmd_ready & soc_sdram_bankmachine6_auto_precharge)) begin
								vns_bankmachine6_next_state <= 2'd2;
							end
						end else begin
							vns_bankmachine6_next_state <= 1'd1;
						end
					end else begin
						vns_bankmachine6_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_187 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_188;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_row_open <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine6_trccon_ready) begin
				soc_sdram_bankmachine6_row_open <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_188 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_189;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_row_close <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
			soc_sdram_bankmachine6_row_close <= 1'd1;
		end
		2'd2: begin
			soc_sdram_bankmachine6_row_close <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
			soc_sdram_bankmachine6_row_close <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_189 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_190;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_payload_cas <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine6_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine6_row_opened) begin
						if (soc_sdram_bankmachine6_row_hit) begin
							soc_sdram_bankmachine6_cmd_payload_cas <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_190 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_191;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_payload_ras <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
			if ((soc_sdram_bankmachine6_twtpcon_ready & soc_sdram_bankmachine6_trascon_ready)) begin
				soc_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine6_trccon_ready) begin
				soc_sdram_bankmachine6_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_191 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_192;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_payload_we <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
			if ((soc_sdram_bankmachine6_twtpcon_ready & soc_sdram_bankmachine6_trascon_ready)) begin
				soc_sdram_bankmachine6_cmd_payload_we <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine6_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine6_row_opened) begin
						if (soc_sdram_bankmachine6_row_hit) begin
							if (soc_sdram_bankmachine6_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine6_cmd_payload_we <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_192 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_193;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_row_col_n_addr_sel <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine6_trccon_ready) begin
				soc_sdram_bankmachine6_row_col_n_addr_sel <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_193 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_194;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
			if ((soc_sdram_bankmachine6_twtpcon_ready & soc_sdram_bankmachine6_trascon_ready)) begin
				soc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine6_trccon_ready) begin
				soc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
			end
		end
		3'd4: begin
			soc_sdram_bankmachine6_cmd_payload_is_cmd <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_194 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_195;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_payload_is_read <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine6_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine6_row_opened) begin
						if (soc_sdram_bankmachine6_row_hit) begin
							if (soc_sdram_bankmachine6_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine6_cmd_payload_is_read <= 1'd1;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_195 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_196;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_payload_is_write <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine6_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine6_row_opened) begin
						if (soc_sdram_bankmachine6_row_hit) begin
							if (soc_sdram_bankmachine6_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine6_cmd_payload_is_write <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_196 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_197;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_req_wdata_ready <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine6_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine6_row_opened) begin
						if (soc_sdram_bankmachine6_row_hit) begin
							if (soc_sdram_bankmachine6_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine6_req_wdata_ready <= soc_sdram_bankmachine6_cmd_ready;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_197 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_198;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_req_rdata_valid <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine6_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine6_row_opened) begin
						if (soc_sdram_bankmachine6_row_hit) begin
							if (soc_sdram_bankmachine6_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine6_req_rdata_valid <= soc_sdram_bankmachine6_cmd_ready;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_198 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_199;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_refresh_gnt <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			if (soc_sdram_bankmachine6_twtpcon_ready) begin
				soc_sdram_bankmachine6_refresh_gnt <= 1'd1;
			end
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_199 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_200;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_valid <= 1'd0;
	case (vns_bankmachine6_state)
		1'd1: begin
			if ((soc_sdram_bankmachine6_twtpcon_ready & soc_sdram_bankmachine6_trascon_ready)) begin
				soc_sdram_bankmachine6_cmd_valid <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine6_trccon_ready) begin
				soc_sdram_bankmachine6_cmd_valid <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine6_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine6_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine6_row_opened) begin
						if (soc_sdram_bankmachine6_row_hit) begin
							soc_sdram_bankmachine6_cmd_valid <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_200 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_valid = soc_sdram_bankmachine7_req_valid;
assign soc_sdram_bankmachine7_req_ready = soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_ready;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we = soc_sdram_bankmachine7_req_we;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr = soc_sdram_bankmachine7_req_addr;
assign soc_sdram_bankmachine7_cmd_buffer_sink_valid = soc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_source_ready = soc_sdram_bankmachine7_cmd_buffer_sink_ready;
assign soc_sdram_bankmachine7_cmd_buffer_sink_first = soc_sdram_bankmachine7_cmd_buffer_lookahead_source_first;
assign soc_sdram_bankmachine7_cmd_buffer_sink_last = soc_sdram_bankmachine7_cmd_buffer_lookahead_source_last;
assign soc_sdram_bankmachine7_cmd_buffer_sink_payload_we = soc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we;
assign soc_sdram_bankmachine7_cmd_buffer_sink_payload_addr = soc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr;
assign soc_sdram_bankmachine7_cmd_buffer_source_ready = (soc_sdram_bankmachine7_req_wdata_ready | soc_sdram_bankmachine7_req_rdata_valid);
assign soc_sdram_bankmachine7_req_lock = (soc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid | soc_sdram_bankmachine7_cmd_buffer_source_valid);
assign soc_sdram_bankmachine7_row_hit = (soc_sdram_bankmachine7_row == soc_sdram_bankmachine7_cmd_buffer_source_payload_addr[20:8]);
assign soc_sdram_bankmachine7_cmd_payload_ba = 3'd7;

// synthesis translate_off
reg dummy_d_201;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_payload_a <= 13'd0;
	if (soc_sdram_bankmachine7_row_col_n_addr_sel) begin
		soc_sdram_bankmachine7_cmd_payload_a <= soc_sdram_bankmachine7_cmd_buffer_source_payload_addr[20:8];
	end else begin
		soc_sdram_bankmachine7_cmd_payload_a <= ((soc_sdram_bankmachine7_auto_precharge <<< 4'd10) | {soc_sdram_bankmachine7_cmd_buffer_source_payload_addr[7:0], {2{1'd0}}});
	end
// synthesis translate_off
	dummy_d_201 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine7_twtpcon_valid = ((soc_sdram_bankmachine7_cmd_valid & soc_sdram_bankmachine7_cmd_ready) & soc_sdram_bankmachine7_cmd_payload_is_write);
assign soc_sdram_bankmachine7_trccon_valid = ((soc_sdram_bankmachine7_cmd_valid & soc_sdram_bankmachine7_cmd_ready) & soc_sdram_bankmachine7_row_open);
assign soc_sdram_bankmachine7_trascon_valid = ((soc_sdram_bankmachine7_cmd_valid & soc_sdram_bankmachine7_cmd_ready) & soc_sdram_bankmachine7_row_open);

// synthesis translate_off
reg dummy_d_202;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_auto_precharge <= 1'd0;
	if ((soc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid & soc_sdram_bankmachine7_cmd_buffer_source_valid)) begin
		if ((soc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr[20:8] != soc_sdram_bankmachine7_cmd_buffer_source_payload_addr[20:8])) begin
			soc_sdram_bankmachine7_auto_precharge <= (soc_sdram_bankmachine7_row_close == 1'd0);
		end
	end
// synthesis translate_off
	dummy_d_202 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din = {soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we};
assign {soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
assign {soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
assign {soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
assign {soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr, soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we} = soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_ready = soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we = soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_valid;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_first = soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_first;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_last = soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_last;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_we = soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_we;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_in_payload_addr = soc_sdram_bankmachine7_cmd_buffer_lookahead_sink_payload_addr;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_source_valid = soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_source_first = soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_first;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_source_last = soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_last;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_we = soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_we;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_source_payload_addr = soc_sdram_bankmachine7_cmd_buffer_lookahead_fifo_out_payload_addr;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re = soc_sdram_bankmachine7_cmd_buffer_lookahead_source_ready;

// synthesis translate_off
reg dummy_d_203;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= 4'd0;
	if (soc_sdram_bankmachine7_cmd_buffer_lookahead_replace) begin
		soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= (soc_sdram_bankmachine7_cmd_buffer_lookahead_produce - 1'd1);
	end else begin
		soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr <= soc_sdram_bankmachine7_cmd_buffer_lookahead_produce;
	end
// synthesis translate_off
	dummy_d_203 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w = soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_din;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_we = (soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & (soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable | soc_sdram_bankmachine7_cmd_buffer_lookahead_replace));
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_do_read = (soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable & soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_re);
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr = soc_sdram_bankmachine7_cmd_buffer_lookahead_consume;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_dout = soc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable = (soc_sdram_bankmachine7_cmd_buffer_lookahead_level != 5'd16);
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_readable = (soc_sdram_bankmachine7_cmd_buffer_lookahead_level != 1'd0);
assign soc_sdram_bankmachine7_cmd_buffer_sink_ready = ((~soc_sdram_bankmachine7_cmd_buffer_source_valid) | soc_sdram_bankmachine7_cmd_buffer_source_ready);

// synthesis translate_off
reg dummy_d_204;
// synthesis translate_on
always @(*) begin
	vns_bankmachine7_next_state <= 3'd0;
	vns_bankmachine7_next_state <= vns_bankmachine7_state;
	case (vns_bankmachine7_state)
		1'd1: begin
			if ((soc_sdram_bankmachine7_twtpcon_ready & soc_sdram_bankmachine7_trascon_ready)) begin
				if (soc_sdram_bankmachine7_cmd_ready) begin
					vns_bankmachine7_next_state <= 3'd5;
				end
			end
		end
		2'd2: begin
			if ((soc_sdram_bankmachine7_twtpcon_ready & soc_sdram_bankmachine7_trascon_ready)) begin
				vns_bankmachine7_next_state <= 3'd5;
			end
		end
		2'd3: begin
			if (soc_sdram_bankmachine7_trccon_ready) begin
				if (soc_sdram_bankmachine7_cmd_ready) begin
					vns_bankmachine7_next_state <= 3'd6;
				end
			end
		end
		3'd4: begin
			if ((~soc_sdram_bankmachine7_refresh_req)) begin
				vns_bankmachine7_next_state <= 1'd0;
			end
		end
		3'd5: begin
			vns_bankmachine7_next_state <= 2'd3;
		end
		3'd6: begin
			vns_bankmachine7_next_state <= 1'd0;
		end
		default: begin
			if (soc_sdram_bankmachine7_refresh_req) begin
				vns_bankmachine7_next_state <= 3'd4;
			end else begin
				if (soc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine7_row_opened) begin
						if (soc_sdram_bankmachine7_row_hit) begin
							if ((soc_sdram_bankmachine7_cmd_ready & soc_sdram_bankmachine7_auto_precharge)) begin
								vns_bankmachine7_next_state <= 2'd2;
							end
						end else begin
							vns_bankmachine7_next_state <= 1'd1;
						end
					end else begin
						vns_bankmachine7_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_204 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_205;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_refresh_gnt <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			if (soc_sdram_bankmachine7_twtpcon_ready) begin
				soc_sdram_bankmachine7_refresh_gnt <= 1'd1;
			end
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_205 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_206;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_valid <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
			if ((soc_sdram_bankmachine7_twtpcon_ready & soc_sdram_bankmachine7_trascon_ready)) begin
				soc_sdram_bankmachine7_cmd_valid <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine7_trccon_ready) begin
				soc_sdram_bankmachine7_cmd_valid <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine7_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine7_row_opened) begin
						if (soc_sdram_bankmachine7_row_hit) begin
							soc_sdram_bankmachine7_cmd_valid <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_206 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_207;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_row_open <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine7_trccon_ready) begin
				soc_sdram_bankmachine7_row_open <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_207 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_208;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_row_close <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
			soc_sdram_bankmachine7_row_close <= 1'd1;
		end
		2'd2: begin
			soc_sdram_bankmachine7_row_close <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
			soc_sdram_bankmachine7_row_close <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_208 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_209;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_payload_cas <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine7_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine7_row_opened) begin
						if (soc_sdram_bankmachine7_row_hit) begin
							soc_sdram_bankmachine7_cmd_payload_cas <= 1'd1;
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_209 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_210;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_payload_ras <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
			if ((soc_sdram_bankmachine7_twtpcon_ready & soc_sdram_bankmachine7_trascon_ready)) begin
				soc_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine7_trccon_ready) begin
				soc_sdram_bankmachine7_cmd_payload_ras <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_210 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_211;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_req_rdata_valid <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine7_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine7_row_opened) begin
						if (soc_sdram_bankmachine7_row_hit) begin
							if (soc_sdram_bankmachine7_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine7_req_rdata_valid <= soc_sdram_bankmachine7_cmd_ready;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_211 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_212;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_payload_we <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
			if ((soc_sdram_bankmachine7_twtpcon_ready & soc_sdram_bankmachine7_trascon_ready)) begin
				soc_sdram_bankmachine7_cmd_payload_we <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine7_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine7_row_opened) begin
						if (soc_sdram_bankmachine7_row_hit) begin
							if (soc_sdram_bankmachine7_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine7_cmd_payload_we <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_212 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_213;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_row_col_n_addr_sel <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine7_trccon_ready) begin
				soc_sdram_bankmachine7_row_col_n_addr_sel <= 1'd1;
			end
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_213 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_214;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
			if ((soc_sdram_bankmachine7_twtpcon_ready & soc_sdram_bankmachine7_trascon_ready)) begin
				soc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
			end
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_sdram_bankmachine7_trccon_ready) begin
				soc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
			end
		end
		3'd4: begin
			soc_sdram_bankmachine7_cmd_payload_is_cmd <= 1'd1;
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_214 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_215;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_payload_is_read <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine7_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine7_row_opened) begin
						if (soc_sdram_bankmachine7_row_hit) begin
							if (soc_sdram_bankmachine7_cmd_buffer_source_payload_we) begin
							end else begin
								soc_sdram_bankmachine7_cmd_payload_is_read <= 1'd1;
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_215 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_216;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_payload_is_write <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine7_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine7_row_opened) begin
						if (soc_sdram_bankmachine7_row_hit) begin
							if (soc_sdram_bankmachine7_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine7_cmd_payload_is_write <= 1'd1;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_216 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_217;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_req_wdata_ready <= 1'd0;
	case (vns_bankmachine7_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		default: begin
			if (soc_sdram_bankmachine7_refresh_req) begin
			end else begin
				if (soc_sdram_bankmachine7_cmd_buffer_source_valid) begin
					if (soc_sdram_bankmachine7_row_opened) begin
						if (soc_sdram_bankmachine7_row_hit) begin
							if (soc_sdram_bankmachine7_cmd_buffer_source_payload_we) begin
								soc_sdram_bankmachine7_req_wdata_ready <= soc_sdram_bankmachine7_cmd_ready;
							end else begin
							end
						end else begin
						end
					end else begin
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_217 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_trrdcon_valid = ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & ((soc_sdram_choose_cmd_cmd_payload_ras & (~soc_sdram_choose_cmd_cmd_payload_cas)) & (~soc_sdram_choose_cmd_cmd_payload_we)));
assign soc_sdram_tfawcon_valid = ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & ((soc_sdram_choose_cmd_cmd_payload_ras & (~soc_sdram_choose_cmd_cmd_payload_cas)) & (~soc_sdram_choose_cmd_cmd_payload_we)));
assign soc_sdram_ras_allowed = (soc_sdram_trrdcon_ready & soc_sdram_tfawcon_ready);
assign soc_sdram_tccdcon_valid = ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & (soc_sdram_choose_req_cmd_payload_is_write | soc_sdram_choose_req_cmd_payload_is_read));
assign soc_sdram_cas_allowed = soc_sdram_tccdcon_ready;
assign soc_sdram_twtrcon_valid = ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_is_write);
assign soc_sdram_read_available = ((((((((soc_sdram_bankmachine0_cmd_valid & soc_sdram_bankmachine0_cmd_payload_is_read) | (soc_sdram_bankmachine1_cmd_valid & soc_sdram_bankmachine1_cmd_payload_is_read)) | (soc_sdram_bankmachine2_cmd_valid & soc_sdram_bankmachine2_cmd_payload_is_read)) | (soc_sdram_bankmachine3_cmd_valid & soc_sdram_bankmachine3_cmd_payload_is_read)) | (soc_sdram_bankmachine4_cmd_valid & soc_sdram_bankmachine4_cmd_payload_is_read)) | (soc_sdram_bankmachine5_cmd_valid & soc_sdram_bankmachine5_cmd_payload_is_read)) | (soc_sdram_bankmachine6_cmd_valid & soc_sdram_bankmachine6_cmd_payload_is_read)) | (soc_sdram_bankmachine7_cmd_valid & soc_sdram_bankmachine7_cmd_payload_is_read));
assign soc_sdram_write_available = ((((((((soc_sdram_bankmachine0_cmd_valid & soc_sdram_bankmachine0_cmd_payload_is_write) | (soc_sdram_bankmachine1_cmd_valid & soc_sdram_bankmachine1_cmd_payload_is_write)) | (soc_sdram_bankmachine2_cmd_valid & soc_sdram_bankmachine2_cmd_payload_is_write)) | (soc_sdram_bankmachine3_cmd_valid & soc_sdram_bankmachine3_cmd_payload_is_write)) | (soc_sdram_bankmachine4_cmd_valid & soc_sdram_bankmachine4_cmd_payload_is_write)) | (soc_sdram_bankmachine5_cmd_valid & soc_sdram_bankmachine5_cmd_payload_is_write)) | (soc_sdram_bankmachine6_cmd_valid & soc_sdram_bankmachine6_cmd_payload_is_write)) | (soc_sdram_bankmachine7_cmd_valid & soc_sdram_bankmachine7_cmd_payload_is_write));
assign soc_sdram_max_time0 = (soc_sdram_time0 == 1'd0);
assign soc_sdram_max_time1 = (soc_sdram_time1 == 1'd0);
assign soc_sdram_bankmachine0_refresh_req = soc_sdram_cmd_valid;
assign soc_sdram_bankmachine1_refresh_req = soc_sdram_cmd_valid;
assign soc_sdram_bankmachine2_refresh_req = soc_sdram_cmd_valid;
assign soc_sdram_bankmachine3_refresh_req = soc_sdram_cmd_valid;
assign soc_sdram_bankmachine4_refresh_req = soc_sdram_cmd_valid;
assign soc_sdram_bankmachine5_refresh_req = soc_sdram_cmd_valid;
assign soc_sdram_bankmachine6_refresh_req = soc_sdram_cmd_valid;
assign soc_sdram_bankmachine7_refresh_req = soc_sdram_cmd_valid;
assign soc_sdram_go_to_refresh = (((((((soc_sdram_bankmachine0_refresh_gnt & soc_sdram_bankmachine1_refresh_gnt) & soc_sdram_bankmachine2_refresh_gnt) & soc_sdram_bankmachine3_refresh_gnt) & soc_sdram_bankmachine4_refresh_gnt) & soc_sdram_bankmachine5_refresh_gnt) & soc_sdram_bankmachine6_refresh_gnt) & soc_sdram_bankmachine7_refresh_gnt);
assign soc_sdram_interface_rdata = {soc_sdram_dfi_p1_rddata, soc_sdram_dfi_p0_rddata};
assign {soc_sdram_dfi_p1_wrdata, soc_sdram_dfi_p0_wrdata} = soc_sdram_interface_wdata;
assign {soc_sdram_dfi_p1_wrdata, soc_sdram_dfi_p0_wrdata} = soc_sdram_interface_wdata;
assign {soc_sdram_dfi_p1_wrdata_mask, soc_sdram_dfi_p0_wrdata_mask} = (~soc_sdram_interface_wdata_we);
assign {soc_sdram_dfi_p1_wrdata_mask, soc_sdram_dfi_p0_wrdata_mask} = (~soc_sdram_interface_wdata_we);

// synthesis translate_off
reg dummy_d_218;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_cmd_valids <= 8'd0;
	soc_sdram_choose_cmd_valids[0] <= (soc_sdram_bankmachine0_cmd_valid & (((soc_sdram_bankmachine0_cmd_payload_is_cmd & soc_sdram_choose_cmd_want_cmds) & ((~((soc_sdram_bankmachine0_cmd_payload_ras & (~soc_sdram_bankmachine0_cmd_payload_cas)) & (~soc_sdram_bankmachine0_cmd_payload_we))) | soc_sdram_choose_cmd_want_activates)) | ((soc_sdram_bankmachine0_cmd_payload_is_read == soc_sdram_choose_cmd_want_reads) & (soc_sdram_bankmachine0_cmd_payload_is_write == soc_sdram_choose_cmd_want_writes))));
	soc_sdram_choose_cmd_valids[1] <= (soc_sdram_bankmachine1_cmd_valid & (((soc_sdram_bankmachine1_cmd_payload_is_cmd & soc_sdram_choose_cmd_want_cmds) & ((~((soc_sdram_bankmachine1_cmd_payload_ras & (~soc_sdram_bankmachine1_cmd_payload_cas)) & (~soc_sdram_bankmachine1_cmd_payload_we))) | soc_sdram_choose_cmd_want_activates)) | ((soc_sdram_bankmachine1_cmd_payload_is_read == soc_sdram_choose_cmd_want_reads) & (soc_sdram_bankmachine1_cmd_payload_is_write == soc_sdram_choose_cmd_want_writes))));
	soc_sdram_choose_cmd_valids[2] <= (soc_sdram_bankmachine2_cmd_valid & (((soc_sdram_bankmachine2_cmd_payload_is_cmd & soc_sdram_choose_cmd_want_cmds) & ((~((soc_sdram_bankmachine2_cmd_payload_ras & (~soc_sdram_bankmachine2_cmd_payload_cas)) & (~soc_sdram_bankmachine2_cmd_payload_we))) | soc_sdram_choose_cmd_want_activates)) | ((soc_sdram_bankmachine2_cmd_payload_is_read == soc_sdram_choose_cmd_want_reads) & (soc_sdram_bankmachine2_cmd_payload_is_write == soc_sdram_choose_cmd_want_writes))));
	soc_sdram_choose_cmd_valids[3] <= (soc_sdram_bankmachine3_cmd_valid & (((soc_sdram_bankmachine3_cmd_payload_is_cmd & soc_sdram_choose_cmd_want_cmds) & ((~((soc_sdram_bankmachine3_cmd_payload_ras & (~soc_sdram_bankmachine3_cmd_payload_cas)) & (~soc_sdram_bankmachine3_cmd_payload_we))) | soc_sdram_choose_cmd_want_activates)) | ((soc_sdram_bankmachine3_cmd_payload_is_read == soc_sdram_choose_cmd_want_reads) & (soc_sdram_bankmachine3_cmd_payload_is_write == soc_sdram_choose_cmd_want_writes))));
	soc_sdram_choose_cmd_valids[4] <= (soc_sdram_bankmachine4_cmd_valid & (((soc_sdram_bankmachine4_cmd_payload_is_cmd & soc_sdram_choose_cmd_want_cmds) & ((~((soc_sdram_bankmachine4_cmd_payload_ras & (~soc_sdram_bankmachine4_cmd_payload_cas)) & (~soc_sdram_bankmachine4_cmd_payload_we))) | soc_sdram_choose_cmd_want_activates)) | ((soc_sdram_bankmachine4_cmd_payload_is_read == soc_sdram_choose_cmd_want_reads) & (soc_sdram_bankmachine4_cmd_payload_is_write == soc_sdram_choose_cmd_want_writes))));
	soc_sdram_choose_cmd_valids[5] <= (soc_sdram_bankmachine5_cmd_valid & (((soc_sdram_bankmachine5_cmd_payload_is_cmd & soc_sdram_choose_cmd_want_cmds) & ((~((soc_sdram_bankmachine5_cmd_payload_ras & (~soc_sdram_bankmachine5_cmd_payload_cas)) & (~soc_sdram_bankmachine5_cmd_payload_we))) | soc_sdram_choose_cmd_want_activates)) | ((soc_sdram_bankmachine5_cmd_payload_is_read == soc_sdram_choose_cmd_want_reads) & (soc_sdram_bankmachine5_cmd_payload_is_write == soc_sdram_choose_cmd_want_writes))));
	soc_sdram_choose_cmd_valids[6] <= (soc_sdram_bankmachine6_cmd_valid & (((soc_sdram_bankmachine6_cmd_payload_is_cmd & soc_sdram_choose_cmd_want_cmds) & ((~((soc_sdram_bankmachine6_cmd_payload_ras & (~soc_sdram_bankmachine6_cmd_payload_cas)) & (~soc_sdram_bankmachine6_cmd_payload_we))) | soc_sdram_choose_cmd_want_activates)) | ((soc_sdram_bankmachine6_cmd_payload_is_read == soc_sdram_choose_cmd_want_reads) & (soc_sdram_bankmachine6_cmd_payload_is_write == soc_sdram_choose_cmd_want_writes))));
	soc_sdram_choose_cmd_valids[7] <= (soc_sdram_bankmachine7_cmd_valid & (((soc_sdram_bankmachine7_cmd_payload_is_cmd & soc_sdram_choose_cmd_want_cmds) & ((~((soc_sdram_bankmachine7_cmd_payload_ras & (~soc_sdram_bankmachine7_cmd_payload_cas)) & (~soc_sdram_bankmachine7_cmd_payload_we))) | soc_sdram_choose_cmd_want_activates)) | ((soc_sdram_bankmachine7_cmd_payload_is_read == soc_sdram_choose_cmd_want_reads) & (soc_sdram_bankmachine7_cmd_payload_is_write == soc_sdram_choose_cmd_want_writes))));
// synthesis translate_off
	dummy_d_218 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_choose_cmd_request = soc_sdram_choose_cmd_valids;
assign soc_sdram_choose_cmd_cmd_valid = vns_rhs_array_muxed0;
assign soc_sdram_choose_cmd_cmd_payload_a = vns_rhs_array_muxed1;
assign soc_sdram_choose_cmd_cmd_payload_ba = vns_rhs_array_muxed2;
assign soc_sdram_choose_cmd_cmd_payload_is_read = vns_rhs_array_muxed3;
assign soc_sdram_choose_cmd_cmd_payload_is_write = vns_rhs_array_muxed4;
assign soc_sdram_choose_cmd_cmd_payload_is_cmd = vns_rhs_array_muxed5;

// synthesis translate_off
reg dummy_d_219;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_cmd_cmd_payload_cas <= 1'd0;
	if (soc_sdram_choose_cmd_cmd_valid) begin
		soc_sdram_choose_cmd_cmd_payload_cas <= vns_t_array_muxed0;
	end
// synthesis translate_off
	dummy_d_219 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_220;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_cmd_cmd_payload_ras <= 1'd0;
	if (soc_sdram_choose_cmd_cmd_valid) begin
		soc_sdram_choose_cmd_cmd_payload_ras <= vns_t_array_muxed1;
	end
// synthesis translate_off
	dummy_d_220 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_221;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_cmd_cmd_payload_we <= 1'd0;
	if (soc_sdram_choose_cmd_cmd_valid) begin
		soc_sdram_choose_cmd_cmd_payload_we <= vns_t_array_muxed2;
	end
// synthesis translate_off
	dummy_d_221 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_222;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine0_cmd_ready <= 1'd0;
	if (((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & (soc_sdram_choose_cmd_grant == 1'd0))) begin
		soc_sdram_bankmachine0_cmd_ready <= 1'd1;
	end
	if (((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & (soc_sdram_choose_req_grant == 1'd0))) begin
		soc_sdram_bankmachine0_cmd_ready <= 1'd1;
	end
// synthesis translate_off
	dummy_d_222 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_223;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine1_cmd_ready <= 1'd0;
	if (((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & (soc_sdram_choose_cmd_grant == 1'd1))) begin
		soc_sdram_bankmachine1_cmd_ready <= 1'd1;
	end
	if (((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & (soc_sdram_choose_req_grant == 1'd1))) begin
		soc_sdram_bankmachine1_cmd_ready <= 1'd1;
	end
// synthesis translate_off
	dummy_d_223 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_224;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine2_cmd_ready <= 1'd0;
	if (((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & (soc_sdram_choose_cmd_grant == 2'd2))) begin
		soc_sdram_bankmachine2_cmd_ready <= 1'd1;
	end
	if (((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & (soc_sdram_choose_req_grant == 2'd2))) begin
		soc_sdram_bankmachine2_cmd_ready <= 1'd1;
	end
// synthesis translate_off
	dummy_d_224 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_225;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine3_cmd_ready <= 1'd0;
	if (((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & (soc_sdram_choose_cmd_grant == 2'd3))) begin
		soc_sdram_bankmachine3_cmd_ready <= 1'd1;
	end
	if (((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & (soc_sdram_choose_req_grant == 2'd3))) begin
		soc_sdram_bankmachine3_cmd_ready <= 1'd1;
	end
// synthesis translate_off
	dummy_d_225 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_226;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine4_cmd_ready <= 1'd0;
	if (((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & (soc_sdram_choose_cmd_grant == 3'd4))) begin
		soc_sdram_bankmachine4_cmd_ready <= 1'd1;
	end
	if (((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & (soc_sdram_choose_req_grant == 3'd4))) begin
		soc_sdram_bankmachine4_cmd_ready <= 1'd1;
	end
// synthesis translate_off
	dummy_d_226 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_227;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine5_cmd_ready <= 1'd0;
	if (((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & (soc_sdram_choose_cmd_grant == 3'd5))) begin
		soc_sdram_bankmachine5_cmd_ready <= 1'd1;
	end
	if (((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & (soc_sdram_choose_req_grant == 3'd5))) begin
		soc_sdram_bankmachine5_cmd_ready <= 1'd1;
	end
// synthesis translate_off
	dummy_d_227 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_228;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine6_cmd_ready <= 1'd0;
	if (((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & (soc_sdram_choose_cmd_grant == 3'd6))) begin
		soc_sdram_bankmachine6_cmd_ready <= 1'd1;
	end
	if (((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & (soc_sdram_choose_req_grant == 3'd6))) begin
		soc_sdram_bankmachine6_cmd_ready <= 1'd1;
	end
// synthesis translate_off
	dummy_d_228 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_229;
// synthesis translate_on
always @(*) begin
	soc_sdram_bankmachine7_cmd_ready <= 1'd0;
	if (((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & (soc_sdram_choose_cmd_grant == 3'd7))) begin
		soc_sdram_bankmachine7_cmd_ready <= 1'd1;
	end
	if (((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & (soc_sdram_choose_req_grant == 3'd7))) begin
		soc_sdram_bankmachine7_cmd_ready <= 1'd1;
	end
// synthesis translate_off
	dummy_d_229 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_choose_cmd_ce = (soc_sdram_choose_cmd_cmd_ready | (~soc_sdram_choose_cmd_cmd_valid));

// synthesis translate_off
reg dummy_d_230;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_req_valids <= 8'd0;
	soc_sdram_choose_req_valids[0] <= (soc_sdram_bankmachine0_cmd_valid & (((soc_sdram_bankmachine0_cmd_payload_is_cmd & soc_sdram_choose_req_want_cmds) & ((~((soc_sdram_bankmachine0_cmd_payload_ras & (~soc_sdram_bankmachine0_cmd_payload_cas)) & (~soc_sdram_bankmachine0_cmd_payload_we))) | soc_sdram_choose_req_want_activates)) | ((soc_sdram_bankmachine0_cmd_payload_is_read == soc_sdram_choose_req_want_reads) & (soc_sdram_bankmachine0_cmd_payload_is_write == soc_sdram_choose_req_want_writes))));
	soc_sdram_choose_req_valids[1] <= (soc_sdram_bankmachine1_cmd_valid & (((soc_sdram_bankmachine1_cmd_payload_is_cmd & soc_sdram_choose_req_want_cmds) & ((~((soc_sdram_bankmachine1_cmd_payload_ras & (~soc_sdram_bankmachine1_cmd_payload_cas)) & (~soc_sdram_bankmachine1_cmd_payload_we))) | soc_sdram_choose_req_want_activates)) | ((soc_sdram_bankmachine1_cmd_payload_is_read == soc_sdram_choose_req_want_reads) & (soc_sdram_bankmachine1_cmd_payload_is_write == soc_sdram_choose_req_want_writes))));
	soc_sdram_choose_req_valids[2] <= (soc_sdram_bankmachine2_cmd_valid & (((soc_sdram_bankmachine2_cmd_payload_is_cmd & soc_sdram_choose_req_want_cmds) & ((~((soc_sdram_bankmachine2_cmd_payload_ras & (~soc_sdram_bankmachine2_cmd_payload_cas)) & (~soc_sdram_bankmachine2_cmd_payload_we))) | soc_sdram_choose_req_want_activates)) | ((soc_sdram_bankmachine2_cmd_payload_is_read == soc_sdram_choose_req_want_reads) & (soc_sdram_bankmachine2_cmd_payload_is_write == soc_sdram_choose_req_want_writes))));
	soc_sdram_choose_req_valids[3] <= (soc_sdram_bankmachine3_cmd_valid & (((soc_sdram_bankmachine3_cmd_payload_is_cmd & soc_sdram_choose_req_want_cmds) & ((~((soc_sdram_bankmachine3_cmd_payload_ras & (~soc_sdram_bankmachine3_cmd_payload_cas)) & (~soc_sdram_bankmachine3_cmd_payload_we))) | soc_sdram_choose_req_want_activates)) | ((soc_sdram_bankmachine3_cmd_payload_is_read == soc_sdram_choose_req_want_reads) & (soc_sdram_bankmachine3_cmd_payload_is_write == soc_sdram_choose_req_want_writes))));
	soc_sdram_choose_req_valids[4] <= (soc_sdram_bankmachine4_cmd_valid & (((soc_sdram_bankmachine4_cmd_payload_is_cmd & soc_sdram_choose_req_want_cmds) & ((~((soc_sdram_bankmachine4_cmd_payload_ras & (~soc_sdram_bankmachine4_cmd_payload_cas)) & (~soc_sdram_bankmachine4_cmd_payload_we))) | soc_sdram_choose_req_want_activates)) | ((soc_sdram_bankmachine4_cmd_payload_is_read == soc_sdram_choose_req_want_reads) & (soc_sdram_bankmachine4_cmd_payload_is_write == soc_sdram_choose_req_want_writes))));
	soc_sdram_choose_req_valids[5] <= (soc_sdram_bankmachine5_cmd_valid & (((soc_sdram_bankmachine5_cmd_payload_is_cmd & soc_sdram_choose_req_want_cmds) & ((~((soc_sdram_bankmachine5_cmd_payload_ras & (~soc_sdram_bankmachine5_cmd_payload_cas)) & (~soc_sdram_bankmachine5_cmd_payload_we))) | soc_sdram_choose_req_want_activates)) | ((soc_sdram_bankmachine5_cmd_payload_is_read == soc_sdram_choose_req_want_reads) & (soc_sdram_bankmachine5_cmd_payload_is_write == soc_sdram_choose_req_want_writes))));
	soc_sdram_choose_req_valids[6] <= (soc_sdram_bankmachine6_cmd_valid & (((soc_sdram_bankmachine6_cmd_payload_is_cmd & soc_sdram_choose_req_want_cmds) & ((~((soc_sdram_bankmachine6_cmd_payload_ras & (~soc_sdram_bankmachine6_cmd_payload_cas)) & (~soc_sdram_bankmachine6_cmd_payload_we))) | soc_sdram_choose_req_want_activates)) | ((soc_sdram_bankmachine6_cmd_payload_is_read == soc_sdram_choose_req_want_reads) & (soc_sdram_bankmachine6_cmd_payload_is_write == soc_sdram_choose_req_want_writes))));
	soc_sdram_choose_req_valids[7] <= (soc_sdram_bankmachine7_cmd_valid & (((soc_sdram_bankmachine7_cmd_payload_is_cmd & soc_sdram_choose_req_want_cmds) & ((~((soc_sdram_bankmachine7_cmd_payload_ras & (~soc_sdram_bankmachine7_cmd_payload_cas)) & (~soc_sdram_bankmachine7_cmd_payload_we))) | soc_sdram_choose_req_want_activates)) | ((soc_sdram_bankmachine7_cmd_payload_is_read == soc_sdram_choose_req_want_reads) & (soc_sdram_bankmachine7_cmd_payload_is_write == soc_sdram_choose_req_want_writes))));
// synthesis translate_off
	dummy_d_230 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_choose_req_request = soc_sdram_choose_req_valids;
assign soc_sdram_choose_req_cmd_valid = vns_rhs_array_muxed6;
assign soc_sdram_choose_req_cmd_payload_a = vns_rhs_array_muxed7;
assign soc_sdram_choose_req_cmd_payload_ba = vns_rhs_array_muxed8;
assign soc_sdram_choose_req_cmd_payload_is_read = vns_rhs_array_muxed9;
assign soc_sdram_choose_req_cmd_payload_is_write = vns_rhs_array_muxed10;
assign soc_sdram_choose_req_cmd_payload_is_cmd = vns_rhs_array_muxed11;

// synthesis translate_off
reg dummy_d_231;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_req_cmd_payload_cas <= 1'd0;
	if (soc_sdram_choose_req_cmd_valid) begin
		soc_sdram_choose_req_cmd_payload_cas <= vns_t_array_muxed3;
	end
// synthesis translate_off
	dummy_d_231 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_232;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_req_cmd_payload_ras <= 1'd0;
	if (soc_sdram_choose_req_cmd_valid) begin
		soc_sdram_choose_req_cmd_payload_ras <= vns_t_array_muxed4;
	end
// synthesis translate_off
	dummy_d_232 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_233;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_req_cmd_payload_we <= 1'd0;
	if (soc_sdram_choose_req_cmd_valid) begin
		soc_sdram_choose_req_cmd_payload_we <= vns_t_array_muxed5;
	end
// synthesis translate_off
	dummy_d_233 = dummy_s;
// synthesis translate_on
end
assign soc_sdram_choose_req_ce = (soc_sdram_choose_req_cmd_ready | (~soc_sdram_choose_req_cmd_valid));
assign soc_sdram_dfi_p0_reset_n = 1'd1;
assign soc_sdram_dfi_p0_cke = {1{soc_sdram_steerer0}};
assign soc_sdram_dfi_p0_odt = {1{soc_sdram_steerer1}};
assign soc_sdram_dfi_p1_reset_n = 1'd1;
assign soc_sdram_dfi_p1_cke = {1{soc_sdram_steerer2}};
assign soc_sdram_dfi_p1_odt = {1{soc_sdram_steerer3}};

// synthesis translate_off
reg dummy_d_234;
// synthesis translate_on
always @(*) begin
	vns_multiplexer_next_state <= 4'd0;
	vns_multiplexer_next_state <= vns_multiplexer_state;
	case (vns_multiplexer_state)
		1'd1: begin
			if (soc_sdram_read_available) begin
				if (((~soc_sdram_write_available) | soc_sdram_max_time1)) begin
					vns_multiplexer_next_state <= 2'd3;
				end
			end
			if (soc_sdram_go_to_refresh) begin
				vns_multiplexer_next_state <= 2'd2;
			end
		end
		2'd2: begin
			if (soc_sdram_cmd_last) begin
				vns_multiplexer_next_state <= 1'd0;
			end
		end
		2'd3: begin
			if (soc_sdram_twtrcon_ready) begin
				vns_multiplexer_next_state <= 1'd0;
			end
		end
		3'd4: begin
			vns_multiplexer_next_state <= 3'd5;
		end
		3'd5: begin
			vns_multiplexer_next_state <= 3'd6;
		end
		3'd6: begin
			vns_multiplexer_next_state <= 3'd7;
		end
		3'd7: begin
			vns_multiplexer_next_state <= 4'd8;
		end
		4'd8: begin
			vns_multiplexer_next_state <= 4'd9;
		end
		4'd9: begin
			vns_multiplexer_next_state <= 4'd10;
		end
		4'd10: begin
			vns_multiplexer_next_state <= 1'd1;
		end
		default: begin
			if (soc_sdram_write_available) begin
				if (((~soc_sdram_read_available) | soc_sdram_max_time0)) begin
					vns_multiplexer_next_state <= 3'd4;
				end
			end
			if (soc_sdram_go_to_refresh) begin
				vns_multiplexer_next_state <= 2'd2;
			end
		end
	endcase
// synthesis translate_off
	dummy_d_234 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_235;
// synthesis translate_on
always @(*) begin
	soc_sdram_cmd_ready <= 1'd0;
	case (vns_multiplexer_state)
		1'd1: begin
		end
		2'd2: begin
			soc_sdram_cmd_ready <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_235 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_236;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_cmd_want_activates <= 1'd0;
	case (vns_multiplexer_state)
		1'd1: begin
			if (1'd0) begin
			end else begin
				soc_sdram_choose_cmd_want_activates <= soc_sdram_ras_allowed;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
			if (1'd0) begin
			end else begin
				soc_sdram_choose_cmd_want_activates <= soc_sdram_ras_allowed;
			end
		end
	endcase
// synthesis translate_off
	dummy_d_236 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_237;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_cmd_cmd_ready <= 1'd0;
	case (vns_multiplexer_state)
		1'd1: begin
			if (1'd0) begin
			end else begin
				soc_sdram_choose_cmd_cmd_ready <= ((~((soc_sdram_choose_cmd_cmd_payload_ras & (~soc_sdram_choose_cmd_cmd_payload_cas)) & (~soc_sdram_choose_cmd_cmd_payload_we))) | soc_sdram_ras_allowed);
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
			if (1'd0) begin
			end else begin
				soc_sdram_choose_cmd_cmd_ready <= ((~((soc_sdram_choose_cmd_cmd_payload_ras & (~soc_sdram_choose_cmd_cmd_payload_cas)) & (~soc_sdram_choose_cmd_cmd_payload_we))) | soc_sdram_ras_allowed);
			end
		end
	endcase
// synthesis translate_off
	dummy_d_237 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_238;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_req_want_reads <= 1'd0;
	case (vns_multiplexer_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
			soc_sdram_choose_req_want_reads <= 1'd1;
		end
	endcase
// synthesis translate_off
	dummy_d_238 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_239;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_req_want_writes <= 1'd0;
	case (vns_multiplexer_state)
		1'd1: begin
			soc_sdram_choose_req_want_writes <= 1'd1;
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_239 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_240;
// synthesis translate_on
always @(*) begin
	soc_sdram_en0 <= 1'd0;
	case (vns_multiplexer_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
			soc_sdram_en0 <= 1'd1;
		end
	endcase
// synthesis translate_off
	dummy_d_240 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_241;
// synthesis translate_on
always @(*) begin
	soc_sdram_choose_req_cmd_ready <= 1'd0;
	case (vns_multiplexer_state)
		1'd1: begin
			if (1'd0) begin
				soc_sdram_choose_req_cmd_ready <= (soc_sdram_cas_allowed & ((~((soc_sdram_choose_req_cmd_payload_ras & (~soc_sdram_choose_req_cmd_payload_cas)) & (~soc_sdram_choose_req_cmd_payload_we))) | soc_sdram_ras_allowed));
			end else begin
				soc_sdram_choose_req_cmd_ready <= soc_sdram_cas_allowed;
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
			if (1'd0) begin
				soc_sdram_choose_req_cmd_ready <= (soc_sdram_cas_allowed & ((~((soc_sdram_choose_req_cmd_payload_ras & (~soc_sdram_choose_req_cmd_payload_cas)) & (~soc_sdram_choose_req_cmd_payload_we))) | soc_sdram_ras_allowed));
			end else begin
				soc_sdram_choose_req_cmd_ready <= soc_sdram_cas_allowed;
			end
		end
	endcase
// synthesis translate_off
	dummy_d_241 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_242;
// synthesis translate_on
always @(*) begin
	soc_sdram_en1 <= 1'd0;
	case (vns_multiplexer_state)
		1'd1: begin
			soc_sdram_en1 <= 1'd1;
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_242 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_243;
// synthesis translate_on
always @(*) begin
	soc_sdram_steerer_sel0 <= 2'd0;
	case (vns_multiplexer_state)
		1'd1: begin
			soc_sdram_steerer_sel0 <= 2'd2;
		end
		2'd2: begin
			soc_sdram_steerer_sel0 <= 2'd3;
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
			soc_sdram_steerer_sel0 <= 1'd1;
		end
	endcase
// synthesis translate_off
	dummy_d_243 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_244;
// synthesis translate_on
always @(*) begin
	soc_sdram_steerer_sel1 <= 2'd0;
	case (vns_multiplexer_state)
		1'd1: begin
			soc_sdram_steerer_sel1 <= 1'd1;
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		3'd5: begin
		end
		3'd6: begin
		end
		3'd7: begin
		end
		4'd8: begin
		end
		4'd9: begin
		end
		4'd10: begin
		end
		default: begin
			soc_sdram_steerer_sel1 <= 2'd2;
		end
	endcase
// synthesis translate_off
	dummy_d_244 = dummy_s;
// synthesis translate_on
end
assign vns_roundrobin0_request = {(((soc_cmd_payload_addr[10:8] == 1'd0) & (~(((((((vns_locked1 | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid), (((soc_port_cmd_payload_addr[10:8] == 1'd0) & (~(((((((vns_locked0 | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid)};
assign vns_roundrobin0_ce = ((~soc_sdram_interface_bank0_valid) & (~soc_sdram_interface_bank0_lock));
assign soc_sdram_interface_bank0_addr = vns_rhs_array_muxed12;
assign soc_sdram_interface_bank0_we = vns_rhs_array_muxed13;
assign soc_sdram_interface_bank0_valid = vns_rhs_array_muxed14;
assign vns_roundrobin1_request = {(((soc_cmd_payload_addr[10:8] == 1'd1) & (~(((((((vns_locked3 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid), (((soc_port_cmd_payload_addr[10:8] == 1'd1) & (~(((((((vns_locked2 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid)};
assign vns_roundrobin1_ce = ((~soc_sdram_interface_bank1_valid) & (~soc_sdram_interface_bank1_lock));
assign soc_sdram_interface_bank1_addr = vns_rhs_array_muxed15;
assign soc_sdram_interface_bank1_we = vns_rhs_array_muxed16;
assign soc_sdram_interface_bank1_valid = vns_rhs_array_muxed17;
assign vns_roundrobin2_request = {(((soc_cmd_payload_addr[10:8] == 2'd2) & (~(((((((vns_locked5 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid), (((soc_port_cmd_payload_addr[10:8] == 2'd2) & (~(((((((vns_locked4 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid)};
assign vns_roundrobin2_ce = ((~soc_sdram_interface_bank2_valid) & (~soc_sdram_interface_bank2_lock));
assign soc_sdram_interface_bank2_addr = vns_rhs_array_muxed18;
assign soc_sdram_interface_bank2_we = vns_rhs_array_muxed19;
assign soc_sdram_interface_bank2_valid = vns_rhs_array_muxed20;
assign vns_roundrobin3_request = {(((soc_cmd_payload_addr[10:8] == 2'd3) & (~(((((((vns_locked7 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid), (((soc_port_cmd_payload_addr[10:8] == 2'd3) & (~(((((((vns_locked6 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid)};
assign vns_roundrobin3_ce = ((~soc_sdram_interface_bank3_valid) & (~soc_sdram_interface_bank3_lock));
assign soc_sdram_interface_bank3_addr = vns_rhs_array_muxed21;
assign soc_sdram_interface_bank3_we = vns_rhs_array_muxed22;
assign soc_sdram_interface_bank3_valid = vns_rhs_array_muxed23;
assign vns_roundrobin4_request = {(((soc_cmd_payload_addr[10:8] == 3'd4) & (~(((((((vns_locked9 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid), (((soc_port_cmd_payload_addr[10:8] == 3'd4) & (~(((((((vns_locked8 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid)};
assign vns_roundrobin4_ce = ((~soc_sdram_interface_bank4_valid) & (~soc_sdram_interface_bank4_lock));
assign soc_sdram_interface_bank4_addr = vns_rhs_array_muxed24;
assign soc_sdram_interface_bank4_we = vns_rhs_array_muxed25;
assign soc_sdram_interface_bank4_valid = vns_rhs_array_muxed26;
assign vns_roundrobin5_request = {(((soc_cmd_payload_addr[10:8] == 3'd5) & (~(((((((vns_locked11 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid), (((soc_port_cmd_payload_addr[10:8] == 3'd5) & (~(((((((vns_locked10 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid)};
assign vns_roundrobin5_ce = ((~soc_sdram_interface_bank5_valid) & (~soc_sdram_interface_bank5_lock));
assign soc_sdram_interface_bank5_addr = vns_rhs_array_muxed27;
assign soc_sdram_interface_bank5_we = vns_rhs_array_muxed28;
assign soc_sdram_interface_bank5_valid = vns_rhs_array_muxed29;
assign vns_roundrobin6_request = {(((soc_cmd_payload_addr[10:8] == 3'd6) & (~(((((((vns_locked13 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid), (((soc_port_cmd_payload_addr[10:8] == 3'd6) & (~(((((((vns_locked12 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid)};
assign vns_roundrobin6_ce = ((~soc_sdram_interface_bank6_valid) & (~soc_sdram_interface_bank6_lock));
assign soc_sdram_interface_bank6_addr = vns_rhs_array_muxed30;
assign soc_sdram_interface_bank6_we = vns_rhs_array_muxed31;
assign soc_sdram_interface_bank6_valid = vns_rhs_array_muxed32;
assign vns_roundrobin7_request = {(((soc_cmd_payload_addr[10:8] == 3'd7) & (~(((((((vns_locked15 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))))) & soc_cmd_valid), (((soc_port_cmd_payload_addr[10:8] == 3'd7) & (~(((((((vns_locked14 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))))) & soc_port_cmd_valid)};
assign vns_roundrobin7_ce = ((~soc_sdram_interface_bank7_valid) & (~soc_sdram_interface_bank7_lock));
assign soc_sdram_interface_bank7_addr = vns_rhs_array_muxed33;
assign soc_sdram_interface_bank7_we = vns_rhs_array_muxed34;
assign soc_sdram_interface_bank7_valid = vns_rhs_array_muxed35;
assign soc_port_cmd_ready = ((((((((1'd0 | (((vns_roundrobin0_grant == 1'd0) & ((soc_port_cmd_payload_addr[10:8] == 1'd0) & (~(((((((vns_locked0 | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0)))))) & soc_sdram_interface_bank0_ready)) | (((vns_roundrobin1_grant == 1'd0) & ((soc_port_cmd_payload_addr[10:8] == 1'd1) & (~(((((((vns_locked2 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0)))))) & soc_sdram_interface_bank1_ready)) | (((vns_roundrobin2_grant == 1'd0) & ((soc_port_cmd_payload_addr[10:8] == 2'd2) & (~(((((((vns_locked4 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0)))))) & soc_sdram_interface_bank2_ready)) | (((vns_roundrobin3_grant == 1'd0) & ((soc_port_cmd_payload_addr[10:8] == 2'd3) & (~(((((((vns_locked6 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0)))))) & soc_sdram_interface_bank3_ready)) | (((vns_roundrobin4_grant == 1'd0) & ((soc_port_cmd_payload_addr[10:8] == 3'd4) & (~(((((((vns_locked8 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0)))))) & soc_sdram_interface_bank4_ready)) | (((vns_roundrobin5_grant == 1'd0) & ((soc_port_cmd_payload_addr[10:8] == 3'd5) & (~(((((((vns_locked10 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0)))))) & soc_sdram_interface_bank5_ready)) | (((vns_roundrobin6_grant == 1'd0) & ((soc_port_cmd_payload_addr[10:8] == 3'd6) & (~(((((((vns_locked12 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0)))))) & soc_sdram_interface_bank6_ready)) | (((vns_roundrobin7_grant == 1'd0) & ((soc_port_cmd_payload_addr[10:8] == 3'd7) & (~(((((((vns_locked14 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0)))))) & soc_sdram_interface_bank7_ready));
assign soc_cmd_ready = ((((((((1'd0 | (((vns_roundrobin0_grant == 1'd1) & ((soc_cmd_payload_addr[10:8] == 1'd0) & (~(((((((vns_locked1 | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1)))))) & soc_sdram_interface_bank0_ready)) | (((vns_roundrobin1_grant == 1'd1) & ((soc_cmd_payload_addr[10:8] == 1'd1) & (~(((((((vns_locked3 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1)))))) & soc_sdram_interface_bank1_ready)) | (((vns_roundrobin2_grant == 1'd1) & ((soc_cmd_payload_addr[10:8] == 2'd2) & (~(((((((vns_locked5 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1)))))) & soc_sdram_interface_bank2_ready)) | (((vns_roundrobin3_grant == 1'd1) & ((soc_cmd_payload_addr[10:8] == 2'd3) & (~(((((((vns_locked7 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1)))))) & soc_sdram_interface_bank3_ready)) | (((vns_roundrobin4_grant == 1'd1) & ((soc_cmd_payload_addr[10:8] == 3'd4) & (~(((((((vns_locked9 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1)))))) & soc_sdram_interface_bank4_ready)) | (((vns_roundrobin5_grant == 1'd1) & ((soc_cmd_payload_addr[10:8] == 3'd5) & (~(((((((vns_locked11 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1)))))) & soc_sdram_interface_bank5_ready)) | (((vns_roundrobin6_grant == 1'd1) & ((soc_cmd_payload_addr[10:8] == 3'd6) & (~(((((((vns_locked13 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1)))))) & soc_sdram_interface_bank6_ready)) | (((vns_roundrobin7_grant == 1'd1) & ((soc_cmd_payload_addr[10:8] == 3'd7) & (~(((((((vns_locked15 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1)))))) & soc_sdram_interface_bank7_ready));
assign soc_port_wdata_ready = vns_new_master_wdata_ready1;
assign soc_wdata_ready = vns_new_master_wdata_ready3;
assign soc_port_rdata_valid = vns_new_master_rdata_valid8;
assign soc_rdata_valid = vns_new_master_rdata_valid17;

// synthesis translate_off
reg dummy_d_245;
// synthesis translate_on
always @(*) begin
	soc_sdram_interface_wdata_we <= 8'd0;
	case ({vns_new_master_wdata_ready3, vns_new_master_wdata_ready1})
		1'd1: begin
			soc_sdram_interface_wdata_we <= soc_port_wdata_payload_we;
		end
		2'd2: begin
			soc_sdram_interface_wdata_we <= soc_wdata_payload_we;
		end
		default: begin
			soc_sdram_interface_wdata_we <= 1'd0;
		end
	endcase
// synthesis translate_off
	dummy_d_245 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_246;
// synthesis translate_on
always @(*) begin
	soc_sdram_interface_wdata <= 64'd0;
	case ({vns_new_master_wdata_ready3, vns_new_master_wdata_ready1})
		1'd1: begin
			soc_sdram_interface_wdata <= soc_port_wdata_payload_data;
		end
		2'd2: begin
			soc_sdram_interface_wdata <= soc_wdata_payload_data;
		end
		default: begin
			soc_sdram_interface_wdata <= 1'd0;
		end
	endcase
// synthesis translate_off
	dummy_d_246 = dummy_s;
// synthesis translate_on
end
assign soc_port_rdata_payload_data = soc_sdram_interface_rdata;
assign soc_rdata_payload_data = soc_sdram_interface_rdata;
assign soc_address_d = soc_wb_sdram_adr;
assign soc_counter_offset = soc_address_q;
assign soc_counter_done = ((soc_counter + soc_counter_offset) == 1'd1);
assign soc_end_of_burst = ((~soc_wb_sdram_cyc) | (((soc_wb_sdram_stb & soc_wb_sdram_cyc) & soc_wb_sdram_ack) & ((soc_wb_sdram_cti == 3'd7) | soc_counter_done)));
assign soc_need_refill_reset = soc_end_of_burst;
assign soc_need_refill_d = 1'd0;
assign soc_litedram_wb_cti = 3'd7;
assign soc_litedram_wb_adr = soc_address_q[29:1];
assign soc_cached_sels_reset0 = soc_counter_reset;

// synthesis translate_off
reg dummy_d_247;
// synthesis translate_on
always @(*) begin
	soc_cached_datas_flipflop0_d <= 32'd0;
	if (soc_write) begin
		soc_cached_datas_flipflop0_d <= soc_wb_sdram_dat_w;
	end else begin
		soc_cached_datas_flipflop0_d <= soc_litedram_wb_dat_r[31:0];
	end
// synthesis translate_off
	dummy_d_247 = dummy_s;
// synthesis translate_on
end
assign soc_cached_sels_flipflop0_d = soc_wb_sdram_sel;

// synthesis translate_off
reg dummy_d_248;
// synthesis translate_on
always @(*) begin
	soc_cached_sels_ce0 <= 1'd0;
	if (((soc_write & soc_write_sel0) | soc_refill)) begin
		soc_cached_sels_ce0 <= 1'd1;
	end
// synthesis translate_off
	dummy_d_248 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_249;
// synthesis translate_on
always @(*) begin
	soc_cached_datas_ce0 <= 1'd0;
	if (((soc_write & soc_write_sel0) | soc_refill)) begin
		soc_cached_datas_ce0 <= 1'd1;
	end
// synthesis translate_off
	dummy_d_249 = dummy_s;
// synthesis translate_on
end
assign soc_cached_sels_reset1 = soc_counter_reset;

// synthesis translate_off
reg dummy_d_250;
// synthesis translate_on
always @(*) begin
	soc_cached_datas_flipflop1_d <= 32'd0;
	if (soc_write) begin
		soc_cached_datas_flipflop1_d <= soc_wb_sdram_dat_w;
	end else begin
		soc_cached_datas_flipflop1_d <= soc_litedram_wb_dat_r[63:32];
	end
// synthesis translate_off
	dummy_d_250 = dummy_s;
// synthesis translate_on
end
assign soc_cached_sels_flipflop1_d = soc_wb_sdram_sel;

// synthesis translate_off
reg dummy_d_251;
// synthesis translate_on
always @(*) begin
	soc_cached_sels_ce1 <= 1'd0;
	if (((soc_write & soc_write_sel1) | soc_refill)) begin
		soc_cached_sels_ce1 <= 1'd1;
	end
// synthesis translate_off
	dummy_d_251 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_252;
// synthesis translate_on
always @(*) begin
	soc_cached_datas_ce1 <= 1'd0;
	if (((soc_write & soc_write_sel1) | soc_refill)) begin
		soc_cached_datas_ce1 <= 1'd1;
	end
// synthesis translate_off
	dummy_d_252 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_253;
// synthesis translate_on
always @(*) begin
	soc_write_sel1 <= 1'd0;
	case ((soc_counter + soc_counter_offset))
		1'd0: begin
		end
		1'd1: begin
			soc_write_sel1 <= 1'd1;
		end
	endcase
// synthesis translate_off
	dummy_d_253 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_254;
// synthesis translate_on
always @(*) begin
	soc_write_sel0 <= 1'd0;
	case ((soc_counter + soc_counter_offset))
		1'd0: begin
			soc_write_sel0 <= 1'd1;
		end
		1'd1: begin
		end
	endcase
// synthesis translate_off
	dummy_d_254 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_255;
// synthesis translate_on
always @(*) begin
	soc_wb_sdram_dat_r <= 32'd0;
	case (soc_address_q[0])
		1'd0: begin
			soc_wb_sdram_dat_r <= soc_cached_datas_flipflop0_q;
		end
		1'd1: begin
			soc_wb_sdram_dat_r <= soc_cached_datas_flipflop1_q;
		end
	endcase
// synthesis translate_off
	dummy_d_255 = dummy_s;
// synthesis translate_on
end
assign soc_cached_data = {soc_cached_datas_flipflop1_q, soc_cached_datas_flipflop0_q};
assign soc_cached_sel = {soc_cached_sels_flipflop1_q, soc_cached_sels_flipflop0_q};

// synthesis translate_off
reg dummy_d_256;
// synthesis translate_on
always @(*) begin
	vns_converter_next_state <= 3'd0;
	vns_converter_next_state <= vns_converter_state;
	case (vns_converter_state)
		1'd1: begin
			if ((soc_wb_sdram_stb & soc_wb_sdram_cyc)) begin
				if (soc_counter_done) begin
					vns_converter_next_state <= 2'd2;
				end
			end else begin
				if ((~soc_wb_sdram_cyc)) begin
					vns_converter_next_state <= 2'd2;
				end
			end
		end
		2'd2: begin
			if (soc_litedram_wb_ack) begin
				vns_converter_next_state <= 1'd0;
			end
		end
		2'd3: begin
			if (soc_litedram_wb_ack) begin
				vns_converter_next_state <= 3'd4;
			end
		end
		3'd4: begin
			vns_converter_next_state <= 1'd0;
		end
		default: begin
			if ((soc_wb_sdram_stb & soc_wb_sdram_cyc)) begin
				if (soc_wb_sdram_we) begin
					vns_converter_next_state <= 1'd1;
				end else begin
					if (soc_need_refill_q) begin
						vns_converter_next_state <= 2'd3;
					end else begin
						vns_converter_next_state <= 3'd4;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_256 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_257;
// synthesis translate_on
always @(*) begin
	soc_address_ce <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		default: begin
			if ((soc_wb_sdram_stb & soc_wb_sdram_cyc)) begin
				soc_address_ce <= 1'd1;
			end
		end
	endcase
// synthesis translate_off
	dummy_d_257 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_258;
// synthesis translate_on
always @(*) begin
	soc_litedram_wb_dat_w <= 64'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
			soc_litedram_wb_dat_w <= soc_cached_data;
		end
		2'd3: begin
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_258 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_259;
// synthesis translate_on
always @(*) begin
	soc_litedram_wb_sel <= 8'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
			soc_litedram_wb_sel <= soc_cached_sel;
		end
		2'd3: begin
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_259 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_260;
// synthesis translate_on
always @(*) begin
	soc_counter_ce <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
			if ((soc_wb_sdram_stb & soc_wb_sdram_cyc)) begin
				soc_counter_ce <= 1'd1;
			end else begin
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_260 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_261;
// synthesis translate_on
always @(*) begin
	soc_litedram_wb_cyc <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
			soc_litedram_wb_cyc <= 1'd1;
		end
		2'd3: begin
			soc_litedram_wb_cyc <= 1'd1;
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_261 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_262;
// synthesis translate_on
always @(*) begin
	soc_counter_reset <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		default: begin
			soc_counter_reset <= 1'd1;
		end
	endcase
// synthesis translate_off
	dummy_d_262 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_263;
// synthesis translate_on
always @(*) begin
	soc_litedram_wb_stb <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
			soc_litedram_wb_stb <= 1'd1;
		end
		2'd3: begin
			soc_litedram_wb_stb <= 1'd1;
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_263 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_264;
// synthesis translate_on
always @(*) begin
	soc_need_refill_ce <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			if (soc_litedram_wb_ack) begin
				soc_need_refill_ce <= 1'd1;
			end
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_264 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_265;
// synthesis translate_on
always @(*) begin
	soc_litedram_wb_we <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
			soc_litedram_wb_we <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_265 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_266;
// synthesis translate_on
always @(*) begin
	soc_write <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
			if ((soc_wb_sdram_stb & soc_wb_sdram_cyc)) begin
				soc_write <= 1'd1;
			end else begin
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_266 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_267;
// synthesis translate_on
always @(*) begin
	soc_wb_sdram_ack <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
			if ((soc_wb_sdram_stb & soc_wb_sdram_cyc)) begin
				soc_wb_sdram_ack <= 1'd1;
			end else begin
			end
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			if ((soc_wb_sdram_stb & soc_wb_sdram_cyc)) begin
				soc_wb_sdram_ack <= 1'd1;
			end
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_267 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_268;
// synthesis translate_on
always @(*) begin
	soc_evict <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
			soc_evict <= 1'd1;
		end
		2'd3: begin
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_268 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_269;
// synthesis translate_on
always @(*) begin
	soc_refill <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
			soc_refill <= 1'd1;
		end
		3'd4: begin
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_269 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_270;
// synthesis translate_on
always @(*) begin
	soc_read <= 1'd0;
	case (vns_converter_state)
		1'd1: begin
		end
		2'd2: begin
		end
		2'd3: begin
		end
		3'd4: begin
			soc_read <= 1'd1;
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_270 = dummy_s;
// synthesis translate_on
end
assign soc_wdata_converter_sink_valid = ((soc_litedram_wb_cyc & soc_litedram_wb_stb) & soc_litedram_wb_we);
assign soc_wdata_converter_sink_payload_data = soc_litedram_wb_dat_w;
assign soc_wdata_converter_sink_payload_we = soc_litedram_wb_sel;
assign soc_port_wdata_valid = soc_wdata_converter_source_valid;
assign soc_wdata_converter_source_ready = soc_port_wdata_ready;
assign soc_port_wdata_first = soc_wdata_converter_source_first;
assign soc_port_wdata_last = soc_wdata_converter_source_last;
assign soc_port_wdata_payload_data = soc_wdata_converter_source_payload_data;
assign soc_port_wdata_payload_we = soc_wdata_converter_source_payload_we;
assign soc_rdata_converter_sink_valid = soc_port_rdata_valid;
assign soc_port_rdata_ready = soc_rdata_converter_sink_ready;
assign soc_rdata_converter_sink_first = soc_port_rdata_first;
assign soc_rdata_converter_sink_last = soc_port_rdata_last;
assign soc_rdata_converter_sink_payload_data = soc_port_rdata_payload_data;
assign soc_rdata_converter_source_ready = 1'd1;
assign soc_litedram_wb_dat_r = soc_rdata_converter_source_payload_data;
assign soc_wdata_converter_converter_sink_valid = soc_wdata_converter_sink_valid;
assign soc_wdata_converter_converter_sink_first = soc_wdata_converter_sink_first;
assign soc_wdata_converter_converter_sink_last = soc_wdata_converter_sink_last;
assign soc_wdata_converter_sink_ready = soc_wdata_converter_converter_sink_ready;
assign soc_wdata_converter_converter_sink_payload_data = {soc_wdata_converter_sink_payload_we, soc_wdata_converter_sink_payload_data};
assign soc_wdata_converter_source_valid = soc_wdata_converter_source_source_valid;
assign soc_wdata_converter_source_first = soc_wdata_converter_source_source_first;
assign soc_wdata_converter_source_last = soc_wdata_converter_source_source_last;
assign soc_wdata_converter_source_source_ready = soc_wdata_converter_source_ready;
assign {soc_wdata_converter_source_payload_we, soc_wdata_converter_source_payload_data} = soc_wdata_converter_source_source_payload_data;
assign {soc_wdata_converter_source_payload_we, soc_wdata_converter_source_payload_data} = soc_wdata_converter_source_source_payload_data;
assign soc_wdata_converter_source_source_valid = soc_wdata_converter_converter_source_valid;
assign soc_wdata_converter_converter_source_ready = soc_wdata_converter_source_source_ready;
assign soc_wdata_converter_source_source_first = soc_wdata_converter_converter_source_first;
assign soc_wdata_converter_source_source_last = soc_wdata_converter_converter_source_last;
assign soc_wdata_converter_source_source_payload_data = soc_wdata_converter_converter_source_payload_data;
assign soc_wdata_converter_converter_source_valid = soc_wdata_converter_converter_sink_valid;
assign soc_wdata_converter_converter_sink_ready = soc_wdata_converter_converter_source_ready;
assign soc_wdata_converter_converter_source_first = soc_wdata_converter_converter_sink_first;
assign soc_wdata_converter_converter_source_last = soc_wdata_converter_converter_sink_last;
assign soc_wdata_converter_converter_source_payload_data = soc_wdata_converter_converter_sink_payload_data;
assign soc_wdata_converter_converter_source_payload_valid_token_count = 1'd1;
assign soc_rdata_converter_converter_sink_valid = soc_rdata_converter_sink_valid;
assign soc_rdata_converter_converter_sink_first = soc_rdata_converter_sink_first;
assign soc_rdata_converter_converter_sink_last = soc_rdata_converter_sink_last;
assign soc_rdata_converter_sink_ready = soc_rdata_converter_converter_sink_ready;
assign soc_rdata_converter_converter_sink_payload_data = {soc_rdata_converter_sink_payload_data};
assign soc_rdata_converter_source_valid = soc_rdata_converter_source_source_valid;
assign soc_rdata_converter_source_first = soc_rdata_converter_source_source_first;
assign soc_rdata_converter_source_last = soc_rdata_converter_source_source_last;
assign soc_rdata_converter_source_source_ready = soc_rdata_converter_source_ready;
assign {soc_rdata_converter_source_payload_data} = soc_rdata_converter_source_source_payload_data;
assign soc_rdata_converter_source_source_valid = soc_rdata_converter_converter_source_valid;
assign soc_rdata_converter_converter_source_ready = soc_rdata_converter_source_source_ready;
assign soc_rdata_converter_source_source_first = soc_rdata_converter_converter_source_first;
assign soc_rdata_converter_source_source_last = soc_rdata_converter_converter_source_last;
assign soc_rdata_converter_source_source_payload_data = soc_rdata_converter_converter_source_payload_data;
assign soc_rdata_converter_converter_source_valid = soc_rdata_converter_converter_sink_valid;
assign soc_rdata_converter_converter_sink_ready = soc_rdata_converter_converter_source_ready;
assign soc_rdata_converter_converter_source_first = soc_rdata_converter_converter_sink_first;
assign soc_rdata_converter_converter_source_last = soc_rdata_converter_converter_sink_last;
assign soc_rdata_converter_converter_source_payload_data = soc_rdata_converter_converter_sink_payload_data;
assign soc_rdata_converter_converter_source_payload_valid_token_count = 1'd1;

// synthesis translate_off
reg dummy_d_271;
// synthesis translate_on
always @(*) begin
	vns_litedramwishbone2native_next_state <= 2'd0;
	vns_litedramwishbone2native_next_state <= vns_litedramwishbone2native_state;
	case (vns_litedramwishbone2native_state)
		1'd1: begin
			if (soc_wdata_converter_sink_ready) begin
				vns_litedramwishbone2native_next_state <= 1'd0;
			end
		end
		2'd2: begin
			if (soc_rdata_converter_source_valid) begin
				vns_litedramwishbone2native_next_state <= 1'd0;
			end
		end
		default: begin
			if ((soc_port_cmd_valid & soc_port_cmd_ready)) begin
				if ((soc_count == 1'd0)) begin
					if (soc_litedram_wb_we) begin
						vns_litedramwishbone2native_next_state <= 1'd1;
					end else begin
						vns_litedramwishbone2native_next_state <= 2'd2;
					end
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_271 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_272;
// synthesis translate_on
always @(*) begin
	soc_port_cmd_valid <= 1'd0;
	case (vns_litedramwishbone2native_state)
		1'd1: begin
		end
		2'd2: begin
		end
		default: begin
			soc_port_cmd_valid <= (soc_litedram_wb_cyc & soc_litedram_wb_stb);
		end
	endcase
// synthesis translate_off
	dummy_d_272 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_273;
// synthesis translate_on
always @(*) begin
	soc_litedram_wb_ack <= 1'd0;
	case (vns_litedramwishbone2native_state)
		1'd1: begin
			if (soc_wdata_converter_sink_ready) begin
				soc_litedram_wb_ack <= 1'd1;
			end
		end
		2'd2: begin
			if (soc_rdata_converter_source_valid) begin
				soc_litedram_wb_ack <= 1'd1;
			end
		end
		default: begin
		end
	endcase
// synthesis translate_off
	dummy_d_273 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_274;
// synthesis translate_on
always @(*) begin
	soc_port_cmd_payload_we <= 1'd0;
	case (vns_litedramwishbone2native_state)
		1'd1: begin
		end
		2'd2: begin
		end
		default: begin
			soc_port_cmd_payload_we <= soc_litedram_wb_we;
		end
	endcase
// synthesis translate_off
	dummy_d_274 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_275;
// synthesis translate_on
always @(*) begin
	soc_port_cmd_payload_addr <= 24'd0;
	case (vns_litedramwishbone2native_state)
		1'd1: begin
		end
		2'd2: begin
		end
		default: begin
			soc_port_cmd_payload_addr <= (((soc_litedram_wb_adr * 1'd1) + soc_count) - 28'd134217728);
		end
	endcase
// synthesis translate_off
	dummy_d_275 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_276;
// synthesis translate_on
always @(*) begin
	soc_count_next_value <= 1'd0;
	case (vns_litedramwishbone2native_state)
		1'd1: begin
		end
		2'd2: begin
		end
		default: begin
			if ((soc_port_cmd_valid & soc_port_cmd_ready)) begin
				soc_count_next_value <= (soc_count + 1'd1);
				if ((soc_count == 1'd0)) begin
					soc_count_next_value <= 1'd0;
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_276 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_277;
// synthesis translate_on
always @(*) begin
	soc_count_next_value_ce <= 1'd0;
	case (vns_litedramwishbone2native_state)
		1'd1: begin
		end
		2'd2: begin
		end
		default: begin
			if ((soc_port_cmd_valid & soc_port_cmd_ready)) begin
				soc_count_next_value_ce <= 1'd1;
				if ((soc_count == 1'd0)) begin
					soc_count_next_value_ce <= 1'd1;
				end
			end
		end
	endcase
// synthesis translate_off
	dummy_d_277 = dummy_s;
// synthesis translate_on
end
assign soc_ce = ((~soc_cmd_valid) | soc_cmd_ready);

// synthesis translate_off
reg dummy_d_278;
// synthesis translate_on
always @(*) begin
	soc_request <= 2'd0;
	soc_request[0] <= soc_write_cmd_request;
	soc_request[1] <= soc_read_cmd_request;
// synthesis translate_off
	dummy_d_278 = dummy_s;
// synthesis translate_on
end
assign soc_write_cmd_grant = (soc_grant == 1'd0);
assign soc_read_cmd_grant = (soc_grant == 1'd1);
assign soc_write_aw_buffer_sink_valid = soc_aw_valid;
assign soc_aw_ready = soc_write_aw_buffer_sink_ready;
assign soc_write_aw_buffer_sink_first = soc_aw_first;
assign soc_write_aw_buffer_sink_last = soc_aw_last;
assign soc_write_aw_buffer_sink_payload_addr = soc_aw_payload_addr;
assign soc_write_aw_buffer_sink_payload_burst = soc_aw_payload_burst;
assign soc_write_aw_buffer_sink_payload_len = soc_aw_payload_len;
assign soc_write_aw_buffer_sink_payload_size = soc_aw_payload_size;
assign soc_write_aw_buffer_sink_payload_lock = soc_aw_payload_lock;
assign soc_write_aw_buffer_sink_payload_prot = soc_aw_payload_prot;
assign soc_write_aw_buffer_sink_payload_cache = soc_aw_payload_cache;
assign soc_write_aw_buffer_sink_payload_qos = soc_aw_payload_qos;
assign soc_write_aw_buffer_sink_payload_id = soc_aw_payload_id;
assign soc_write_id_buffer_sink_valid = ((soc_write_aw_valid & soc_write_aw_first) & soc_write_aw_ready);
assign soc_write_id_buffer_sink_payload_id = soc_write_aw_payload_id;

// synthesis translate_off
reg dummy_d_279;
// synthesis translate_on
always @(*) begin
	soc_write_id_buffer_source_ready <= 1'd0;
	if (((soc_write_w_buffer_source_valid & soc_write_w_buffer_source_last) & soc_write_w_buffer_source_ready)) begin
		soc_write_id_buffer_source_ready <= 1'd1;
	end
// synthesis translate_off
	dummy_d_279 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_280;
// synthesis translate_on
always @(*) begin
	soc_write_resp_buffer_sink_payload_id <= 6'd0;
	if (((soc_write_w_buffer_source_valid & soc_write_w_buffer_source_last) & soc_write_w_buffer_source_ready)) begin
		soc_write_resp_buffer_sink_payload_id <= soc_write_id_buffer_source_payload_id;
	end
// synthesis translate_off
	dummy_d_280 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_281;
// synthesis translate_on
always @(*) begin
	soc_write_resp_buffer_sink_valid <= 1'd0;
	if (((soc_write_w_buffer_source_valid & soc_write_w_buffer_source_last) & soc_write_w_buffer_source_ready)) begin
		soc_write_resp_buffer_sink_valid <= 1'd1;
	end
// synthesis translate_off
	dummy_d_281 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_282;
// synthesis translate_on
always @(*) begin
	soc_write_resp_buffer_sink_payload_resp <= 2'd0;
	if (((soc_write_w_buffer_source_valid & soc_write_w_buffer_source_last) & soc_write_w_buffer_source_ready)) begin
		soc_write_resp_buffer_sink_payload_resp <= 1'd0;
	end
// synthesis translate_off
	dummy_d_282 = dummy_s;
// synthesis translate_on
end
assign soc_b_valid = soc_write_resp_buffer_source_valid;
assign soc_write_resp_buffer_source_ready = soc_b_ready;
assign soc_b_first = soc_write_resp_buffer_source_first;
assign soc_b_last = soc_write_resp_buffer_source_last;
assign soc_b_payload_id = soc_write_resp_buffer_source_payload_id;
assign soc_b_payload_resp = soc_write_resp_buffer_source_payload_resp;
assign soc_write_cmd_request = ((soc_write_aw_valid & soc_w_valid) & soc_write_w_buffer_sink_ready);

// synthesis translate_off
reg dummy_d_283;
// synthesis translate_on
always @(*) begin
	soc_cmd_payload_we <= 1'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		soc_cmd_payload_we <= 1'd1;
	end
	if (soc_read_cmd_grant) begin
		soc_cmd_payload_we <= 1'd0;
	end
// synthesis translate_off
	dummy_d_283 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_284;
// synthesis translate_on
always @(*) begin
	soc_write_w_buffer_sink_payload_id <= 6'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		soc_write_w_buffer_sink_payload_id <= soc_w_payload_id;
	end
// synthesis translate_off
	dummy_d_284 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_285;
// synthesis translate_on
always @(*) begin
	soc_cmd_payload_addr <= 24'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		soc_cmd_payload_addr <= ((soc_write_aw_payload_addr - 1'd0) >>> 2'd3);
	end
	if (soc_read_cmd_grant) begin
		soc_cmd_payload_addr <= ((soc_read_ar_payload_addr - 1'd0) >>> 2'd3);
	end
// synthesis translate_off
	dummy_d_285 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_286;
// synthesis translate_on
always @(*) begin
	soc_w_ready <= 1'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		if (soc_cmd_ready) begin
			soc_w_ready <= 1'd1;
		end
	end
// synthesis translate_off
	dummy_d_286 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_287;
// synthesis translate_on
always @(*) begin
	soc_write_w_buffer_sink_valid <= 1'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		if (soc_cmd_ready) begin
			soc_write_w_buffer_sink_valid <= 1'd1;
		end
	end
// synthesis translate_off
	dummy_d_287 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_288;
// synthesis translate_on
always @(*) begin
	soc_write_aw_ready <= 1'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		soc_write_aw_ready <= soc_cmd_ready;
	end
// synthesis translate_off
	dummy_d_288 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_289;
// synthesis translate_on
always @(*) begin
	soc_cmd_valid <= 1'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		soc_cmd_valid <= 1'd1;
	end
	if (soc_read_cmd_grant) begin
		soc_cmd_valid <= (soc_read_ar_valid & soc_read_can_read);
	end
// synthesis translate_off
	dummy_d_289 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_290;
// synthesis translate_on
always @(*) begin
	soc_write_w_buffer_sink_first <= 1'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		soc_write_w_buffer_sink_first <= soc_w_first;
	end
// synthesis translate_off
	dummy_d_290 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_291;
// synthesis translate_on
always @(*) begin
	soc_write_w_buffer_sink_last <= 1'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		soc_write_w_buffer_sink_last <= soc_w_last;
	end
// synthesis translate_off
	dummy_d_291 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_292;
// synthesis translate_on
always @(*) begin
	soc_write_w_buffer_sink_payload_data <= 64'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		soc_write_w_buffer_sink_payload_data <= soc_w_payload_data;
	end
// synthesis translate_off
	dummy_d_292 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_293;
// synthesis translate_on
always @(*) begin
	soc_write_w_buffer_sink_payload_strb <= 8'd0;
	if ((soc_write_cmd_request & soc_write_cmd_grant)) begin
		soc_write_w_buffer_sink_payload_strb <= soc_w_payload_strb;
	end
// synthesis translate_off
	dummy_d_293 = dummy_s;
// synthesis translate_on
end
assign soc_wdata_valid = soc_write_w_buffer_source_valid;
assign soc_write_w_buffer_source_ready = soc_wdata_ready;
assign soc_wdata_first = soc_write_w_buffer_source_first;
assign soc_wdata_last = soc_write_w_buffer_source_last;
assign soc_wdata_payload_data = soc_write_w_buffer_source_payload_data;
assign soc_wdata_payload_we = soc_write_w_buffer_source_payload_strb;
assign soc_write_aw_buffer_sink_ready = ((~soc_write_aw_buffer_source_valid) | soc_write_aw_buffer_source_ready);
assign soc_write_beat_size = (1'd1 <<< soc_write_aw_buffer_source_payload_size);
assign soc_write_beat_wrap = (soc_write_aw_buffer_source_payload_len <<< soc_write_aw_buffer_source_payload_size);
assign soc_write_aw_valid = (soc_write_aw_buffer_source_valid | (~soc_write_aw_first));
assign soc_write_aw_first = (soc_write_beat_count == 1'd0);
assign soc_write_aw_last = (soc_write_beat_count == soc_write_aw_buffer_source_payload_len);
assign soc_write_aw_payload_addr = (soc_write_aw_buffer_source_payload_addr + soc_write_beat_offset);
assign soc_write_aw_payload_id = soc_write_aw_buffer_source_payload_id;

// synthesis translate_off
reg dummy_d_294;
// synthesis translate_on
always @(*) begin
	soc_write_aw_buffer_source_ready <= 1'd0;
	if (soc_write_aw_ready) begin
		if (soc_write_aw_last) begin
			soc_write_aw_buffer_source_ready <= 1'd1;
		end
	end
// synthesis translate_off
	dummy_d_294 = dummy_s;
// synthesis translate_on
end
assign soc_write_w_buffer_syncfifo_din = {soc_write_w_buffer_fifo_in_last, soc_write_w_buffer_fifo_in_first, soc_write_w_buffer_fifo_in_payload_id, soc_write_w_buffer_fifo_in_payload_strb, soc_write_w_buffer_fifo_in_payload_data};
assign {soc_write_w_buffer_fifo_out_last, soc_write_w_buffer_fifo_out_first, soc_write_w_buffer_fifo_out_payload_id, soc_write_w_buffer_fifo_out_payload_strb, soc_write_w_buffer_fifo_out_payload_data} = soc_write_w_buffer_syncfifo_dout;
assign {soc_write_w_buffer_fifo_out_last, soc_write_w_buffer_fifo_out_first, soc_write_w_buffer_fifo_out_payload_id, soc_write_w_buffer_fifo_out_payload_strb, soc_write_w_buffer_fifo_out_payload_data} = soc_write_w_buffer_syncfifo_dout;
assign {soc_write_w_buffer_fifo_out_last, soc_write_w_buffer_fifo_out_first, soc_write_w_buffer_fifo_out_payload_id, soc_write_w_buffer_fifo_out_payload_strb, soc_write_w_buffer_fifo_out_payload_data} = soc_write_w_buffer_syncfifo_dout;
assign {soc_write_w_buffer_fifo_out_last, soc_write_w_buffer_fifo_out_first, soc_write_w_buffer_fifo_out_payload_id, soc_write_w_buffer_fifo_out_payload_strb, soc_write_w_buffer_fifo_out_payload_data} = soc_write_w_buffer_syncfifo_dout;
assign {soc_write_w_buffer_fifo_out_last, soc_write_w_buffer_fifo_out_first, soc_write_w_buffer_fifo_out_payload_id, soc_write_w_buffer_fifo_out_payload_strb, soc_write_w_buffer_fifo_out_payload_data} = soc_write_w_buffer_syncfifo_dout;
assign soc_write_w_buffer_sink_ready = soc_write_w_buffer_syncfifo_writable;
assign soc_write_w_buffer_syncfifo_we = soc_write_w_buffer_sink_valid;
assign soc_write_w_buffer_fifo_in_first = soc_write_w_buffer_sink_first;
assign soc_write_w_buffer_fifo_in_last = soc_write_w_buffer_sink_last;
assign soc_write_w_buffer_fifo_in_payload_data = soc_write_w_buffer_sink_payload_data;
assign soc_write_w_buffer_fifo_in_payload_strb = soc_write_w_buffer_sink_payload_strb;
assign soc_write_w_buffer_fifo_in_payload_id = soc_write_w_buffer_sink_payload_id;
assign soc_write_w_buffer_source_valid = soc_write_w_buffer_readable;
assign soc_write_w_buffer_source_first = soc_write_w_buffer_fifo_out_first;
assign soc_write_w_buffer_source_last = soc_write_w_buffer_fifo_out_last;
assign soc_write_w_buffer_source_payload_data = soc_write_w_buffer_fifo_out_payload_data;
assign soc_write_w_buffer_source_payload_strb = soc_write_w_buffer_fifo_out_payload_strb;
assign soc_write_w_buffer_source_payload_id = soc_write_w_buffer_fifo_out_payload_id;
assign soc_write_w_buffer_re = soc_write_w_buffer_source_ready;
assign soc_write_w_buffer_syncfifo_re = (soc_write_w_buffer_syncfifo_readable & ((~soc_write_w_buffer_readable) | soc_write_w_buffer_re));
assign soc_write_w_buffer_level1 = (soc_write_w_buffer_level0 + soc_write_w_buffer_readable);

// synthesis translate_off
reg dummy_d_295;
// synthesis translate_on
always @(*) begin
	soc_write_w_buffer_wrport_adr <= 4'd0;
	if (soc_write_w_buffer_replace) begin
		soc_write_w_buffer_wrport_adr <= (soc_write_w_buffer_produce - 1'd1);
	end else begin
		soc_write_w_buffer_wrport_adr <= soc_write_w_buffer_produce;
	end
// synthesis translate_off
	dummy_d_295 = dummy_s;
// synthesis translate_on
end
assign soc_write_w_buffer_wrport_dat_w = soc_write_w_buffer_syncfifo_din;
assign soc_write_w_buffer_wrport_we = (soc_write_w_buffer_syncfifo_we & (soc_write_w_buffer_syncfifo_writable | soc_write_w_buffer_replace));
assign soc_write_w_buffer_do_read = (soc_write_w_buffer_syncfifo_readable & soc_write_w_buffer_syncfifo_re);
assign soc_write_w_buffer_rdport_adr = soc_write_w_buffer_consume;
assign soc_write_w_buffer_syncfifo_dout = soc_write_w_buffer_rdport_dat_r;
assign soc_write_w_buffer_rdport_re = soc_write_w_buffer_do_read;
assign soc_write_w_buffer_syncfifo_writable = (soc_write_w_buffer_level0 != 5'd16);
assign soc_write_w_buffer_syncfifo_readable = (soc_write_w_buffer_level0 != 1'd0);
assign soc_write_id_buffer_syncfifo_din = {soc_write_id_buffer_fifo_in_last, soc_write_id_buffer_fifo_in_first, soc_write_id_buffer_fifo_in_payload_id};
assign {soc_write_id_buffer_fifo_out_last, soc_write_id_buffer_fifo_out_first, soc_write_id_buffer_fifo_out_payload_id} = soc_write_id_buffer_syncfifo_dout;
assign {soc_write_id_buffer_fifo_out_last, soc_write_id_buffer_fifo_out_first, soc_write_id_buffer_fifo_out_payload_id} = soc_write_id_buffer_syncfifo_dout;
assign {soc_write_id_buffer_fifo_out_last, soc_write_id_buffer_fifo_out_first, soc_write_id_buffer_fifo_out_payload_id} = soc_write_id_buffer_syncfifo_dout;
assign soc_write_id_buffer_sink_ready = soc_write_id_buffer_syncfifo_writable;
assign soc_write_id_buffer_syncfifo_we = soc_write_id_buffer_sink_valid;
assign soc_write_id_buffer_fifo_in_first = soc_write_id_buffer_sink_first;
assign soc_write_id_buffer_fifo_in_last = soc_write_id_buffer_sink_last;
assign soc_write_id_buffer_fifo_in_payload_id = soc_write_id_buffer_sink_payload_id;
assign soc_write_id_buffer_source_valid = soc_write_id_buffer_syncfifo_readable;
assign soc_write_id_buffer_source_first = soc_write_id_buffer_fifo_out_first;
assign soc_write_id_buffer_source_last = soc_write_id_buffer_fifo_out_last;
assign soc_write_id_buffer_source_payload_id = soc_write_id_buffer_fifo_out_payload_id;
assign soc_write_id_buffer_syncfifo_re = soc_write_id_buffer_source_ready;

// synthesis translate_off
reg dummy_d_296;
// synthesis translate_on
always @(*) begin
	soc_write_id_buffer_wrport_adr <= 4'd0;
	if (soc_write_id_buffer_replace) begin
		soc_write_id_buffer_wrport_adr <= (soc_write_id_buffer_produce - 1'd1);
	end else begin
		soc_write_id_buffer_wrport_adr <= soc_write_id_buffer_produce;
	end
// synthesis translate_off
	dummy_d_296 = dummy_s;
// synthesis translate_on
end
assign soc_write_id_buffer_wrport_dat_w = soc_write_id_buffer_syncfifo_din;
assign soc_write_id_buffer_wrport_we = (soc_write_id_buffer_syncfifo_we & (soc_write_id_buffer_syncfifo_writable | soc_write_id_buffer_replace));
assign soc_write_id_buffer_do_read = (soc_write_id_buffer_syncfifo_readable & soc_write_id_buffer_syncfifo_re);
assign soc_write_id_buffer_rdport_adr = soc_write_id_buffer_consume;
assign soc_write_id_buffer_syncfifo_dout = soc_write_id_buffer_rdport_dat_r;
assign soc_write_id_buffer_syncfifo_writable = (soc_write_id_buffer_level != 5'd16);
assign soc_write_id_buffer_syncfifo_readable = (soc_write_id_buffer_level != 1'd0);
assign soc_write_resp_buffer_syncfifo_din = {soc_write_resp_buffer_fifo_in_last, soc_write_resp_buffer_fifo_in_first, soc_write_resp_buffer_fifo_in_payload_resp, soc_write_resp_buffer_fifo_in_payload_id};
assign {soc_write_resp_buffer_fifo_out_last, soc_write_resp_buffer_fifo_out_first, soc_write_resp_buffer_fifo_out_payload_resp, soc_write_resp_buffer_fifo_out_payload_id} = soc_write_resp_buffer_syncfifo_dout;
assign {soc_write_resp_buffer_fifo_out_last, soc_write_resp_buffer_fifo_out_first, soc_write_resp_buffer_fifo_out_payload_resp, soc_write_resp_buffer_fifo_out_payload_id} = soc_write_resp_buffer_syncfifo_dout;
assign {soc_write_resp_buffer_fifo_out_last, soc_write_resp_buffer_fifo_out_first, soc_write_resp_buffer_fifo_out_payload_resp, soc_write_resp_buffer_fifo_out_payload_id} = soc_write_resp_buffer_syncfifo_dout;
assign {soc_write_resp_buffer_fifo_out_last, soc_write_resp_buffer_fifo_out_first, soc_write_resp_buffer_fifo_out_payload_resp, soc_write_resp_buffer_fifo_out_payload_id} = soc_write_resp_buffer_syncfifo_dout;
assign soc_write_resp_buffer_sink_ready = soc_write_resp_buffer_syncfifo_writable;
assign soc_write_resp_buffer_syncfifo_we = soc_write_resp_buffer_sink_valid;
assign soc_write_resp_buffer_fifo_in_first = soc_write_resp_buffer_sink_first;
assign soc_write_resp_buffer_fifo_in_last = soc_write_resp_buffer_sink_last;
assign soc_write_resp_buffer_fifo_in_payload_id = soc_write_resp_buffer_sink_payload_id;
assign soc_write_resp_buffer_fifo_in_payload_resp = soc_write_resp_buffer_sink_payload_resp;
assign soc_write_resp_buffer_source_valid = soc_write_resp_buffer_syncfifo_readable;
assign soc_write_resp_buffer_source_first = soc_write_resp_buffer_fifo_out_first;
assign soc_write_resp_buffer_source_last = soc_write_resp_buffer_fifo_out_last;
assign soc_write_resp_buffer_source_payload_id = soc_write_resp_buffer_fifo_out_payload_id;
assign soc_write_resp_buffer_source_payload_resp = soc_write_resp_buffer_fifo_out_payload_resp;
assign soc_write_resp_buffer_syncfifo_re = soc_write_resp_buffer_source_ready;

// synthesis translate_off
reg dummy_d_297;
// synthesis translate_on
always @(*) begin
	soc_write_resp_buffer_wrport_adr <= 4'd0;
	if (soc_write_resp_buffer_replace) begin
		soc_write_resp_buffer_wrport_adr <= (soc_write_resp_buffer_produce - 1'd1);
	end else begin
		soc_write_resp_buffer_wrport_adr <= soc_write_resp_buffer_produce;
	end
// synthesis translate_off
	dummy_d_297 = dummy_s;
// synthesis translate_on
end
assign soc_write_resp_buffer_wrport_dat_w = soc_write_resp_buffer_syncfifo_din;
assign soc_write_resp_buffer_wrport_we = (soc_write_resp_buffer_syncfifo_we & (soc_write_resp_buffer_syncfifo_writable | soc_write_resp_buffer_replace));
assign soc_write_resp_buffer_do_read = (soc_write_resp_buffer_syncfifo_readable & soc_write_resp_buffer_syncfifo_re);
assign soc_write_resp_buffer_rdport_adr = soc_write_resp_buffer_consume;
assign soc_write_resp_buffer_syncfifo_dout = soc_write_resp_buffer_rdport_dat_r;
assign soc_write_resp_buffer_syncfifo_writable = (soc_write_resp_buffer_level != 5'd16);
assign soc_write_resp_buffer_syncfifo_readable = (soc_write_resp_buffer_level != 1'd0);
assign soc_read_ar_buffer_sink_valid = soc_ar_valid;
assign soc_ar_ready = soc_read_ar_buffer_sink_ready;
assign soc_read_ar_buffer_sink_first = soc_ar_first;
assign soc_read_ar_buffer_sink_last = soc_ar_last;
assign soc_read_ar_buffer_sink_payload_addr = soc_ar_payload_addr;
assign soc_read_ar_buffer_sink_payload_burst = soc_ar_payload_burst;
assign soc_read_ar_buffer_sink_payload_len = soc_ar_payload_len;
assign soc_read_ar_buffer_sink_payload_size = soc_ar_payload_size;
assign soc_read_ar_buffer_sink_payload_lock = soc_ar_payload_lock;
assign soc_read_ar_buffer_sink_payload_prot = soc_ar_payload_prot;
assign soc_read_ar_buffer_sink_payload_cache = soc_ar_payload_cache;
assign soc_read_ar_buffer_sink_payload_qos = soc_ar_payload_qos;
assign soc_read_ar_buffer_sink_payload_id = soc_ar_payload_id;
assign soc_read_r_buffer_queue = ((soc_cmd_valid & soc_cmd_ready) & (~soc_cmd_payload_we));
assign soc_read_r_buffer_dequeue = (soc_read_r_buffer_source_valid & soc_read_r_buffer_source_ready);
assign soc_read_can_read = (soc_read_r_buffer_level2 != 5'd16);
assign soc_read_id_buffer_sink_valid = (soc_read_ar_valid & soc_read_ar_ready);
assign soc_read_id_buffer_sink_last = soc_read_ar_last;
assign soc_read_id_buffer_sink_payload_id = soc_read_ar_payload_id;
assign soc_r_last = soc_read_id_buffer_source_last;
assign soc_r_payload_id = soc_read_id_buffer_source_payload_id;
assign soc_read_id_buffer_source_ready = (soc_r_valid & soc_r_ready);
assign soc_read_cmd_request = (soc_read_ar_valid & soc_read_can_read);

// synthesis translate_off
reg dummy_d_298;
// synthesis translate_on
always @(*) begin
	soc_read_ar_ready <= 1'd0;
	if (soc_read_cmd_grant) begin
		soc_read_ar_ready <= (soc_cmd_ready & soc_read_can_read);
	end
// synthesis translate_off
	dummy_d_298 = dummy_s;
// synthesis translate_on
end
assign soc_read_r_buffer_sink_valid = soc_rdata_valid;
assign soc_rdata_ready = soc_read_r_buffer_sink_ready;
assign soc_read_r_buffer_sink_first = soc_rdata_first;
assign soc_read_r_buffer_sink_last = soc_rdata_last;
assign soc_read_r_buffer_sink_payload_data = soc_rdata_payload_data;
assign soc_r_valid = soc_read_r_buffer_source_valid;
assign soc_read_r_buffer_source_ready = soc_r_ready;
assign soc_r_first = soc_read_r_buffer_source_first;

// synthesis translate_off
reg dummy_d_299;
// synthesis translate_on
always @(*) begin
	soc_r_payload_resp <= 2'd0;
	soc_r_payload_resp <= soc_read_r_buffer_source_payload_resp;
	soc_r_payload_resp <= 1'd0;
// synthesis translate_off
	dummy_d_299 = dummy_s;
// synthesis translate_on
end
assign soc_r_payload_data = soc_read_r_buffer_source_payload_data;
assign soc_read_ar_buffer_sink_ready = ((~soc_read_ar_buffer_source_valid) | soc_read_ar_buffer_source_ready);
assign soc_read_beat_size = (1'd1 <<< soc_read_ar_buffer_source_payload_size);
assign soc_read_beat_wrap = (soc_read_ar_buffer_source_payload_len <<< soc_read_ar_buffer_source_payload_size);
assign soc_read_ar_valid = (soc_read_ar_buffer_source_valid | (~soc_read_ar_first));
assign soc_read_ar_first = (soc_read_beat_count == 1'd0);
assign soc_read_ar_last = (soc_read_beat_count == soc_read_ar_buffer_source_payload_len);
assign soc_read_ar_payload_addr = (soc_read_ar_buffer_source_payload_addr + soc_read_beat_offset);
assign soc_read_ar_payload_id = soc_read_ar_buffer_source_payload_id;

// synthesis translate_off
reg dummy_d_300;
// synthesis translate_on
always @(*) begin
	soc_read_ar_buffer_source_ready <= 1'd0;
	if (soc_read_ar_ready) begin
		if (soc_read_ar_last) begin
			soc_read_ar_buffer_source_ready <= 1'd1;
		end
	end
// synthesis translate_off
	dummy_d_300 = dummy_s;
// synthesis translate_on
end
assign soc_read_r_buffer_syncfifo_din = {soc_read_r_buffer_fifo_in_last, soc_read_r_buffer_fifo_in_first, soc_read_r_buffer_fifo_in_payload_id, soc_read_r_buffer_fifo_in_payload_data, soc_read_r_buffer_fifo_in_payload_resp};
assign {soc_read_r_buffer_fifo_out_last, soc_read_r_buffer_fifo_out_first, soc_read_r_buffer_fifo_out_payload_id, soc_read_r_buffer_fifo_out_payload_data, soc_read_r_buffer_fifo_out_payload_resp} = soc_read_r_buffer_syncfifo_dout;
assign {soc_read_r_buffer_fifo_out_last, soc_read_r_buffer_fifo_out_first, soc_read_r_buffer_fifo_out_payload_id, soc_read_r_buffer_fifo_out_payload_data, soc_read_r_buffer_fifo_out_payload_resp} = soc_read_r_buffer_syncfifo_dout;
assign {soc_read_r_buffer_fifo_out_last, soc_read_r_buffer_fifo_out_first, soc_read_r_buffer_fifo_out_payload_id, soc_read_r_buffer_fifo_out_payload_data, soc_read_r_buffer_fifo_out_payload_resp} = soc_read_r_buffer_syncfifo_dout;
assign {soc_read_r_buffer_fifo_out_last, soc_read_r_buffer_fifo_out_first, soc_read_r_buffer_fifo_out_payload_id, soc_read_r_buffer_fifo_out_payload_data, soc_read_r_buffer_fifo_out_payload_resp} = soc_read_r_buffer_syncfifo_dout;
assign {soc_read_r_buffer_fifo_out_last, soc_read_r_buffer_fifo_out_first, soc_read_r_buffer_fifo_out_payload_id, soc_read_r_buffer_fifo_out_payload_data, soc_read_r_buffer_fifo_out_payload_resp} = soc_read_r_buffer_syncfifo_dout;
assign soc_read_r_buffer_sink_ready = soc_read_r_buffer_syncfifo_writable;
assign soc_read_r_buffer_syncfifo_we = soc_read_r_buffer_sink_valid;
assign soc_read_r_buffer_fifo_in_first = soc_read_r_buffer_sink_first;
assign soc_read_r_buffer_fifo_in_last = soc_read_r_buffer_sink_last;
assign soc_read_r_buffer_fifo_in_payload_resp = soc_read_r_buffer_sink_payload_resp;
assign soc_read_r_buffer_fifo_in_payload_data = soc_read_r_buffer_sink_payload_data;
assign soc_read_r_buffer_fifo_in_payload_id = soc_read_r_buffer_sink_payload_id;
assign soc_read_r_buffer_source_valid = soc_read_r_buffer_readable;
assign soc_read_r_buffer_source_first = soc_read_r_buffer_fifo_out_first;
assign soc_read_r_buffer_source_last = soc_read_r_buffer_fifo_out_last;
assign soc_read_r_buffer_source_payload_resp = soc_read_r_buffer_fifo_out_payload_resp;
assign soc_read_r_buffer_source_payload_data = soc_read_r_buffer_fifo_out_payload_data;
assign soc_read_r_buffer_source_payload_id = soc_read_r_buffer_fifo_out_payload_id;
assign soc_read_r_buffer_re = soc_read_r_buffer_source_ready;
assign soc_read_r_buffer_syncfifo_re = (soc_read_r_buffer_syncfifo_readable & ((~soc_read_r_buffer_readable) | soc_read_r_buffer_re));
assign soc_read_r_buffer_level1 = (soc_read_r_buffer_level0 + soc_read_r_buffer_readable);

// synthesis translate_off
reg dummy_d_301;
// synthesis translate_on
always @(*) begin
	soc_read_r_buffer_wrport_adr <= 4'd0;
	if (soc_read_r_buffer_replace) begin
		soc_read_r_buffer_wrport_adr <= (soc_read_r_buffer_produce - 1'd1);
	end else begin
		soc_read_r_buffer_wrport_adr <= soc_read_r_buffer_produce;
	end
// synthesis translate_off
	dummy_d_301 = dummy_s;
// synthesis translate_on
end
assign soc_read_r_buffer_wrport_dat_w = soc_read_r_buffer_syncfifo_din;
assign soc_read_r_buffer_wrport_we = (soc_read_r_buffer_syncfifo_we & (soc_read_r_buffer_syncfifo_writable | soc_read_r_buffer_replace));
assign soc_read_r_buffer_do_read = (soc_read_r_buffer_syncfifo_readable & soc_read_r_buffer_syncfifo_re);
assign soc_read_r_buffer_rdport_adr = soc_read_r_buffer_consume;
assign soc_read_r_buffer_syncfifo_dout = soc_read_r_buffer_rdport_dat_r;
assign soc_read_r_buffer_rdport_re = soc_read_r_buffer_do_read;
assign soc_read_r_buffer_syncfifo_writable = (soc_read_r_buffer_level0 != 5'd16);
assign soc_read_r_buffer_syncfifo_readable = (soc_read_r_buffer_level0 != 1'd0);
assign soc_read_id_buffer_syncfifo_din = {soc_read_id_buffer_fifo_in_last, soc_read_id_buffer_fifo_in_first, soc_read_id_buffer_fifo_in_payload_id};
assign {soc_read_id_buffer_fifo_out_last, soc_read_id_buffer_fifo_out_first, soc_read_id_buffer_fifo_out_payload_id} = soc_read_id_buffer_syncfifo_dout;
assign {soc_read_id_buffer_fifo_out_last, soc_read_id_buffer_fifo_out_first, soc_read_id_buffer_fifo_out_payload_id} = soc_read_id_buffer_syncfifo_dout;
assign {soc_read_id_buffer_fifo_out_last, soc_read_id_buffer_fifo_out_first, soc_read_id_buffer_fifo_out_payload_id} = soc_read_id_buffer_syncfifo_dout;
assign soc_read_id_buffer_sink_ready = soc_read_id_buffer_syncfifo_writable;
assign soc_read_id_buffer_syncfifo_we = soc_read_id_buffer_sink_valid;
assign soc_read_id_buffer_fifo_in_first = soc_read_id_buffer_sink_first;
assign soc_read_id_buffer_fifo_in_last = soc_read_id_buffer_sink_last;
assign soc_read_id_buffer_fifo_in_payload_id = soc_read_id_buffer_sink_payload_id;
assign soc_read_id_buffer_source_valid = soc_read_id_buffer_syncfifo_readable;
assign soc_read_id_buffer_source_first = soc_read_id_buffer_fifo_out_first;
assign soc_read_id_buffer_source_last = soc_read_id_buffer_fifo_out_last;
assign soc_read_id_buffer_source_payload_id = soc_read_id_buffer_fifo_out_payload_id;
assign soc_read_id_buffer_syncfifo_re = soc_read_id_buffer_source_ready;

// synthesis translate_off
reg dummy_d_302;
// synthesis translate_on
always @(*) begin
	soc_read_id_buffer_wrport_adr <= 4'd0;
	if (soc_read_id_buffer_replace) begin
		soc_read_id_buffer_wrport_adr <= (soc_read_id_buffer_produce - 1'd1);
	end else begin
		soc_read_id_buffer_wrport_adr <= soc_read_id_buffer_produce;
	end
// synthesis translate_off
	dummy_d_302 = dummy_s;
// synthesis translate_on
end
assign soc_read_id_buffer_wrport_dat_w = soc_read_id_buffer_syncfifo_din;
assign soc_read_id_buffer_wrport_we = (soc_read_id_buffer_syncfifo_we & (soc_read_id_buffer_syncfifo_writable | soc_read_id_buffer_replace));
assign soc_read_id_buffer_do_read = (soc_read_id_buffer_syncfifo_readable & soc_read_id_buffer_syncfifo_re);
assign soc_read_id_buffer_rdport_adr = soc_read_id_buffer_consume;
assign soc_read_id_buffer_syncfifo_dout = soc_read_id_buffer_rdport_dat_r;
assign soc_read_id_buffer_syncfifo_writable = (soc_read_id_buffer_level != 5'd16);
assign soc_read_id_buffer_syncfifo_readable = (soc_read_id_buffer_level != 1'd0);
assign vns_shared_adr = vns_rhs_array_muxed36;
assign vns_shared_dat_w = vns_rhs_array_muxed37;
assign vns_shared_sel = vns_rhs_array_muxed38;
assign vns_shared_cyc = vns_rhs_array_muxed39;
assign vns_shared_stb = vns_rhs_array_muxed40;
assign vns_shared_we = vns_rhs_array_muxed41;
assign vns_shared_cti = vns_rhs_array_muxed42;
assign vns_shared_bte = vns_rhs_array_muxed43;
assign soc_litedramcore_serv_ibus_dat_r = vns_shared_dat_r;
assign soc_litedramcore_serv_dbus_dat_r = vns_shared_dat_r;
assign soc_litedramcore_serv_ibus_ack = (vns_shared_ack & (vns_grant == 1'd0));
assign soc_litedramcore_serv_dbus_ack = (vns_shared_ack & (vns_grant == 1'd1));
assign soc_litedramcore_serv_ibus_err = (vns_shared_err & (vns_grant == 1'd0));
assign soc_litedramcore_serv_dbus_err = (vns_shared_err & (vns_grant == 1'd1));
assign vns_request = {soc_litedramcore_serv_dbus_cyc, soc_litedramcore_serv_ibus_cyc};

// synthesis translate_off
reg dummy_d_303;
// synthesis translate_on
always @(*) begin
	vns_slave_sel <= 4'd0;
	vns_slave_sel[0] <= (vns_shared_adr[29:13] == 1'd0);
	vns_slave_sel[1] <= (vns_shared_adr[29:10] == 13'd4096);
	vns_slave_sel[2] <= (vns_shared_adr[29:14] == 16'd33280);
	vns_slave_sel[3] <= (vns_shared_adr[29:22] == 7'd64);
// synthesis translate_off
	dummy_d_303 = dummy_s;
// synthesis translate_on
end
assign soc_litedramcore_litedramcore_ram_bus_adr = vns_shared_adr;
assign soc_litedramcore_litedramcore_ram_bus_dat_w = vns_shared_dat_w;
assign soc_litedramcore_litedramcore_ram_bus_sel = vns_shared_sel;
assign soc_litedramcore_litedramcore_ram_bus_stb = vns_shared_stb;
assign soc_litedramcore_litedramcore_ram_bus_we = vns_shared_we;
assign soc_litedramcore_litedramcore_ram_bus_cti = vns_shared_cti;
assign soc_litedramcore_litedramcore_ram_bus_bte = vns_shared_bte;
assign soc_litedramcore_ram_bus_ram_bus_adr = vns_shared_adr;
assign soc_litedramcore_ram_bus_ram_bus_dat_w = vns_shared_dat_w;
assign soc_litedramcore_ram_bus_ram_bus_sel = vns_shared_sel;
assign soc_litedramcore_ram_bus_ram_bus_stb = vns_shared_stb;
assign soc_litedramcore_ram_bus_ram_bus_we = vns_shared_we;
assign soc_litedramcore_ram_bus_ram_bus_cti = vns_shared_cti;
assign soc_litedramcore_ram_bus_ram_bus_bte = vns_shared_bte;
assign soc_litedramcore_bus_wishbone_adr = vns_shared_adr;
assign soc_litedramcore_bus_wishbone_dat_w = vns_shared_dat_w;
assign soc_litedramcore_bus_wishbone_sel = vns_shared_sel;
assign soc_litedramcore_bus_wishbone_stb = vns_shared_stb;
assign soc_litedramcore_bus_wishbone_we = vns_shared_we;
assign soc_litedramcore_bus_wishbone_cti = vns_shared_cti;
assign soc_litedramcore_bus_wishbone_bte = vns_shared_bte;
assign soc_wb_sdram_adr = vns_shared_adr;
assign soc_wb_sdram_dat_w = vns_shared_dat_w;
assign soc_wb_sdram_sel = vns_shared_sel;
assign soc_wb_sdram_stb = vns_shared_stb;
assign soc_wb_sdram_we = vns_shared_we;
assign soc_wb_sdram_cti = vns_shared_cti;
assign soc_wb_sdram_bte = vns_shared_bte;
assign soc_litedramcore_litedramcore_ram_bus_cyc = (vns_shared_cyc & vns_slave_sel[0]);
assign soc_litedramcore_ram_bus_ram_bus_cyc = (vns_shared_cyc & vns_slave_sel[1]);
assign soc_litedramcore_bus_wishbone_cyc = (vns_shared_cyc & vns_slave_sel[2]);
assign soc_wb_sdram_cyc = (vns_shared_cyc & vns_slave_sel[3]);

// synthesis translate_off
reg dummy_d_304;
// synthesis translate_on
always @(*) begin
	vns_shared_ack <= 1'd0;
	vns_shared_ack <= (((soc_litedramcore_litedramcore_ram_bus_ack | soc_litedramcore_ram_bus_ram_bus_ack) | soc_litedramcore_bus_wishbone_ack) | soc_wb_sdram_ack);
	if (vns_done) begin
		vns_shared_ack <= 1'd1;
	end
// synthesis translate_off
	dummy_d_304 = dummy_s;
// synthesis translate_on
end
assign vns_shared_err = (((soc_litedramcore_litedramcore_ram_bus_err | soc_litedramcore_ram_bus_ram_bus_err) | soc_litedramcore_bus_wishbone_err) | soc_wb_sdram_err);

// synthesis translate_off
reg dummy_d_305;
// synthesis translate_on
always @(*) begin
	vns_shared_dat_r <= 32'd0;
	vns_shared_dat_r <= (((({32{vns_slave_sel_r[0]}} & soc_litedramcore_litedramcore_ram_bus_dat_r) | ({32{vns_slave_sel_r[1]}} & soc_litedramcore_ram_bus_ram_bus_dat_r)) | ({32{vns_slave_sel_r[2]}} & soc_litedramcore_bus_wishbone_dat_r)) | ({32{vns_slave_sel_r[3]}} & soc_wb_sdram_dat_r));
	if (vns_done) begin
		vns_shared_dat_r <= 32'd4294967295;
	end
// synthesis translate_off
	dummy_d_305 = dummy_s;
// synthesis translate_on
end
assign vns_wait = ((vns_shared_stb & vns_shared_cyc) & (~vns_shared_ack));

// synthesis translate_off
reg dummy_d_306;
// synthesis translate_on
always @(*) begin
	vns_error <= 1'd0;
	if (vns_done) begin
		vns_error <= 1'd1;
	end
// synthesis translate_off
	dummy_d_306 = dummy_s;
// synthesis translate_on
end
assign vns_done = (vns_count == 1'd0);
assign vns_csrbank0_sel = (vns_interface0_bank_bus_adr[13:9] == 1'd0);
assign vns_csrbank0_reset0_r = vns_interface0_bank_bus_dat_w[0];
assign vns_csrbank0_reset0_re = ((vns_csrbank0_sel & vns_interface0_bank_bus_we) & (vns_interface0_bank_bus_adr[3:0] == 1'd0));
assign vns_csrbank0_reset0_we = ((vns_csrbank0_sel & (~vns_interface0_bank_bus_we)) & (vns_interface0_bank_bus_adr[3:0] == 1'd0));
assign vns_csrbank0_scratch3_r = vns_interface0_bank_bus_dat_w[7:0];
assign vns_csrbank0_scratch3_re = ((vns_csrbank0_sel & vns_interface0_bank_bus_we) & (vns_interface0_bank_bus_adr[3:0] == 1'd1));
assign vns_csrbank0_scratch3_we = ((vns_csrbank0_sel & (~vns_interface0_bank_bus_we)) & (vns_interface0_bank_bus_adr[3:0] == 1'd1));
assign vns_csrbank0_scratch2_r = vns_interface0_bank_bus_dat_w[7:0];
assign vns_csrbank0_scratch2_re = ((vns_csrbank0_sel & vns_interface0_bank_bus_we) & (vns_interface0_bank_bus_adr[3:0] == 2'd2));
assign vns_csrbank0_scratch2_we = ((vns_csrbank0_sel & (~vns_interface0_bank_bus_we)) & (vns_interface0_bank_bus_adr[3:0] == 2'd2));
assign vns_csrbank0_scratch1_r = vns_interface0_bank_bus_dat_w[7:0];
assign vns_csrbank0_scratch1_re = ((vns_csrbank0_sel & vns_interface0_bank_bus_we) & (vns_interface0_bank_bus_adr[3:0] == 2'd3));
assign vns_csrbank0_scratch1_we = ((vns_csrbank0_sel & (~vns_interface0_bank_bus_we)) & (vns_interface0_bank_bus_adr[3:0] == 2'd3));
assign vns_csrbank0_scratch0_r = vns_interface0_bank_bus_dat_w[7:0];
assign vns_csrbank0_scratch0_re = ((vns_csrbank0_sel & vns_interface0_bank_bus_we) & (vns_interface0_bank_bus_adr[3:0] == 3'd4));
assign vns_csrbank0_scratch0_we = ((vns_csrbank0_sel & (~vns_interface0_bank_bus_we)) & (vns_interface0_bank_bus_adr[3:0] == 3'd4));
assign vns_csrbank0_bus_errors3_r = vns_interface0_bank_bus_dat_w[7:0];
assign vns_csrbank0_bus_errors3_re = ((vns_csrbank0_sel & vns_interface0_bank_bus_we) & (vns_interface0_bank_bus_adr[3:0] == 3'd5));
assign vns_csrbank0_bus_errors3_we = ((vns_csrbank0_sel & (~vns_interface0_bank_bus_we)) & (vns_interface0_bank_bus_adr[3:0] == 3'd5));
assign vns_csrbank0_bus_errors2_r = vns_interface0_bank_bus_dat_w[7:0];
assign vns_csrbank0_bus_errors2_re = ((vns_csrbank0_sel & vns_interface0_bank_bus_we) & (vns_interface0_bank_bus_adr[3:0] == 3'd6));
assign vns_csrbank0_bus_errors2_we = ((vns_csrbank0_sel & (~vns_interface0_bank_bus_we)) & (vns_interface0_bank_bus_adr[3:0] == 3'd6));
assign vns_csrbank0_bus_errors1_r = vns_interface0_bank_bus_dat_w[7:0];
assign vns_csrbank0_bus_errors1_re = ((vns_csrbank0_sel & vns_interface0_bank_bus_we) & (vns_interface0_bank_bus_adr[3:0] == 3'd7));
assign vns_csrbank0_bus_errors1_we = ((vns_csrbank0_sel & (~vns_interface0_bank_bus_we)) & (vns_interface0_bank_bus_adr[3:0] == 3'd7));
assign vns_csrbank0_bus_errors0_r = vns_interface0_bank_bus_dat_w[7:0];
assign vns_csrbank0_bus_errors0_re = ((vns_csrbank0_sel & vns_interface0_bank_bus_we) & (vns_interface0_bank_bus_adr[3:0] == 4'd8));
assign vns_csrbank0_bus_errors0_we = ((vns_csrbank0_sel & (~vns_interface0_bank_bus_we)) & (vns_interface0_bank_bus_adr[3:0] == 4'd8));
assign vns_csrbank0_reset0_w = soc_litedramcore_soccontroller_reset_storage;
assign vns_csrbank0_scratch3_w = soc_litedramcore_soccontroller_scratch_storage[31:24];
assign vns_csrbank0_scratch2_w = soc_litedramcore_soccontroller_scratch_storage[23:16];
assign vns_csrbank0_scratch1_w = soc_litedramcore_soccontroller_scratch_storage[15:8];
assign vns_csrbank0_scratch0_w = soc_litedramcore_soccontroller_scratch_storage[7:0];
assign vns_csrbank0_bus_errors3_w = soc_litedramcore_soccontroller_bus_errors_status[31:24];
assign vns_csrbank0_bus_errors2_w = soc_litedramcore_soccontroller_bus_errors_status[23:16];
assign vns_csrbank0_bus_errors1_w = soc_litedramcore_soccontroller_bus_errors_status[15:8];
assign vns_csrbank0_bus_errors0_w = soc_litedramcore_soccontroller_bus_errors_status[7:0];
assign soc_litedramcore_soccontroller_bus_errors_we = vns_csrbank0_bus_errors0_we;
assign vns_csrbank1_sel = (vns_interface1_bank_bus_adr[13:9] == 3'd7);
assign vns_csrbank1_init_done0_r = vns_interface1_bank_bus_dat_w[0];
assign vns_csrbank1_init_done0_re = ((vns_csrbank1_sel & vns_interface1_bank_bus_we) & (vns_interface1_bank_bus_adr[0] == 1'd0));
assign vns_csrbank1_init_done0_we = ((vns_csrbank1_sel & (~vns_interface1_bank_bus_we)) & (vns_interface1_bank_bus_adr[0] == 1'd0));
assign vns_csrbank1_init_error0_r = vns_interface1_bank_bus_dat_w[0];
assign vns_csrbank1_init_error0_re = ((vns_csrbank1_sel & vns_interface1_bank_bus_we) & (vns_interface1_bank_bus_adr[0] == 1'd1));
assign vns_csrbank1_init_error0_we = ((vns_csrbank1_sel & (~vns_interface1_bank_bus_we)) & (vns_interface1_bank_bus_adr[0] == 1'd1));
assign vns_csrbank1_init_done0_w = soc_init_done_storage;
assign vns_csrbank1_init_error0_w = soc_init_error_storage;
assign vns_csrbank2_sel = (vns_interface2_bank_bus_adr[13:9] == 3'd5);
assign vns_csrbank2_half_sys8x_taps0_r = vns_interface2_bank_bus_dat_w[4:0];
assign vns_csrbank2_half_sys8x_taps0_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 1'd0));
assign vns_csrbank2_half_sys8x_taps0_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 1'd0));
assign vns_csrbank2_wlevel_en0_r = vns_interface2_bank_bus_dat_w[0];
assign vns_csrbank2_wlevel_en0_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 1'd1));
assign vns_csrbank2_wlevel_en0_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 1'd1));
assign soc_a7ddrphy_wlevel_strobe_r = vns_interface2_bank_bus_dat_w[0];
assign soc_a7ddrphy_wlevel_strobe_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 2'd2));
assign soc_a7ddrphy_wlevel_strobe_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 2'd2));
assign soc_a7ddrphy_cdly_rst_r = vns_interface2_bank_bus_dat_w[0];
assign soc_a7ddrphy_cdly_rst_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 2'd3));
assign soc_a7ddrphy_cdly_rst_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 2'd3));
assign soc_a7ddrphy_cdly_inc_r = vns_interface2_bank_bus_dat_w[0];
assign soc_a7ddrphy_cdly_inc_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 3'd4));
assign soc_a7ddrphy_cdly_inc_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 3'd4));
assign vns_csrbank2_dly_sel0_r = vns_interface2_bank_bus_dat_w[1:0];
assign vns_csrbank2_dly_sel0_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 3'd5));
assign vns_csrbank2_dly_sel0_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 3'd5));
assign soc_a7ddrphy_rdly_dq_rst_r = vns_interface2_bank_bus_dat_w[0];
assign soc_a7ddrphy_rdly_dq_rst_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 3'd6));
assign soc_a7ddrphy_rdly_dq_rst_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 3'd6));
assign soc_a7ddrphy_rdly_dq_inc_r = vns_interface2_bank_bus_dat_w[0];
assign soc_a7ddrphy_rdly_dq_inc_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 3'd7));
assign soc_a7ddrphy_rdly_dq_inc_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 3'd7));
assign soc_a7ddrphy_rdly_dq_bitslip_rst_r = vns_interface2_bank_bus_dat_w[0];
assign soc_a7ddrphy_rdly_dq_bitslip_rst_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 4'd8));
assign soc_a7ddrphy_rdly_dq_bitslip_rst_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 4'd8));
assign soc_a7ddrphy_rdly_dq_bitslip_r = vns_interface2_bank_bus_dat_w[0];
assign soc_a7ddrphy_rdly_dq_bitslip_re = ((vns_csrbank2_sel & vns_interface2_bank_bus_we) & (vns_interface2_bank_bus_adr[3:0] == 4'd9));
assign soc_a7ddrphy_rdly_dq_bitslip_we = ((vns_csrbank2_sel & (~vns_interface2_bank_bus_we)) & (vns_interface2_bank_bus_adr[3:0] == 4'd9));
assign vns_csrbank2_half_sys8x_taps0_w = soc_a7ddrphy_half_sys8x_taps_storage[4:0];
assign vns_csrbank2_wlevel_en0_w = soc_a7ddrphy_wlevel_en_storage;
assign vns_csrbank2_dly_sel0_w = soc_a7ddrphy_dly_sel_storage[1:0];
assign vns_csrbank3_sel = (vns_interface3_bank_bus_adr[13:9] == 3'd6);
assign vns_csrbank3_dfii_control0_r = vns_interface3_bank_bus_dat_w[3:0];
assign vns_csrbank3_dfii_control0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 1'd0));
assign vns_csrbank3_dfii_control0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 1'd0));
assign vns_csrbank3_dfii_pi0_command0_r = vns_interface3_bank_bus_dat_w[5:0];
assign vns_csrbank3_dfii_pi0_command0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 1'd1));
assign vns_csrbank3_dfii_pi0_command0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 1'd1));
assign soc_sdram_phaseinjector0_command_issue_r = vns_interface3_bank_bus_dat_w[0];
assign soc_sdram_phaseinjector0_command_issue_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 2'd2));
assign soc_sdram_phaseinjector0_command_issue_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 2'd2));
assign vns_csrbank3_dfii_pi0_address1_r = vns_interface3_bank_bus_dat_w[4:0];
assign vns_csrbank3_dfii_pi0_address1_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 2'd3));
assign vns_csrbank3_dfii_pi0_address1_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 2'd3));
assign vns_csrbank3_dfii_pi0_address0_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi0_address0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 3'd4));
assign vns_csrbank3_dfii_pi0_address0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 3'd4));
assign vns_csrbank3_dfii_pi0_baddress0_r = vns_interface3_bank_bus_dat_w[2:0];
assign vns_csrbank3_dfii_pi0_baddress0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 3'd5));
assign vns_csrbank3_dfii_pi0_baddress0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 3'd5));
assign vns_csrbank3_dfii_pi0_wrdata3_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi0_wrdata3_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 3'd6));
assign vns_csrbank3_dfii_pi0_wrdata3_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 3'd6));
assign vns_csrbank3_dfii_pi0_wrdata2_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi0_wrdata2_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 3'd7));
assign vns_csrbank3_dfii_pi0_wrdata2_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 3'd7));
assign vns_csrbank3_dfii_pi0_wrdata1_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi0_wrdata1_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 4'd8));
assign vns_csrbank3_dfii_pi0_wrdata1_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 4'd8));
assign vns_csrbank3_dfii_pi0_wrdata0_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi0_wrdata0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 4'd9));
assign vns_csrbank3_dfii_pi0_wrdata0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 4'd9));
assign vns_csrbank3_dfii_pi0_rddata3_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi0_rddata3_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 4'd10));
assign vns_csrbank3_dfii_pi0_rddata3_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 4'd10));
assign vns_csrbank3_dfii_pi0_rddata2_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi0_rddata2_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 4'd11));
assign vns_csrbank3_dfii_pi0_rddata2_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 4'd11));
assign vns_csrbank3_dfii_pi0_rddata1_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi0_rddata1_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 4'd12));
assign vns_csrbank3_dfii_pi0_rddata1_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 4'd12));
assign vns_csrbank3_dfii_pi0_rddata0_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi0_rddata0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 4'd13));
assign vns_csrbank3_dfii_pi0_rddata0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 4'd13));
assign vns_csrbank3_dfii_pi1_command0_r = vns_interface3_bank_bus_dat_w[5:0];
assign vns_csrbank3_dfii_pi1_command0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 4'd14));
assign vns_csrbank3_dfii_pi1_command0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 4'd14));
assign soc_sdram_phaseinjector1_command_issue_r = vns_interface3_bank_bus_dat_w[0];
assign soc_sdram_phaseinjector1_command_issue_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 4'd15));
assign soc_sdram_phaseinjector1_command_issue_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 4'd15));
assign vns_csrbank3_dfii_pi1_address1_r = vns_interface3_bank_bus_dat_w[4:0];
assign vns_csrbank3_dfii_pi1_address1_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd16));
assign vns_csrbank3_dfii_pi1_address1_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd16));
assign vns_csrbank3_dfii_pi1_address0_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi1_address0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd17));
assign vns_csrbank3_dfii_pi1_address0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd17));
assign vns_csrbank3_dfii_pi1_baddress0_r = vns_interface3_bank_bus_dat_w[2:0];
assign vns_csrbank3_dfii_pi1_baddress0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd18));
assign vns_csrbank3_dfii_pi1_baddress0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd18));
assign vns_csrbank3_dfii_pi1_wrdata3_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi1_wrdata3_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd19));
assign vns_csrbank3_dfii_pi1_wrdata3_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd19));
assign vns_csrbank3_dfii_pi1_wrdata2_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi1_wrdata2_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd20));
assign vns_csrbank3_dfii_pi1_wrdata2_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd20));
assign vns_csrbank3_dfii_pi1_wrdata1_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi1_wrdata1_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd21));
assign vns_csrbank3_dfii_pi1_wrdata1_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd21));
assign vns_csrbank3_dfii_pi1_wrdata0_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi1_wrdata0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd22));
assign vns_csrbank3_dfii_pi1_wrdata0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd22));
assign vns_csrbank3_dfii_pi1_rddata3_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi1_rddata3_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd23));
assign vns_csrbank3_dfii_pi1_rddata3_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd23));
assign vns_csrbank3_dfii_pi1_rddata2_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi1_rddata2_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd24));
assign vns_csrbank3_dfii_pi1_rddata2_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd24));
assign vns_csrbank3_dfii_pi1_rddata1_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi1_rddata1_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd25));
assign vns_csrbank3_dfii_pi1_rddata1_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd25));
assign vns_csrbank3_dfii_pi1_rddata0_r = vns_interface3_bank_bus_dat_w[7:0];
assign vns_csrbank3_dfii_pi1_rddata0_re = ((vns_csrbank3_sel & vns_interface3_bank_bus_we) & (vns_interface3_bank_bus_adr[4:0] == 5'd26));
assign vns_csrbank3_dfii_pi1_rddata0_we = ((vns_csrbank3_sel & (~vns_interface3_bank_bus_we)) & (vns_interface3_bank_bus_adr[4:0] == 5'd26));
assign vns_csrbank3_dfii_control0_w = soc_sdram_storage[3:0];
assign vns_csrbank3_dfii_pi0_command0_w = soc_sdram_phaseinjector0_command_storage[5:0];
assign vns_csrbank3_dfii_pi0_address1_w = soc_sdram_phaseinjector0_address_storage[12:8];
assign vns_csrbank3_dfii_pi0_address0_w = soc_sdram_phaseinjector0_address_storage[7:0];
assign vns_csrbank3_dfii_pi0_baddress0_w = soc_sdram_phaseinjector0_baddress_storage[2:0];
assign vns_csrbank3_dfii_pi0_wrdata3_w = soc_sdram_phaseinjector0_wrdata_storage[31:24];
assign vns_csrbank3_dfii_pi0_wrdata2_w = soc_sdram_phaseinjector0_wrdata_storage[23:16];
assign vns_csrbank3_dfii_pi0_wrdata1_w = soc_sdram_phaseinjector0_wrdata_storage[15:8];
assign vns_csrbank3_dfii_pi0_wrdata0_w = soc_sdram_phaseinjector0_wrdata_storage[7:0];
assign vns_csrbank3_dfii_pi0_rddata3_w = soc_sdram_phaseinjector0_status[31:24];
assign vns_csrbank3_dfii_pi0_rddata2_w = soc_sdram_phaseinjector0_status[23:16];
assign vns_csrbank3_dfii_pi0_rddata1_w = soc_sdram_phaseinjector0_status[15:8];
assign vns_csrbank3_dfii_pi0_rddata0_w = soc_sdram_phaseinjector0_status[7:0];
assign soc_sdram_phaseinjector0_we = vns_csrbank3_dfii_pi0_rddata0_we;
assign vns_csrbank3_dfii_pi1_command0_w = soc_sdram_phaseinjector1_command_storage[5:0];
assign vns_csrbank3_dfii_pi1_address1_w = soc_sdram_phaseinjector1_address_storage[12:8];
assign vns_csrbank3_dfii_pi1_address0_w = soc_sdram_phaseinjector1_address_storage[7:0];
assign vns_csrbank3_dfii_pi1_baddress0_w = soc_sdram_phaseinjector1_baddress_storage[2:0];
assign vns_csrbank3_dfii_pi1_wrdata3_w = soc_sdram_phaseinjector1_wrdata_storage[31:24];
assign vns_csrbank3_dfii_pi1_wrdata2_w = soc_sdram_phaseinjector1_wrdata_storage[23:16];
assign vns_csrbank3_dfii_pi1_wrdata1_w = soc_sdram_phaseinjector1_wrdata_storage[15:8];
assign vns_csrbank3_dfii_pi1_wrdata0_w = soc_sdram_phaseinjector1_wrdata_storage[7:0];
assign vns_csrbank3_dfii_pi1_rddata3_w = soc_sdram_phaseinjector1_status[31:24];
assign vns_csrbank3_dfii_pi1_rddata2_w = soc_sdram_phaseinjector1_status[23:16];
assign vns_csrbank3_dfii_pi1_rddata1_w = soc_sdram_phaseinjector1_status[15:8];
assign vns_csrbank3_dfii_pi1_rddata0_w = soc_sdram_phaseinjector1_status[7:0];
assign soc_sdram_phaseinjector1_we = vns_csrbank3_dfii_pi1_rddata0_we;
assign vns_csrbank4_sel = (vns_interface4_bank_bus_adr[13:9] == 3'd4);
assign vns_csrbank4_load3_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_load3_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 1'd0));
assign vns_csrbank4_load3_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 1'd0));
assign vns_csrbank4_load2_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_load2_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 1'd1));
assign vns_csrbank4_load2_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 1'd1));
assign vns_csrbank4_load1_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_load1_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 2'd2));
assign vns_csrbank4_load1_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 2'd2));
assign vns_csrbank4_load0_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_load0_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 2'd3));
assign vns_csrbank4_load0_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 2'd3));
assign vns_csrbank4_reload3_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_reload3_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 3'd4));
assign vns_csrbank4_reload3_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 3'd4));
assign vns_csrbank4_reload2_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_reload2_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 3'd5));
assign vns_csrbank4_reload2_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 3'd5));
assign vns_csrbank4_reload1_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_reload1_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 3'd6));
assign vns_csrbank4_reload1_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 3'd6));
assign vns_csrbank4_reload0_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_reload0_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 3'd7));
assign vns_csrbank4_reload0_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 3'd7));
assign vns_csrbank4_en0_r = vns_interface4_bank_bus_dat_w[0];
assign vns_csrbank4_en0_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 4'd8));
assign vns_csrbank4_en0_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 4'd8));
assign vns_csrbank4_update_value0_r = vns_interface4_bank_bus_dat_w[0];
assign vns_csrbank4_update_value0_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 4'd9));
assign vns_csrbank4_update_value0_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 4'd9));
assign vns_csrbank4_value3_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_value3_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 4'd10));
assign vns_csrbank4_value3_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 4'd10));
assign vns_csrbank4_value2_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_value2_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 4'd11));
assign vns_csrbank4_value2_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 4'd11));
assign vns_csrbank4_value1_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_value1_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 4'd12));
assign vns_csrbank4_value1_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 4'd12));
assign vns_csrbank4_value0_r = vns_interface4_bank_bus_dat_w[7:0];
assign vns_csrbank4_value0_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 4'd13));
assign vns_csrbank4_value0_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 4'd13));
assign soc_litedramcore_timer_eventmanager_status_r = vns_interface4_bank_bus_dat_w[0];
assign soc_litedramcore_timer_eventmanager_status_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 4'd14));
assign soc_litedramcore_timer_eventmanager_status_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 4'd14));
assign soc_litedramcore_timer_eventmanager_pending_r = vns_interface4_bank_bus_dat_w[0];
assign soc_litedramcore_timer_eventmanager_pending_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 4'd15));
assign soc_litedramcore_timer_eventmanager_pending_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 4'd15));
assign vns_csrbank4_ev_enable0_r = vns_interface4_bank_bus_dat_w[0];
assign vns_csrbank4_ev_enable0_re = ((vns_csrbank4_sel & vns_interface4_bank_bus_we) & (vns_interface4_bank_bus_adr[4:0] == 5'd16));
assign vns_csrbank4_ev_enable0_we = ((vns_csrbank4_sel & (~vns_interface4_bank_bus_we)) & (vns_interface4_bank_bus_adr[4:0] == 5'd16));
assign vns_csrbank4_load3_w = soc_litedramcore_timer_load_storage[31:24];
assign vns_csrbank4_load2_w = soc_litedramcore_timer_load_storage[23:16];
assign vns_csrbank4_load1_w = soc_litedramcore_timer_load_storage[15:8];
assign vns_csrbank4_load0_w = soc_litedramcore_timer_load_storage[7:0];
assign vns_csrbank4_reload3_w = soc_litedramcore_timer_reload_storage[31:24];
assign vns_csrbank4_reload2_w = soc_litedramcore_timer_reload_storage[23:16];
assign vns_csrbank4_reload1_w = soc_litedramcore_timer_reload_storage[15:8];
assign vns_csrbank4_reload0_w = soc_litedramcore_timer_reload_storage[7:0];
assign vns_csrbank4_en0_w = soc_litedramcore_timer_en_storage;
assign vns_csrbank4_update_value0_w = soc_litedramcore_timer_update_value_storage;
assign vns_csrbank4_value3_w = soc_litedramcore_timer_value_status[31:24];
assign vns_csrbank4_value2_w = soc_litedramcore_timer_value_status[23:16];
assign vns_csrbank4_value1_w = soc_litedramcore_timer_value_status[15:8];
assign vns_csrbank4_value0_w = soc_litedramcore_timer_value_status[7:0];
assign soc_litedramcore_timer_value_we = vns_csrbank4_value0_we;
assign vns_csrbank4_ev_enable0_w = soc_litedramcore_timer_eventmanager_storage;
assign vns_csrbank5_sel = (vns_interface5_bank_bus_adr[13:9] == 2'd3);
assign soc_litedramcore_uart_rxtx_r = vns_interface5_bank_bus_dat_w[7:0];
assign soc_litedramcore_uart_rxtx_re = ((vns_csrbank5_sel & vns_interface5_bank_bus_we) & (vns_interface5_bank_bus_adr[2:0] == 1'd0));
assign soc_litedramcore_uart_rxtx_we = ((vns_csrbank5_sel & (~vns_interface5_bank_bus_we)) & (vns_interface5_bank_bus_adr[2:0] == 1'd0));
assign vns_csrbank5_txfull_r = vns_interface5_bank_bus_dat_w[0];
assign vns_csrbank5_txfull_re = ((vns_csrbank5_sel & vns_interface5_bank_bus_we) & (vns_interface5_bank_bus_adr[2:0] == 1'd1));
assign vns_csrbank5_txfull_we = ((vns_csrbank5_sel & (~vns_interface5_bank_bus_we)) & (vns_interface5_bank_bus_adr[2:0] == 1'd1));
assign vns_csrbank5_rxempty_r = vns_interface5_bank_bus_dat_w[0];
assign vns_csrbank5_rxempty_re = ((vns_csrbank5_sel & vns_interface5_bank_bus_we) & (vns_interface5_bank_bus_adr[2:0] == 2'd2));
assign vns_csrbank5_rxempty_we = ((vns_csrbank5_sel & (~vns_interface5_bank_bus_we)) & (vns_interface5_bank_bus_adr[2:0] == 2'd2));
assign soc_litedramcore_uart_eventmanager_status_r = vns_interface5_bank_bus_dat_w[1:0];
assign soc_litedramcore_uart_eventmanager_status_re = ((vns_csrbank5_sel & vns_interface5_bank_bus_we) & (vns_interface5_bank_bus_adr[2:0] == 2'd3));
assign soc_litedramcore_uart_eventmanager_status_we = ((vns_csrbank5_sel & (~vns_interface5_bank_bus_we)) & (vns_interface5_bank_bus_adr[2:0] == 2'd3));
assign soc_litedramcore_uart_eventmanager_pending_r = vns_interface5_bank_bus_dat_w[1:0];
assign soc_litedramcore_uart_eventmanager_pending_re = ((vns_csrbank5_sel & vns_interface5_bank_bus_we) & (vns_interface5_bank_bus_adr[2:0] == 3'd4));
assign soc_litedramcore_uart_eventmanager_pending_we = ((vns_csrbank5_sel & (~vns_interface5_bank_bus_we)) & (vns_interface5_bank_bus_adr[2:0] == 3'd4));
assign vns_csrbank5_ev_enable0_r = vns_interface5_bank_bus_dat_w[1:0];
assign vns_csrbank5_ev_enable0_re = ((vns_csrbank5_sel & vns_interface5_bank_bus_we) & (vns_interface5_bank_bus_adr[2:0] == 3'd5));
assign vns_csrbank5_ev_enable0_we = ((vns_csrbank5_sel & (~vns_interface5_bank_bus_we)) & (vns_interface5_bank_bus_adr[2:0] == 3'd5));
assign vns_csrbank5_txfull_w = soc_litedramcore_uart_txfull_status;
assign soc_litedramcore_uart_txfull_we = vns_csrbank5_txfull_we;
assign vns_csrbank5_rxempty_w = soc_litedramcore_uart_rxempty_status;
assign soc_litedramcore_uart_rxempty_we = vns_csrbank5_rxempty_we;
assign vns_csrbank5_ev_enable0_w = soc_litedramcore_uart_eventmanager_storage[1:0];
assign vns_csrbank6_sel = (vns_interface6_bank_bus_adr[13:9] == 2'd2);
assign vns_csrbank6_tuning_word3_r = vns_interface6_bank_bus_dat_w[7:0];
assign vns_csrbank6_tuning_word3_re = ((vns_csrbank6_sel & vns_interface6_bank_bus_we) & (vns_interface6_bank_bus_adr[1:0] == 1'd0));
assign vns_csrbank6_tuning_word3_we = ((vns_csrbank6_sel & (~vns_interface6_bank_bus_we)) & (vns_interface6_bank_bus_adr[1:0] == 1'd0));
assign vns_csrbank6_tuning_word2_r = vns_interface6_bank_bus_dat_w[7:0];
assign vns_csrbank6_tuning_word2_re = ((vns_csrbank6_sel & vns_interface6_bank_bus_we) & (vns_interface6_bank_bus_adr[1:0] == 1'd1));
assign vns_csrbank6_tuning_word2_we = ((vns_csrbank6_sel & (~vns_interface6_bank_bus_we)) & (vns_interface6_bank_bus_adr[1:0] == 1'd1));
assign vns_csrbank6_tuning_word1_r = vns_interface6_bank_bus_dat_w[7:0];
assign vns_csrbank6_tuning_word1_re = ((vns_csrbank6_sel & vns_interface6_bank_bus_we) & (vns_interface6_bank_bus_adr[1:0] == 2'd2));
assign vns_csrbank6_tuning_word1_we = ((vns_csrbank6_sel & (~vns_interface6_bank_bus_we)) & (vns_interface6_bank_bus_adr[1:0] == 2'd2));
assign vns_csrbank6_tuning_word0_r = vns_interface6_bank_bus_dat_w[7:0];
assign vns_csrbank6_tuning_word0_re = ((vns_csrbank6_sel & vns_interface6_bank_bus_we) & (vns_interface6_bank_bus_adr[1:0] == 2'd3));
assign vns_csrbank6_tuning_word0_we = ((vns_csrbank6_sel & (~vns_interface6_bank_bus_we)) & (vns_interface6_bank_bus_adr[1:0] == 2'd3));
assign vns_csrbank6_tuning_word3_w = soc_litedramcore_storage[31:24];
assign vns_csrbank6_tuning_word2_w = soc_litedramcore_storage[23:16];
assign vns_csrbank6_tuning_word1_w = soc_litedramcore_storage[15:8];
assign vns_csrbank6_tuning_word0_w = soc_litedramcore_storage[7:0];
assign vns_adr = soc_litedramcore_interface_adr;
assign vns_we = soc_litedramcore_interface_we;
assign vns_dat_w = soc_litedramcore_interface_dat_w;
assign soc_litedramcore_interface_dat_r = vns_dat_r;
assign vns_interface0_bank_bus_adr = vns_adr;
assign vns_interface1_bank_bus_adr = vns_adr;
assign vns_interface2_bank_bus_adr = vns_adr;
assign vns_interface3_bank_bus_adr = vns_adr;
assign vns_interface4_bank_bus_adr = vns_adr;
assign vns_interface5_bank_bus_adr = vns_adr;
assign vns_interface6_bank_bus_adr = vns_adr;
assign vns_interface0_bank_bus_we = vns_we;
assign vns_interface1_bank_bus_we = vns_we;
assign vns_interface2_bank_bus_we = vns_we;
assign vns_interface3_bank_bus_we = vns_we;
assign vns_interface4_bank_bus_we = vns_we;
assign vns_interface5_bank_bus_we = vns_we;
assign vns_interface6_bank_bus_we = vns_we;
assign vns_interface0_bank_bus_dat_w = vns_dat_w;
assign vns_interface1_bank_bus_dat_w = vns_dat_w;
assign vns_interface2_bank_bus_dat_w = vns_dat_w;
assign vns_interface3_bank_bus_dat_w = vns_dat_w;
assign vns_interface4_bank_bus_dat_w = vns_dat_w;
assign vns_interface5_bank_bus_dat_w = vns_dat_w;
assign vns_interface6_bank_bus_dat_w = vns_dat_w;
assign vns_dat_r = ((((((vns_interface0_bank_bus_dat_r | vns_interface1_bank_bus_dat_r) | vns_interface2_bank_bus_dat_r) | vns_interface3_bank_bus_dat_r) | vns_interface4_bank_bus_dat_r) | vns_interface5_bank_bus_dat_r) | vns_interface6_bank_bus_dat_r);

// synthesis translate_off
reg dummy_d_307;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed0 <= 1'd0;
	case (soc_sdram_choose_cmd_grant)
		1'd0: begin
			vns_rhs_array_muxed0 <= soc_sdram_choose_cmd_valids[0];
		end
		1'd1: begin
			vns_rhs_array_muxed0 <= soc_sdram_choose_cmd_valids[1];
		end
		2'd2: begin
			vns_rhs_array_muxed0 <= soc_sdram_choose_cmd_valids[2];
		end
		2'd3: begin
			vns_rhs_array_muxed0 <= soc_sdram_choose_cmd_valids[3];
		end
		3'd4: begin
			vns_rhs_array_muxed0 <= soc_sdram_choose_cmd_valids[4];
		end
		3'd5: begin
			vns_rhs_array_muxed0 <= soc_sdram_choose_cmd_valids[5];
		end
		3'd6: begin
			vns_rhs_array_muxed0 <= soc_sdram_choose_cmd_valids[6];
		end
		default: begin
			vns_rhs_array_muxed0 <= soc_sdram_choose_cmd_valids[7];
		end
	endcase
// synthesis translate_off
	dummy_d_307 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_308;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed1 <= 13'd0;
	case (soc_sdram_choose_cmd_grant)
		1'd0: begin
			vns_rhs_array_muxed1 <= soc_sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			vns_rhs_array_muxed1 <= soc_sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			vns_rhs_array_muxed1 <= soc_sdram_bankmachine2_cmd_payload_a;
		end
		2'd3: begin
			vns_rhs_array_muxed1 <= soc_sdram_bankmachine3_cmd_payload_a;
		end
		3'd4: begin
			vns_rhs_array_muxed1 <= soc_sdram_bankmachine4_cmd_payload_a;
		end
		3'd5: begin
			vns_rhs_array_muxed1 <= soc_sdram_bankmachine5_cmd_payload_a;
		end
		3'd6: begin
			vns_rhs_array_muxed1 <= soc_sdram_bankmachine6_cmd_payload_a;
		end
		default: begin
			vns_rhs_array_muxed1 <= soc_sdram_bankmachine7_cmd_payload_a;
		end
	endcase
// synthesis translate_off
	dummy_d_308 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_309;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed2 <= 3'd0;
	case (soc_sdram_choose_cmd_grant)
		1'd0: begin
			vns_rhs_array_muxed2 <= soc_sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			vns_rhs_array_muxed2 <= soc_sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			vns_rhs_array_muxed2 <= soc_sdram_bankmachine2_cmd_payload_ba;
		end
		2'd3: begin
			vns_rhs_array_muxed2 <= soc_sdram_bankmachine3_cmd_payload_ba;
		end
		3'd4: begin
			vns_rhs_array_muxed2 <= soc_sdram_bankmachine4_cmd_payload_ba;
		end
		3'd5: begin
			vns_rhs_array_muxed2 <= soc_sdram_bankmachine5_cmd_payload_ba;
		end
		3'd6: begin
			vns_rhs_array_muxed2 <= soc_sdram_bankmachine6_cmd_payload_ba;
		end
		default: begin
			vns_rhs_array_muxed2 <= soc_sdram_bankmachine7_cmd_payload_ba;
		end
	endcase
// synthesis translate_off
	dummy_d_309 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_310;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed3 <= 1'd0;
	case (soc_sdram_choose_cmd_grant)
		1'd0: begin
			vns_rhs_array_muxed3 <= soc_sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			vns_rhs_array_muxed3 <= soc_sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			vns_rhs_array_muxed3 <= soc_sdram_bankmachine2_cmd_payload_is_read;
		end
		2'd3: begin
			vns_rhs_array_muxed3 <= soc_sdram_bankmachine3_cmd_payload_is_read;
		end
		3'd4: begin
			vns_rhs_array_muxed3 <= soc_sdram_bankmachine4_cmd_payload_is_read;
		end
		3'd5: begin
			vns_rhs_array_muxed3 <= soc_sdram_bankmachine5_cmd_payload_is_read;
		end
		3'd6: begin
			vns_rhs_array_muxed3 <= soc_sdram_bankmachine6_cmd_payload_is_read;
		end
		default: begin
			vns_rhs_array_muxed3 <= soc_sdram_bankmachine7_cmd_payload_is_read;
		end
	endcase
// synthesis translate_off
	dummy_d_310 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_311;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed4 <= 1'd0;
	case (soc_sdram_choose_cmd_grant)
		1'd0: begin
			vns_rhs_array_muxed4 <= soc_sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			vns_rhs_array_muxed4 <= soc_sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			vns_rhs_array_muxed4 <= soc_sdram_bankmachine2_cmd_payload_is_write;
		end
		2'd3: begin
			vns_rhs_array_muxed4 <= soc_sdram_bankmachine3_cmd_payload_is_write;
		end
		3'd4: begin
			vns_rhs_array_muxed4 <= soc_sdram_bankmachine4_cmd_payload_is_write;
		end
		3'd5: begin
			vns_rhs_array_muxed4 <= soc_sdram_bankmachine5_cmd_payload_is_write;
		end
		3'd6: begin
			vns_rhs_array_muxed4 <= soc_sdram_bankmachine6_cmd_payload_is_write;
		end
		default: begin
			vns_rhs_array_muxed4 <= soc_sdram_bankmachine7_cmd_payload_is_write;
		end
	endcase
// synthesis translate_off
	dummy_d_311 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_312;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed5 <= 1'd0;
	case (soc_sdram_choose_cmd_grant)
		1'd0: begin
			vns_rhs_array_muxed5 <= soc_sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			vns_rhs_array_muxed5 <= soc_sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			vns_rhs_array_muxed5 <= soc_sdram_bankmachine2_cmd_payload_is_cmd;
		end
		2'd3: begin
			vns_rhs_array_muxed5 <= soc_sdram_bankmachine3_cmd_payload_is_cmd;
		end
		3'd4: begin
			vns_rhs_array_muxed5 <= soc_sdram_bankmachine4_cmd_payload_is_cmd;
		end
		3'd5: begin
			vns_rhs_array_muxed5 <= soc_sdram_bankmachine5_cmd_payload_is_cmd;
		end
		3'd6: begin
			vns_rhs_array_muxed5 <= soc_sdram_bankmachine6_cmd_payload_is_cmd;
		end
		default: begin
			vns_rhs_array_muxed5 <= soc_sdram_bankmachine7_cmd_payload_is_cmd;
		end
	endcase
// synthesis translate_off
	dummy_d_312 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_313;
// synthesis translate_on
always @(*) begin
	vns_t_array_muxed0 <= 1'd0;
	case (soc_sdram_choose_cmd_grant)
		1'd0: begin
			vns_t_array_muxed0 <= soc_sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			vns_t_array_muxed0 <= soc_sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			vns_t_array_muxed0 <= soc_sdram_bankmachine2_cmd_payload_cas;
		end
		2'd3: begin
			vns_t_array_muxed0 <= soc_sdram_bankmachine3_cmd_payload_cas;
		end
		3'd4: begin
			vns_t_array_muxed0 <= soc_sdram_bankmachine4_cmd_payload_cas;
		end
		3'd5: begin
			vns_t_array_muxed0 <= soc_sdram_bankmachine5_cmd_payload_cas;
		end
		3'd6: begin
			vns_t_array_muxed0 <= soc_sdram_bankmachine6_cmd_payload_cas;
		end
		default: begin
			vns_t_array_muxed0 <= soc_sdram_bankmachine7_cmd_payload_cas;
		end
	endcase
// synthesis translate_off
	dummy_d_313 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_314;
// synthesis translate_on
always @(*) begin
	vns_t_array_muxed1 <= 1'd0;
	case (soc_sdram_choose_cmd_grant)
		1'd0: begin
			vns_t_array_muxed1 <= soc_sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			vns_t_array_muxed1 <= soc_sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			vns_t_array_muxed1 <= soc_sdram_bankmachine2_cmd_payload_ras;
		end
		2'd3: begin
			vns_t_array_muxed1 <= soc_sdram_bankmachine3_cmd_payload_ras;
		end
		3'd4: begin
			vns_t_array_muxed1 <= soc_sdram_bankmachine4_cmd_payload_ras;
		end
		3'd5: begin
			vns_t_array_muxed1 <= soc_sdram_bankmachine5_cmd_payload_ras;
		end
		3'd6: begin
			vns_t_array_muxed1 <= soc_sdram_bankmachine6_cmd_payload_ras;
		end
		default: begin
			vns_t_array_muxed1 <= soc_sdram_bankmachine7_cmd_payload_ras;
		end
	endcase
// synthesis translate_off
	dummy_d_314 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_315;
// synthesis translate_on
always @(*) begin
	vns_t_array_muxed2 <= 1'd0;
	case (soc_sdram_choose_cmd_grant)
		1'd0: begin
			vns_t_array_muxed2 <= soc_sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			vns_t_array_muxed2 <= soc_sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			vns_t_array_muxed2 <= soc_sdram_bankmachine2_cmd_payload_we;
		end
		2'd3: begin
			vns_t_array_muxed2 <= soc_sdram_bankmachine3_cmd_payload_we;
		end
		3'd4: begin
			vns_t_array_muxed2 <= soc_sdram_bankmachine4_cmd_payload_we;
		end
		3'd5: begin
			vns_t_array_muxed2 <= soc_sdram_bankmachine5_cmd_payload_we;
		end
		3'd6: begin
			vns_t_array_muxed2 <= soc_sdram_bankmachine6_cmd_payload_we;
		end
		default: begin
			vns_t_array_muxed2 <= soc_sdram_bankmachine7_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_315 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_316;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed6 <= 1'd0;
	case (soc_sdram_choose_req_grant)
		1'd0: begin
			vns_rhs_array_muxed6 <= soc_sdram_choose_req_valids[0];
		end
		1'd1: begin
			vns_rhs_array_muxed6 <= soc_sdram_choose_req_valids[1];
		end
		2'd2: begin
			vns_rhs_array_muxed6 <= soc_sdram_choose_req_valids[2];
		end
		2'd3: begin
			vns_rhs_array_muxed6 <= soc_sdram_choose_req_valids[3];
		end
		3'd4: begin
			vns_rhs_array_muxed6 <= soc_sdram_choose_req_valids[4];
		end
		3'd5: begin
			vns_rhs_array_muxed6 <= soc_sdram_choose_req_valids[5];
		end
		3'd6: begin
			vns_rhs_array_muxed6 <= soc_sdram_choose_req_valids[6];
		end
		default: begin
			vns_rhs_array_muxed6 <= soc_sdram_choose_req_valids[7];
		end
	endcase
// synthesis translate_off
	dummy_d_316 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_317;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed7 <= 13'd0;
	case (soc_sdram_choose_req_grant)
		1'd0: begin
			vns_rhs_array_muxed7 <= soc_sdram_bankmachine0_cmd_payload_a;
		end
		1'd1: begin
			vns_rhs_array_muxed7 <= soc_sdram_bankmachine1_cmd_payload_a;
		end
		2'd2: begin
			vns_rhs_array_muxed7 <= soc_sdram_bankmachine2_cmd_payload_a;
		end
		2'd3: begin
			vns_rhs_array_muxed7 <= soc_sdram_bankmachine3_cmd_payload_a;
		end
		3'd4: begin
			vns_rhs_array_muxed7 <= soc_sdram_bankmachine4_cmd_payload_a;
		end
		3'd5: begin
			vns_rhs_array_muxed7 <= soc_sdram_bankmachine5_cmd_payload_a;
		end
		3'd6: begin
			vns_rhs_array_muxed7 <= soc_sdram_bankmachine6_cmd_payload_a;
		end
		default: begin
			vns_rhs_array_muxed7 <= soc_sdram_bankmachine7_cmd_payload_a;
		end
	endcase
// synthesis translate_off
	dummy_d_317 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_318;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed8 <= 3'd0;
	case (soc_sdram_choose_req_grant)
		1'd0: begin
			vns_rhs_array_muxed8 <= soc_sdram_bankmachine0_cmd_payload_ba;
		end
		1'd1: begin
			vns_rhs_array_muxed8 <= soc_sdram_bankmachine1_cmd_payload_ba;
		end
		2'd2: begin
			vns_rhs_array_muxed8 <= soc_sdram_bankmachine2_cmd_payload_ba;
		end
		2'd3: begin
			vns_rhs_array_muxed8 <= soc_sdram_bankmachine3_cmd_payload_ba;
		end
		3'd4: begin
			vns_rhs_array_muxed8 <= soc_sdram_bankmachine4_cmd_payload_ba;
		end
		3'd5: begin
			vns_rhs_array_muxed8 <= soc_sdram_bankmachine5_cmd_payload_ba;
		end
		3'd6: begin
			vns_rhs_array_muxed8 <= soc_sdram_bankmachine6_cmd_payload_ba;
		end
		default: begin
			vns_rhs_array_muxed8 <= soc_sdram_bankmachine7_cmd_payload_ba;
		end
	endcase
// synthesis translate_off
	dummy_d_318 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_319;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed9 <= 1'd0;
	case (soc_sdram_choose_req_grant)
		1'd0: begin
			vns_rhs_array_muxed9 <= soc_sdram_bankmachine0_cmd_payload_is_read;
		end
		1'd1: begin
			vns_rhs_array_muxed9 <= soc_sdram_bankmachine1_cmd_payload_is_read;
		end
		2'd2: begin
			vns_rhs_array_muxed9 <= soc_sdram_bankmachine2_cmd_payload_is_read;
		end
		2'd3: begin
			vns_rhs_array_muxed9 <= soc_sdram_bankmachine3_cmd_payload_is_read;
		end
		3'd4: begin
			vns_rhs_array_muxed9 <= soc_sdram_bankmachine4_cmd_payload_is_read;
		end
		3'd5: begin
			vns_rhs_array_muxed9 <= soc_sdram_bankmachine5_cmd_payload_is_read;
		end
		3'd6: begin
			vns_rhs_array_muxed9 <= soc_sdram_bankmachine6_cmd_payload_is_read;
		end
		default: begin
			vns_rhs_array_muxed9 <= soc_sdram_bankmachine7_cmd_payload_is_read;
		end
	endcase
// synthesis translate_off
	dummy_d_319 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_320;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed10 <= 1'd0;
	case (soc_sdram_choose_req_grant)
		1'd0: begin
			vns_rhs_array_muxed10 <= soc_sdram_bankmachine0_cmd_payload_is_write;
		end
		1'd1: begin
			vns_rhs_array_muxed10 <= soc_sdram_bankmachine1_cmd_payload_is_write;
		end
		2'd2: begin
			vns_rhs_array_muxed10 <= soc_sdram_bankmachine2_cmd_payload_is_write;
		end
		2'd3: begin
			vns_rhs_array_muxed10 <= soc_sdram_bankmachine3_cmd_payload_is_write;
		end
		3'd4: begin
			vns_rhs_array_muxed10 <= soc_sdram_bankmachine4_cmd_payload_is_write;
		end
		3'd5: begin
			vns_rhs_array_muxed10 <= soc_sdram_bankmachine5_cmd_payload_is_write;
		end
		3'd6: begin
			vns_rhs_array_muxed10 <= soc_sdram_bankmachine6_cmd_payload_is_write;
		end
		default: begin
			vns_rhs_array_muxed10 <= soc_sdram_bankmachine7_cmd_payload_is_write;
		end
	endcase
// synthesis translate_off
	dummy_d_320 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_321;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed11 <= 1'd0;
	case (soc_sdram_choose_req_grant)
		1'd0: begin
			vns_rhs_array_muxed11 <= soc_sdram_bankmachine0_cmd_payload_is_cmd;
		end
		1'd1: begin
			vns_rhs_array_muxed11 <= soc_sdram_bankmachine1_cmd_payload_is_cmd;
		end
		2'd2: begin
			vns_rhs_array_muxed11 <= soc_sdram_bankmachine2_cmd_payload_is_cmd;
		end
		2'd3: begin
			vns_rhs_array_muxed11 <= soc_sdram_bankmachine3_cmd_payload_is_cmd;
		end
		3'd4: begin
			vns_rhs_array_muxed11 <= soc_sdram_bankmachine4_cmd_payload_is_cmd;
		end
		3'd5: begin
			vns_rhs_array_muxed11 <= soc_sdram_bankmachine5_cmd_payload_is_cmd;
		end
		3'd6: begin
			vns_rhs_array_muxed11 <= soc_sdram_bankmachine6_cmd_payload_is_cmd;
		end
		default: begin
			vns_rhs_array_muxed11 <= soc_sdram_bankmachine7_cmd_payload_is_cmd;
		end
	endcase
// synthesis translate_off
	dummy_d_321 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_322;
// synthesis translate_on
always @(*) begin
	vns_t_array_muxed3 <= 1'd0;
	case (soc_sdram_choose_req_grant)
		1'd0: begin
			vns_t_array_muxed3 <= soc_sdram_bankmachine0_cmd_payload_cas;
		end
		1'd1: begin
			vns_t_array_muxed3 <= soc_sdram_bankmachine1_cmd_payload_cas;
		end
		2'd2: begin
			vns_t_array_muxed3 <= soc_sdram_bankmachine2_cmd_payload_cas;
		end
		2'd3: begin
			vns_t_array_muxed3 <= soc_sdram_bankmachine3_cmd_payload_cas;
		end
		3'd4: begin
			vns_t_array_muxed3 <= soc_sdram_bankmachine4_cmd_payload_cas;
		end
		3'd5: begin
			vns_t_array_muxed3 <= soc_sdram_bankmachine5_cmd_payload_cas;
		end
		3'd6: begin
			vns_t_array_muxed3 <= soc_sdram_bankmachine6_cmd_payload_cas;
		end
		default: begin
			vns_t_array_muxed3 <= soc_sdram_bankmachine7_cmd_payload_cas;
		end
	endcase
// synthesis translate_off
	dummy_d_322 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_323;
// synthesis translate_on
always @(*) begin
	vns_t_array_muxed4 <= 1'd0;
	case (soc_sdram_choose_req_grant)
		1'd0: begin
			vns_t_array_muxed4 <= soc_sdram_bankmachine0_cmd_payload_ras;
		end
		1'd1: begin
			vns_t_array_muxed4 <= soc_sdram_bankmachine1_cmd_payload_ras;
		end
		2'd2: begin
			vns_t_array_muxed4 <= soc_sdram_bankmachine2_cmd_payload_ras;
		end
		2'd3: begin
			vns_t_array_muxed4 <= soc_sdram_bankmachine3_cmd_payload_ras;
		end
		3'd4: begin
			vns_t_array_muxed4 <= soc_sdram_bankmachine4_cmd_payload_ras;
		end
		3'd5: begin
			vns_t_array_muxed4 <= soc_sdram_bankmachine5_cmd_payload_ras;
		end
		3'd6: begin
			vns_t_array_muxed4 <= soc_sdram_bankmachine6_cmd_payload_ras;
		end
		default: begin
			vns_t_array_muxed4 <= soc_sdram_bankmachine7_cmd_payload_ras;
		end
	endcase
// synthesis translate_off
	dummy_d_323 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_324;
// synthesis translate_on
always @(*) begin
	vns_t_array_muxed5 <= 1'd0;
	case (soc_sdram_choose_req_grant)
		1'd0: begin
			vns_t_array_muxed5 <= soc_sdram_bankmachine0_cmd_payload_we;
		end
		1'd1: begin
			vns_t_array_muxed5 <= soc_sdram_bankmachine1_cmd_payload_we;
		end
		2'd2: begin
			vns_t_array_muxed5 <= soc_sdram_bankmachine2_cmd_payload_we;
		end
		2'd3: begin
			vns_t_array_muxed5 <= soc_sdram_bankmachine3_cmd_payload_we;
		end
		3'd4: begin
			vns_t_array_muxed5 <= soc_sdram_bankmachine4_cmd_payload_we;
		end
		3'd5: begin
			vns_t_array_muxed5 <= soc_sdram_bankmachine5_cmd_payload_we;
		end
		3'd6: begin
			vns_t_array_muxed5 <= soc_sdram_bankmachine6_cmd_payload_we;
		end
		default: begin
			vns_t_array_muxed5 <= soc_sdram_bankmachine7_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_324 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_325;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed12 <= 21'd0;
	case (vns_roundrobin0_grant)
		1'd0: begin
			vns_rhs_array_muxed12 <= {soc_port_cmd_payload_addr[23:11], soc_port_cmd_payload_addr[7:0]};
		end
		default: begin
			vns_rhs_array_muxed12 <= {soc_cmd_payload_addr[23:11], soc_cmd_payload_addr[7:0]};
		end
	endcase
// synthesis translate_off
	dummy_d_325 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_326;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed13 <= 1'd0;
	case (vns_roundrobin0_grant)
		1'd0: begin
			vns_rhs_array_muxed13 <= soc_port_cmd_payload_we;
		end
		default: begin
			vns_rhs_array_muxed13 <= soc_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_326 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_327;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed14 <= 1'd0;
	case (vns_roundrobin0_grant)
		1'd0: begin
			vns_rhs_array_muxed14 <= (((soc_port_cmd_payload_addr[10:8] == 1'd0) & (~(((((((vns_locked0 | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid);
		end
		default: begin
			vns_rhs_array_muxed14 <= (((soc_cmd_payload_addr[10:8] == 1'd0) & (~(((((((vns_locked1 | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid);
		end
	endcase
// synthesis translate_off
	dummy_d_327 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_328;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed15 <= 21'd0;
	case (vns_roundrobin1_grant)
		1'd0: begin
			vns_rhs_array_muxed15 <= {soc_port_cmd_payload_addr[23:11], soc_port_cmd_payload_addr[7:0]};
		end
		default: begin
			vns_rhs_array_muxed15 <= {soc_cmd_payload_addr[23:11], soc_cmd_payload_addr[7:0]};
		end
	endcase
// synthesis translate_off
	dummy_d_328 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_329;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed16 <= 1'd0;
	case (vns_roundrobin1_grant)
		1'd0: begin
			vns_rhs_array_muxed16 <= soc_port_cmd_payload_we;
		end
		default: begin
			vns_rhs_array_muxed16 <= soc_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_329 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_330;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed17 <= 1'd0;
	case (vns_roundrobin1_grant)
		1'd0: begin
			vns_rhs_array_muxed17 <= (((soc_port_cmd_payload_addr[10:8] == 1'd1) & (~(((((((vns_locked2 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid);
		end
		default: begin
			vns_rhs_array_muxed17 <= (((soc_cmd_payload_addr[10:8] == 1'd1) & (~(((((((vns_locked3 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid);
		end
	endcase
// synthesis translate_off
	dummy_d_330 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_331;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed18 <= 21'd0;
	case (vns_roundrobin2_grant)
		1'd0: begin
			vns_rhs_array_muxed18 <= {soc_port_cmd_payload_addr[23:11], soc_port_cmd_payload_addr[7:0]};
		end
		default: begin
			vns_rhs_array_muxed18 <= {soc_cmd_payload_addr[23:11], soc_cmd_payload_addr[7:0]};
		end
	endcase
// synthesis translate_off
	dummy_d_331 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_332;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed19 <= 1'd0;
	case (vns_roundrobin2_grant)
		1'd0: begin
			vns_rhs_array_muxed19 <= soc_port_cmd_payload_we;
		end
		default: begin
			vns_rhs_array_muxed19 <= soc_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_332 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_333;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed20 <= 1'd0;
	case (vns_roundrobin2_grant)
		1'd0: begin
			vns_rhs_array_muxed20 <= (((soc_port_cmd_payload_addr[10:8] == 2'd2) & (~(((((((vns_locked4 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid);
		end
		default: begin
			vns_rhs_array_muxed20 <= (((soc_cmd_payload_addr[10:8] == 2'd2) & (~(((((((vns_locked5 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid);
		end
	endcase
// synthesis translate_off
	dummy_d_333 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_334;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed21 <= 21'd0;
	case (vns_roundrobin3_grant)
		1'd0: begin
			vns_rhs_array_muxed21 <= {soc_port_cmd_payload_addr[23:11], soc_port_cmd_payload_addr[7:0]};
		end
		default: begin
			vns_rhs_array_muxed21 <= {soc_cmd_payload_addr[23:11], soc_cmd_payload_addr[7:0]};
		end
	endcase
// synthesis translate_off
	dummy_d_334 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_335;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed22 <= 1'd0;
	case (vns_roundrobin3_grant)
		1'd0: begin
			vns_rhs_array_muxed22 <= soc_port_cmd_payload_we;
		end
		default: begin
			vns_rhs_array_muxed22 <= soc_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_335 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_336;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed23 <= 1'd0;
	case (vns_roundrobin3_grant)
		1'd0: begin
			vns_rhs_array_muxed23 <= (((soc_port_cmd_payload_addr[10:8] == 2'd3) & (~(((((((vns_locked6 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid);
		end
		default: begin
			vns_rhs_array_muxed23 <= (((soc_cmd_payload_addr[10:8] == 2'd3) & (~(((((((vns_locked7 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid);
		end
	endcase
// synthesis translate_off
	dummy_d_336 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_337;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed24 <= 21'd0;
	case (vns_roundrobin4_grant)
		1'd0: begin
			vns_rhs_array_muxed24 <= {soc_port_cmd_payload_addr[23:11], soc_port_cmd_payload_addr[7:0]};
		end
		default: begin
			vns_rhs_array_muxed24 <= {soc_cmd_payload_addr[23:11], soc_cmd_payload_addr[7:0]};
		end
	endcase
// synthesis translate_off
	dummy_d_337 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_338;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed25 <= 1'd0;
	case (vns_roundrobin4_grant)
		1'd0: begin
			vns_rhs_array_muxed25 <= soc_port_cmd_payload_we;
		end
		default: begin
			vns_rhs_array_muxed25 <= soc_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_338 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_339;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed26 <= 1'd0;
	case (vns_roundrobin4_grant)
		1'd0: begin
			vns_rhs_array_muxed26 <= (((soc_port_cmd_payload_addr[10:8] == 3'd4) & (~(((((((vns_locked8 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid);
		end
		default: begin
			vns_rhs_array_muxed26 <= (((soc_cmd_payload_addr[10:8] == 3'd4) & (~(((((((vns_locked9 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid);
		end
	endcase
// synthesis translate_off
	dummy_d_339 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_340;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed27 <= 21'd0;
	case (vns_roundrobin5_grant)
		1'd0: begin
			vns_rhs_array_muxed27 <= {soc_port_cmd_payload_addr[23:11], soc_port_cmd_payload_addr[7:0]};
		end
		default: begin
			vns_rhs_array_muxed27 <= {soc_cmd_payload_addr[23:11], soc_cmd_payload_addr[7:0]};
		end
	endcase
// synthesis translate_off
	dummy_d_340 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_341;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed28 <= 1'd0;
	case (vns_roundrobin5_grant)
		1'd0: begin
			vns_rhs_array_muxed28 <= soc_port_cmd_payload_we;
		end
		default: begin
			vns_rhs_array_muxed28 <= soc_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_341 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_342;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed29 <= 1'd0;
	case (vns_roundrobin5_grant)
		1'd0: begin
			vns_rhs_array_muxed29 <= (((soc_port_cmd_payload_addr[10:8] == 3'd5) & (~(((((((vns_locked10 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid);
		end
		default: begin
			vns_rhs_array_muxed29 <= (((soc_cmd_payload_addr[10:8] == 3'd5) & (~(((((((vns_locked11 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid);
		end
	endcase
// synthesis translate_off
	dummy_d_342 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_343;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed30 <= 21'd0;
	case (vns_roundrobin6_grant)
		1'd0: begin
			vns_rhs_array_muxed30 <= {soc_port_cmd_payload_addr[23:11], soc_port_cmd_payload_addr[7:0]};
		end
		default: begin
			vns_rhs_array_muxed30 <= {soc_cmd_payload_addr[23:11], soc_cmd_payload_addr[7:0]};
		end
	endcase
// synthesis translate_off
	dummy_d_343 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_344;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed31 <= 1'd0;
	case (vns_roundrobin6_grant)
		1'd0: begin
			vns_rhs_array_muxed31 <= soc_port_cmd_payload_we;
		end
		default: begin
			vns_rhs_array_muxed31 <= soc_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_344 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_345;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed32 <= 1'd0;
	case (vns_roundrobin6_grant)
		1'd0: begin
			vns_rhs_array_muxed32 <= (((soc_port_cmd_payload_addr[10:8] == 3'd6) & (~(((((((vns_locked12 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd0))))) & soc_port_cmd_valid);
		end
		default: begin
			vns_rhs_array_muxed32 <= (((soc_cmd_payload_addr[10:8] == 3'd6) & (~(((((((vns_locked13 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank7_lock & (vns_roundrobin7_grant == 1'd1))))) & soc_cmd_valid);
		end
	endcase
// synthesis translate_off
	dummy_d_345 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_346;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed33 <= 21'd0;
	case (vns_roundrobin7_grant)
		1'd0: begin
			vns_rhs_array_muxed33 <= {soc_port_cmd_payload_addr[23:11], soc_port_cmd_payload_addr[7:0]};
		end
		default: begin
			vns_rhs_array_muxed33 <= {soc_cmd_payload_addr[23:11], soc_cmd_payload_addr[7:0]};
		end
	endcase
// synthesis translate_off
	dummy_d_346 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_347;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed34 <= 1'd0;
	case (vns_roundrobin7_grant)
		1'd0: begin
			vns_rhs_array_muxed34 <= soc_port_cmd_payload_we;
		end
		default: begin
			vns_rhs_array_muxed34 <= soc_cmd_payload_we;
		end
	endcase
// synthesis translate_off
	dummy_d_347 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_348;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed35 <= 1'd0;
	case (vns_roundrobin7_grant)
		1'd0: begin
			vns_rhs_array_muxed35 <= (((soc_port_cmd_payload_addr[10:8] == 3'd7) & (~(((((((vns_locked14 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd0))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd0))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd0))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd0))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd0))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd0))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd0))))) & soc_port_cmd_valid);
		end
		default: begin
			vns_rhs_array_muxed35 <= (((soc_cmd_payload_addr[10:8] == 3'd7) & (~(((((((vns_locked15 | (soc_sdram_interface_bank0_lock & (vns_roundrobin0_grant == 1'd1))) | (soc_sdram_interface_bank1_lock & (vns_roundrobin1_grant == 1'd1))) | (soc_sdram_interface_bank2_lock & (vns_roundrobin2_grant == 1'd1))) | (soc_sdram_interface_bank3_lock & (vns_roundrobin3_grant == 1'd1))) | (soc_sdram_interface_bank4_lock & (vns_roundrobin4_grant == 1'd1))) | (soc_sdram_interface_bank5_lock & (vns_roundrobin5_grant == 1'd1))) | (soc_sdram_interface_bank6_lock & (vns_roundrobin6_grant == 1'd1))))) & soc_cmd_valid);
		end
	endcase
// synthesis translate_off
	dummy_d_348 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_349;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed36 <= 30'd0;
	case (vns_grant)
		1'd0: begin
			vns_rhs_array_muxed36 <= soc_litedramcore_serv_ibus_adr;
		end
		default: begin
			vns_rhs_array_muxed36 <= soc_litedramcore_serv_dbus_adr;
		end
	endcase
// synthesis translate_off
	dummy_d_349 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_350;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed37 <= 32'd0;
	case (vns_grant)
		1'd0: begin
			vns_rhs_array_muxed37 <= soc_litedramcore_serv_ibus_dat_w;
		end
		default: begin
			vns_rhs_array_muxed37 <= soc_litedramcore_serv_dbus_dat_w;
		end
	endcase
// synthesis translate_off
	dummy_d_350 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_351;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed38 <= 4'd0;
	case (vns_grant)
		1'd0: begin
			vns_rhs_array_muxed38 <= soc_litedramcore_serv_ibus_sel;
		end
		default: begin
			vns_rhs_array_muxed38 <= soc_litedramcore_serv_dbus_sel;
		end
	endcase
// synthesis translate_off
	dummy_d_351 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_352;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed39 <= 1'd0;
	case (vns_grant)
		1'd0: begin
			vns_rhs_array_muxed39 <= soc_litedramcore_serv_ibus_cyc;
		end
		default: begin
			vns_rhs_array_muxed39 <= soc_litedramcore_serv_dbus_cyc;
		end
	endcase
// synthesis translate_off
	dummy_d_352 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_353;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed40 <= 1'd0;
	case (vns_grant)
		1'd0: begin
			vns_rhs_array_muxed40 <= soc_litedramcore_serv_ibus_stb;
		end
		default: begin
			vns_rhs_array_muxed40 <= soc_litedramcore_serv_dbus_stb;
		end
	endcase
// synthesis translate_off
	dummy_d_353 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_354;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed41 <= 1'd0;
	case (vns_grant)
		1'd0: begin
			vns_rhs_array_muxed41 <= soc_litedramcore_serv_ibus_we;
		end
		default: begin
			vns_rhs_array_muxed41 <= soc_litedramcore_serv_dbus_we;
		end
	endcase
// synthesis translate_off
	dummy_d_354 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_355;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed42 <= 3'd0;
	case (vns_grant)
		1'd0: begin
			vns_rhs_array_muxed42 <= soc_litedramcore_serv_ibus_cti;
		end
		default: begin
			vns_rhs_array_muxed42 <= soc_litedramcore_serv_dbus_cti;
		end
	endcase
// synthesis translate_off
	dummy_d_355 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_356;
// synthesis translate_on
always @(*) begin
	vns_rhs_array_muxed43 <= 2'd0;
	case (vns_grant)
		1'd0: begin
			vns_rhs_array_muxed43 <= soc_litedramcore_serv_ibus_bte;
		end
		default: begin
			vns_rhs_array_muxed43 <= soc_litedramcore_serv_dbus_bte;
		end
	endcase
// synthesis translate_off
	dummy_d_356 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_357;
// synthesis translate_on
always @(*) begin
	vns_array_muxed0 <= 3'd0;
	case (soc_sdram_steerer_sel0)
		1'd0: begin
			vns_array_muxed0 <= soc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			vns_array_muxed0 <= soc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			vns_array_muxed0 <= soc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			vns_array_muxed0 <= soc_sdram_cmd_payload_ba[2:0];
		end
	endcase
// synthesis translate_off
	dummy_d_357 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_358;
// synthesis translate_on
always @(*) begin
	vns_array_muxed1 <= 13'd0;
	case (soc_sdram_steerer_sel0)
		1'd0: begin
			vns_array_muxed1 <= soc_sdram_nop_a;
		end
		1'd1: begin
			vns_array_muxed1 <= soc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			vns_array_muxed1 <= soc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			vns_array_muxed1 <= soc_sdram_cmd_payload_a;
		end
	endcase
// synthesis translate_off
	dummy_d_358 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_359;
// synthesis translate_on
always @(*) begin
	vns_array_muxed2 <= 1'd0;
	case (soc_sdram_steerer_sel0)
		1'd0: begin
			vns_array_muxed2 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed2 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			vns_array_muxed2 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			vns_array_muxed2 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_cas);
		end
	endcase
// synthesis translate_off
	dummy_d_359 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_360;
// synthesis translate_on
always @(*) begin
	vns_array_muxed3 <= 1'd0;
	case (soc_sdram_steerer_sel0)
		1'd0: begin
			vns_array_muxed3 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed3 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			vns_array_muxed3 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			vns_array_muxed3 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_ras);
		end
	endcase
// synthesis translate_off
	dummy_d_360 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_361;
// synthesis translate_on
always @(*) begin
	vns_array_muxed4 <= 1'd0;
	case (soc_sdram_steerer_sel0)
		1'd0: begin
			vns_array_muxed4 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed4 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			vns_array_muxed4 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			vns_array_muxed4 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_we);
		end
	endcase
// synthesis translate_off
	dummy_d_361 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_362;
// synthesis translate_on
always @(*) begin
	vns_array_muxed5 <= 1'd0;
	case (soc_sdram_steerer_sel0)
		1'd0: begin
			vns_array_muxed5 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed5 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			vns_array_muxed5 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			vns_array_muxed5 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_is_read);
		end
	endcase
// synthesis translate_off
	dummy_d_362 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_363;
// synthesis translate_on
always @(*) begin
	vns_array_muxed6 <= 1'd0;
	case (soc_sdram_steerer_sel0)
		1'd0: begin
			vns_array_muxed6 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed6 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			vns_array_muxed6 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			vns_array_muxed6 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_is_write);
		end
	endcase
// synthesis translate_off
	dummy_d_363 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_364;
// synthesis translate_on
always @(*) begin
	vns_array_muxed7 <= 3'd0;
	case (soc_sdram_steerer_sel1)
		1'd0: begin
			vns_array_muxed7 <= soc_sdram_nop_ba[2:0];
		end
		1'd1: begin
			vns_array_muxed7 <= soc_sdram_choose_cmd_cmd_payload_ba[2:0];
		end
		2'd2: begin
			vns_array_muxed7 <= soc_sdram_choose_req_cmd_payload_ba[2:0];
		end
		default: begin
			vns_array_muxed7 <= soc_sdram_cmd_payload_ba[2:0];
		end
	endcase
// synthesis translate_off
	dummy_d_364 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_365;
// synthesis translate_on
always @(*) begin
	vns_array_muxed8 <= 13'd0;
	case (soc_sdram_steerer_sel1)
		1'd0: begin
			vns_array_muxed8 <= soc_sdram_nop_a;
		end
		1'd1: begin
			vns_array_muxed8 <= soc_sdram_choose_cmd_cmd_payload_a;
		end
		2'd2: begin
			vns_array_muxed8 <= soc_sdram_choose_req_cmd_payload_a;
		end
		default: begin
			vns_array_muxed8 <= soc_sdram_cmd_payload_a;
		end
	endcase
// synthesis translate_off
	dummy_d_365 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_366;
// synthesis translate_on
always @(*) begin
	vns_array_muxed9 <= 1'd0;
	case (soc_sdram_steerer_sel1)
		1'd0: begin
			vns_array_muxed9 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed9 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_cas);
		end
		2'd2: begin
			vns_array_muxed9 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_cas);
		end
		default: begin
			vns_array_muxed9 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_cas);
		end
	endcase
// synthesis translate_off
	dummy_d_366 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_367;
// synthesis translate_on
always @(*) begin
	vns_array_muxed10 <= 1'd0;
	case (soc_sdram_steerer_sel1)
		1'd0: begin
			vns_array_muxed10 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed10 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_ras);
		end
		2'd2: begin
			vns_array_muxed10 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_ras);
		end
		default: begin
			vns_array_muxed10 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_ras);
		end
	endcase
// synthesis translate_off
	dummy_d_367 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_368;
// synthesis translate_on
always @(*) begin
	vns_array_muxed11 <= 1'd0;
	case (soc_sdram_steerer_sel1)
		1'd0: begin
			vns_array_muxed11 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed11 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_we);
		end
		2'd2: begin
			vns_array_muxed11 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_we);
		end
		default: begin
			vns_array_muxed11 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_we);
		end
	endcase
// synthesis translate_off
	dummy_d_368 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_369;
// synthesis translate_on
always @(*) begin
	vns_array_muxed12 <= 1'd0;
	case (soc_sdram_steerer_sel1)
		1'd0: begin
			vns_array_muxed12 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed12 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_is_read);
		end
		2'd2: begin
			vns_array_muxed12 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_is_read);
		end
		default: begin
			vns_array_muxed12 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_is_read);
		end
	endcase
// synthesis translate_off
	dummy_d_369 = dummy_s;
// synthesis translate_on
end

// synthesis translate_off
reg dummy_d_370;
// synthesis translate_on
always @(*) begin
	vns_array_muxed13 <= 1'd0;
	case (soc_sdram_steerer_sel1)
		1'd0: begin
			vns_array_muxed13 <= 1'd0;
		end
		1'd1: begin
			vns_array_muxed13 <= ((soc_sdram_choose_cmd_cmd_valid & soc_sdram_choose_cmd_cmd_ready) & soc_sdram_choose_cmd_cmd_payload_is_write);
		end
		2'd2: begin
			vns_array_muxed13 <= ((soc_sdram_choose_req_cmd_valid & soc_sdram_choose_req_cmd_ready) & soc_sdram_choose_req_cmd_payload_is_write);
		end
		default: begin
			vns_array_muxed13 <= ((soc_sdram_cmd_valid & soc_sdram_cmd_ready) & soc_sdram_cmd_payload_is_write);
		end
	endcase
// synthesis translate_off
	dummy_d_370 = dummy_s;
// synthesis translate_on
end
assign soc_litedramcore_rx = vns_regs1;
assign vns_xilinxasyncresetsynchronizerimpl0 = ((~soc_sys_pll_locked) | soc_sys_pll_reset);
assign vns_xilinxasyncresetsynchronizerimpl1 = ((~soc_sys_pll_locked) | soc_sys_pll_reset);
assign vns_xilinxasyncresetsynchronizerimpl2 = ((~soc_sys_pll_locked) | soc_sys_pll_reset);
assign vns_xilinxasyncresetsynchronizerimpl3 = ((~soc_iodelay_pll_locked) | soc_iodelay_pll_reset);

always @(posedge iodelay_clk) begin
	if ((soc_reset_counter != 1'd0)) begin
		soc_reset_counter <= (soc_reset_counter - 1'd1);
	end else begin
		soc_ic_reset <= 1'd0;
	end
	if (iodelay_rst) begin
		soc_reset_counter <= 4'd15;
		soc_ic_reset <= 1'd1;
	end
end

always @(posedge sys_clk) begin
	if ((soc_litedramcore_soccontroller_bus_errors != 32'd4294967295)) begin
		if (soc_litedramcore_soccontroller_bus_error) begin
			soc_litedramcore_soccontroller_bus_errors <= (soc_litedramcore_soccontroller_bus_errors + 1'd1);
		end
	end
	soc_litedramcore_litedramcore_ram_bus_ack <= 1'd0;
	if (((soc_litedramcore_litedramcore_ram_bus_cyc & soc_litedramcore_litedramcore_ram_bus_stb) & (~soc_litedramcore_litedramcore_ram_bus_ack))) begin
		soc_litedramcore_litedramcore_ram_bus_ack <= 1'd1;
	end
	soc_litedramcore_ram_bus_ram_bus_ack <= 1'd0;
	if (((soc_litedramcore_ram_bus_ram_bus_cyc & soc_litedramcore_ram_bus_ram_bus_stb) & (~soc_litedramcore_ram_bus_ram_bus_ack))) begin
		soc_litedramcore_ram_bus_ram_bus_ack <= 1'd1;
	end
	soc_litedramcore_sink_ready <= 1'd0;
	if (((soc_litedramcore_sink_valid & (~soc_litedramcore_tx_busy)) & (~soc_litedramcore_sink_ready))) begin
		soc_litedramcore_tx_reg <= soc_litedramcore_sink_payload_data;
		soc_litedramcore_tx_bitcount <= 1'd0;
		soc_litedramcore_tx_busy <= 1'd1;
		serial_tx <= 1'd0;
	end else begin
		if ((soc_litedramcore_uart_clk_txen & soc_litedramcore_tx_busy)) begin
			soc_litedramcore_tx_bitcount <= (soc_litedramcore_tx_bitcount + 1'd1);
			if ((soc_litedramcore_tx_bitcount == 4'd8)) begin
				serial_tx <= 1'd1;
			end else begin
				if ((soc_litedramcore_tx_bitcount == 4'd9)) begin
					serial_tx <= 1'd1;
					soc_litedramcore_tx_busy <= 1'd0;
					soc_litedramcore_sink_ready <= 1'd1;
				end else begin
					serial_tx <= soc_litedramcore_tx_reg[0];
					soc_litedramcore_tx_reg <= {1'd0, soc_litedramcore_tx_reg[7:1]};
				end
			end
		end
	end
	if (soc_litedramcore_tx_busy) begin
		{soc_litedramcore_uart_clk_txen, soc_litedramcore_phase_accumulator_tx} <= (soc_litedramcore_phase_accumulator_tx + soc_litedramcore_storage);
	end else begin
		{soc_litedramcore_uart_clk_txen, soc_litedramcore_phase_accumulator_tx} <= 1'd0;
	end
	soc_litedramcore_source_valid <= 1'd0;
	soc_litedramcore_rx_r <= soc_litedramcore_rx;
	if ((~soc_litedramcore_rx_busy)) begin
		if (((~soc_litedramcore_rx) & soc_litedramcore_rx_r)) begin
			soc_litedramcore_rx_busy <= 1'd1;
			soc_litedramcore_rx_bitcount <= 1'd0;
		end
	end else begin
		if (soc_litedramcore_uart_clk_rxen) begin
			soc_litedramcore_rx_bitcount <= (soc_litedramcore_rx_bitcount + 1'd1);
			if ((soc_litedramcore_rx_bitcount == 1'd0)) begin
				if (soc_litedramcore_rx) begin
					soc_litedramcore_rx_busy <= 1'd0;
				end
			end else begin
				if ((soc_litedramcore_rx_bitcount == 4'd9)) begin
					soc_litedramcore_rx_busy <= 1'd0;
					if (soc_litedramcore_rx) begin
						soc_litedramcore_source_payload_data <= soc_litedramcore_rx_reg;
						soc_litedramcore_source_valid <= 1'd1;
					end
				end else begin
					soc_litedramcore_rx_reg <= {soc_litedramcore_rx, soc_litedramcore_rx_reg[7:1]};
				end
			end
		end
	end
	if (soc_litedramcore_rx_busy) begin
		{soc_litedramcore_uart_clk_rxen, soc_litedramcore_phase_accumulator_rx} <= (soc_litedramcore_phase_accumulator_rx + soc_litedramcore_storage);
	end else begin
		{soc_litedramcore_uart_clk_rxen, soc_litedramcore_phase_accumulator_rx} <= 32'd2147483648;
	end
	if (soc_litedramcore_uart_tx_clear) begin
		soc_litedramcore_uart_tx_pending <= 1'd0;
	end
	soc_litedramcore_uart_tx_old_trigger <= soc_litedramcore_uart_tx_trigger;
	if (((~soc_litedramcore_uart_tx_trigger) & soc_litedramcore_uart_tx_old_trigger)) begin
		soc_litedramcore_uart_tx_pending <= 1'd1;
	end
	if (soc_litedramcore_uart_rx_clear) begin
		soc_litedramcore_uart_rx_pending <= 1'd0;
	end
	soc_litedramcore_uart_rx_old_trigger <= soc_litedramcore_uart_rx_trigger;
	if (((~soc_litedramcore_uart_rx_trigger) & soc_litedramcore_uart_rx_old_trigger)) begin
		soc_litedramcore_uart_rx_pending <= 1'd1;
	end
	if (soc_litedramcore_uart_tx_fifo_syncfifo_re) begin
		soc_litedramcore_uart_tx_fifo_readable <= 1'd1;
	end else begin
		if (soc_litedramcore_uart_tx_fifo_re) begin
			soc_litedramcore_uart_tx_fifo_readable <= 1'd0;
		end
	end
	if (((soc_litedramcore_uart_tx_fifo_syncfifo_we & soc_litedramcore_uart_tx_fifo_syncfifo_writable) & (~soc_litedramcore_uart_tx_fifo_replace))) begin
		soc_litedramcore_uart_tx_fifo_produce <= (soc_litedramcore_uart_tx_fifo_produce + 1'd1);
	end
	if (soc_litedramcore_uart_tx_fifo_do_read) begin
		soc_litedramcore_uart_tx_fifo_consume <= (soc_litedramcore_uart_tx_fifo_consume + 1'd1);
	end
	if (((soc_litedramcore_uart_tx_fifo_syncfifo_we & soc_litedramcore_uart_tx_fifo_syncfifo_writable) & (~soc_litedramcore_uart_tx_fifo_replace))) begin
		if ((~soc_litedramcore_uart_tx_fifo_do_read)) begin
			soc_litedramcore_uart_tx_fifo_level0 <= (soc_litedramcore_uart_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (soc_litedramcore_uart_tx_fifo_do_read) begin
			soc_litedramcore_uart_tx_fifo_level0 <= (soc_litedramcore_uart_tx_fifo_level0 - 1'd1);
		end
	end
	if (soc_litedramcore_uart_rx_fifo_syncfifo_re) begin
		soc_litedramcore_uart_rx_fifo_readable <= 1'd1;
	end else begin
		if (soc_litedramcore_uart_rx_fifo_re) begin
			soc_litedramcore_uart_rx_fifo_readable <= 1'd0;
		end
	end
	if (((soc_litedramcore_uart_rx_fifo_syncfifo_we & soc_litedramcore_uart_rx_fifo_syncfifo_writable) & (~soc_litedramcore_uart_rx_fifo_replace))) begin
		soc_litedramcore_uart_rx_fifo_produce <= (soc_litedramcore_uart_rx_fifo_produce + 1'd1);
	end
	if (soc_litedramcore_uart_rx_fifo_do_read) begin
		soc_litedramcore_uart_rx_fifo_consume <= (soc_litedramcore_uart_rx_fifo_consume + 1'd1);
	end
	if (((soc_litedramcore_uart_rx_fifo_syncfifo_we & soc_litedramcore_uart_rx_fifo_syncfifo_writable) & (~soc_litedramcore_uart_rx_fifo_replace))) begin
		if ((~soc_litedramcore_uart_rx_fifo_do_read)) begin
			soc_litedramcore_uart_rx_fifo_level0 <= (soc_litedramcore_uart_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (soc_litedramcore_uart_rx_fifo_do_read) begin
			soc_litedramcore_uart_rx_fifo_level0 <= (soc_litedramcore_uart_rx_fifo_level0 - 1'd1);
		end
	end
	if (soc_litedramcore_uart_reset) begin
		soc_litedramcore_uart_tx_pending <= 1'd0;
		soc_litedramcore_uart_tx_old_trigger <= 1'd0;
		soc_litedramcore_uart_rx_pending <= 1'd0;
		soc_litedramcore_uart_rx_old_trigger <= 1'd0;
		soc_litedramcore_uart_tx_fifo_readable <= 1'd0;
		soc_litedramcore_uart_tx_fifo_level0 <= 5'd0;
		soc_litedramcore_uart_tx_fifo_produce <= 4'd0;
		soc_litedramcore_uart_tx_fifo_consume <= 4'd0;
		soc_litedramcore_uart_rx_fifo_readable <= 1'd0;
		soc_litedramcore_uart_rx_fifo_level0 <= 5'd0;
		soc_litedramcore_uart_rx_fifo_produce <= 4'd0;
		soc_litedramcore_uart_rx_fifo_consume <= 4'd0;
	end
	if (soc_litedramcore_timer_en_storage) begin
		if ((soc_litedramcore_timer_value == 1'd0)) begin
			soc_litedramcore_timer_value <= soc_litedramcore_timer_reload_storage;
		end else begin
			soc_litedramcore_timer_value <= (soc_litedramcore_timer_value - 1'd1);
		end
	end else begin
		soc_litedramcore_timer_value <= soc_litedramcore_timer_load_storage;
	end
	if (soc_litedramcore_timer_update_value_re) begin
		soc_litedramcore_timer_value_status <= soc_litedramcore_timer_value;
	end
	if (soc_litedramcore_timer_zero_clear) begin
		soc_litedramcore_timer_zero_pending <= 1'd0;
	end
	soc_litedramcore_timer_zero_old_trigger <= soc_litedramcore_timer_zero_trigger;
	if (((~soc_litedramcore_timer_zero_trigger) & soc_litedramcore_timer_zero_old_trigger)) begin
		soc_litedramcore_timer_zero_pending <= 1'd1;
	end
	vns_wb2csr_state <= vns_wb2csr_next_state;
	soc_a7ddrphy_dqs_oe_delayed <= ((soc_a7ddrphy_dqspattern0 | soc_a7ddrphy_dqs_oe) | soc_a7ddrphy_dqspattern1);
	soc_a7ddrphy_dq_oe_delayed <= ((soc_a7ddrphy_dqspattern0 | soc_a7ddrphy_dq_oe) | soc_a7ddrphy_dqspattern1);
	soc_a7ddrphy_rddata_en_last <= soc_a7ddrphy_rddata_en;
	soc_a7ddrphy_dfi_p0_rddata_valid <= (soc_a7ddrphy_rddata_en[7] | soc_a7ddrphy_wlevel_en_storage);
	soc_a7ddrphy_dfi_p1_rddata_valid <= (soc_a7ddrphy_rddata_en[7] | soc_a7ddrphy_wlevel_en_storage);
	soc_a7ddrphy_dfi_p2_rddata_valid <= (soc_a7ddrphy_rddata_en[7] | soc_a7ddrphy_wlevel_en_storage);
	soc_a7ddrphy_dfi_p3_rddata_valid <= (soc_a7ddrphy_rddata_en[7] | soc_a7ddrphy_wlevel_en_storage);
	soc_a7ddrphy_wrdata_en_last <= soc_a7ddrphy_wrdata_en;
	soc_a7ddrphy_dqspattern_o1 <= soc_a7ddrphy_dqspattern_o0;
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip0_value <= (soc_a7ddrphy_bitslip0_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip0_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip0_r <= {soc_a7ddrphy_bitslip0_i, soc_a7ddrphy_bitslip0_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip1_value <= (soc_a7ddrphy_bitslip1_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip1_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip1_r <= {soc_a7ddrphy_bitslip1_i, soc_a7ddrphy_bitslip1_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip2_value <= (soc_a7ddrphy_bitslip2_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip2_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip2_r <= {soc_a7ddrphy_bitslip2_i, soc_a7ddrphy_bitslip2_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip3_value <= (soc_a7ddrphy_bitslip3_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip3_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip3_r <= {soc_a7ddrphy_bitslip3_i, soc_a7ddrphy_bitslip3_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip4_value <= (soc_a7ddrphy_bitslip4_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip4_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip4_r <= {soc_a7ddrphy_bitslip4_i, soc_a7ddrphy_bitslip4_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip5_value <= (soc_a7ddrphy_bitslip5_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip5_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip5_r <= {soc_a7ddrphy_bitslip5_i, soc_a7ddrphy_bitslip5_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip6_value <= (soc_a7ddrphy_bitslip6_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip6_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip6_r <= {soc_a7ddrphy_bitslip6_i, soc_a7ddrphy_bitslip6_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip7_value <= (soc_a7ddrphy_bitslip7_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip7_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip7_r <= {soc_a7ddrphy_bitslip7_i, soc_a7ddrphy_bitslip7_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip8_value <= (soc_a7ddrphy_bitslip8_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip8_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip8_r <= {soc_a7ddrphy_bitslip8_i, soc_a7ddrphy_bitslip8_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip9_value <= (soc_a7ddrphy_bitslip9_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip9_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip9_r <= {soc_a7ddrphy_bitslip9_i, soc_a7ddrphy_bitslip9_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip10_value <= (soc_a7ddrphy_bitslip10_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip10_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip10_r <= {soc_a7ddrphy_bitslip10_i, soc_a7ddrphy_bitslip10_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip11_value <= (soc_a7ddrphy_bitslip11_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip11_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip11_r <= {soc_a7ddrphy_bitslip11_i, soc_a7ddrphy_bitslip11_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip12_value <= (soc_a7ddrphy_bitslip12_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip12_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip12_r <= {soc_a7ddrphy_bitslip12_i, soc_a7ddrphy_bitslip12_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip13_value <= (soc_a7ddrphy_bitslip13_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip13_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip13_r <= {soc_a7ddrphy_bitslip13_i, soc_a7ddrphy_bitslip13_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip14_value <= (soc_a7ddrphy_bitslip14_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip14_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip14_r <= {soc_a7ddrphy_bitslip14_i, soc_a7ddrphy_bitslip14_r[15:8]};
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_re)) begin
		soc_a7ddrphy_bitslip15_value <= (soc_a7ddrphy_bitslip15_value + 1'd1);
	end
	if ((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_bitslip_rst_re)) begin
		soc_a7ddrphy_bitslip15_value <= 1'd0;
	end
	soc_a7ddrphy_bitslip15_r <= {soc_a7ddrphy_bitslip15_i, soc_a7ddrphy_bitslip15_r[15:8]};
	if (soc_sdram_inti_p0_rddata_valid) begin
		soc_sdram_phaseinjector0_status <= soc_sdram_inti_p0_rddata;
	end
	if (soc_sdram_inti_p1_rddata_valid) begin
		soc_sdram_phaseinjector1_status <= soc_sdram_inti_p1_rddata;
	end
	if ((soc_sdram_timer_wait & (~soc_sdram_timer_done0))) begin
		soc_sdram_timer_count1 <= (soc_sdram_timer_count1 - 1'd1);
	end else begin
		soc_sdram_timer_count1 <= 10'd781;
	end
	soc_sdram_postponer_req_o <= 1'd0;
	if (soc_sdram_postponer_req_i) begin
		soc_sdram_postponer_count <= (soc_sdram_postponer_count - 1'd1);
		if ((soc_sdram_postponer_count == 1'd0)) begin
			soc_sdram_postponer_count <= 1'd0;
			soc_sdram_postponer_req_o <= 1'd1;
		end
	end
	if (soc_sdram_sequencer_start0) begin
		soc_sdram_sequencer_count <= 1'd0;
	end else begin
		if (soc_sdram_sequencer_done1) begin
			if ((soc_sdram_sequencer_count != 1'd0)) begin
				soc_sdram_sequencer_count <= (soc_sdram_sequencer_count - 1'd1);
			end
		end
	end
	soc_sdram_cmd_payload_a <= 1'd0;
	soc_sdram_cmd_payload_ba <= 1'd0;
	soc_sdram_cmd_payload_cas <= 1'd0;
	soc_sdram_cmd_payload_ras <= 1'd0;
	soc_sdram_cmd_payload_we <= 1'd0;
	soc_sdram_sequencer_done1 <= 1'd0;
	if ((soc_sdram_sequencer_start1 & (soc_sdram_sequencer_counter == 1'd0))) begin
		soc_sdram_cmd_payload_a <= 11'd1024;
		soc_sdram_cmd_payload_ba <= 1'd0;
		soc_sdram_cmd_payload_cas <= 1'd0;
		soc_sdram_cmd_payload_ras <= 1'd1;
		soc_sdram_cmd_payload_we <= 1'd1;
	end
	if ((soc_sdram_sequencer_counter == 2'd2)) begin
		soc_sdram_cmd_payload_a <= 1'd0;
		soc_sdram_cmd_payload_ba <= 1'd0;
		soc_sdram_cmd_payload_cas <= 1'd1;
		soc_sdram_cmd_payload_ras <= 1'd1;
		soc_sdram_cmd_payload_we <= 1'd0;
	end
	if ((soc_sdram_sequencer_counter == 5'd16)) begin
		soc_sdram_cmd_payload_a <= 1'd0;
		soc_sdram_cmd_payload_ba <= 1'd0;
		soc_sdram_cmd_payload_cas <= 1'd0;
		soc_sdram_cmd_payload_ras <= 1'd0;
		soc_sdram_cmd_payload_we <= 1'd0;
		soc_sdram_sequencer_done1 <= 1'd1;
	end
	if ((soc_sdram_sequencer_counter == 5'd16)) begin
		soc_sdram_sequencer_counter <= 1'd0;
	end else begin
		if ((soc_sdram_sequencer_counter != 1'd0)) begin
			soc_sdram_sequencer_counter <= (soc_sdram_sequencer_counter + 1'd1);
		end else begin
			if (soc_sdram_sequencer_start1) begin
				soc_sdram_sequencer_counter <= 1'd1;
			end
		end
	end
	vns_refresher_state <= vns_refresher_next_state;
	if (soc_sdram_bankmachine0_row_close) begin
		soc_sdram_bankmachine0_row_opened <= 1'd0;
	end else begin
		if (soc_sdram_bankmachine0_row_open) begin
			soc_sdram_bankmachine0_row_opened <= 1'd1;
			soc_sdram_bankmachine0_row <= soc_sdram_bankmachine0_cmd_buffer_source_payload_addr[20:8];
		end
	end
	if (((soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~soc_sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		soc_sdram_bankmachine0_cmd_buffer_lookahead_produce <= (soc_sdram_bankmachine0_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (soc_sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
		soc_sdram_bankmachine0_cmd_buffer_lookahead_consume <= (soc_sdram_bankmachine0_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_we & soc_sdram_bankmachine0_cmd_buffer_lookahead_syncfifo0_writable) & (~soc_sdram_bankmachine0_cmd_buffer_lookahead_replace))) begin
		if ((~soc_sdram_bankmachine0_cmd_buffer_lookahead_do_read)) begin
			soc_sdram_bankmachine0_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine0_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (soc_sdram_bankmachine0_cmd_buffer_lookahead_do_read) begin
			soc_sdram_bankmachine0_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine0_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~soc_sdram_bankmachine0_cmd_buffer_source_valid) | soc_sdram_bankmachine0_cmd_buffer_source_ready)) begin
		soc_sdram_bankmachine0_cmd_buffer_source_valid <= soc_sdram_bankmachine0_cmd_buffer_sink_valid;
		soc_sdram_bankmachine0_cmd_buffer_source_first <= soc_sdram_bankmachine0_cmd_buffer_sink_first;
		soc_sdram_bankmachine0_cmd_buffer_source_last <= soc_sdram_bankmachine0_cmd_buffer_sink_last;
		soc_sdram_bankmachine0_cmd_buffer_source_payload_we <= soc_sdram_bankmachine0_cmd_buffer_sink_payload_we;
		soc_sdram_bankmachine0_cmd_buffer_source_payload_addr <= soc_sdram_bankmachine0_cmd_buffer_sink_payload_addr;
	end
	if (soc_sdram_bankmachine0_twtpcon_valid) begin
		soc_sdram_bankmachine0_twtpcon_count <= 2'd3;
		if (1'd0) begin
			soc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
		end else begin
			soc_sdram_bankmachine0_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_bankmachine0_twtpcon_ready)) begin
			soc_sdram_bankmachine0_twtpcon_count <= (soc_sdram_bankmachine0_twtpcon_count - 1'd1);
			if ((soc_sdram_bankmachine0_twtpcon_count == 1'd1)) begin
				soc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
			end
		end
	end
	vns_bankmachine0_state <= vns_bankmachine0_next_state;
	if (soc_sdram_bankmachine1_row_close) begin
		soc_sdram_bankmachine1_row_opened <= 1'd0;
	end else begin
		if (soc_sdram_bankmachine1_row_open) begin
			soc_sdram_bankmachine1_row_opened <= 1'd1;
			soc_sdram_bankmachine1_row <= soc_sdram_bankmachine1_cmd_buffer_source_payload_addr[20:8];
		end
	end
	if (((soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~soc_sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		soc_sdram_bankmachine1_cmd_buffer_lookahead_produce <= (soc_sdram_bankmachine1_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (soc_sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
		soc_sdram_bankmachine1_cmd_buffer_lookahead_consume <= (soc_sdram_bankmachine1_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_we & soc_sdram_bankmachine1_cmd_buffer_lookahead_syncfifo1_writable) & (~soc_sdram_bankmachine1_cmd_buffer_lookahead_replace))) begin
		if ((~soc_sdram_bankmachine1_cmd_buffer_lookahead_do_read)) begin
			soc_sdram_bankmachine1_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine1_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (soc_sdram_bankmachine1_cmd_buffer_lookahead_do_read) begin
			soc_sdram_bankmachine1_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine1_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~soc_sdram_bankmachine1_cmd_buffer_source_valid) | soc_sdram_bankmachine1_cmd_buffer_source_ready)) begin
		soc_sdram_bankmachine1_cmd_buffer_source_valid <= soc_sdram_bankmachine1_cmd_buffer_sink_valid;
		soc_sdram_bankmachine1_cmd_buffer_source_first <= soc_sdram_bankmachine1_cmd_buffer_sink_first;
		soc_sdram_bankmachine1_cmd_buffer_source_last <= soc_sdram_bankmachine1_cmd_buffer_sink_last;
		soc_sdram_bankmachine1_cmd_buffer_source_payload_we <= soc_sdram_bankmachine1_cmd_buffer_sink_payload_we;
		soc_sdram_bankmachine1_cmd_buffer_source_payload_addr <= soc_sdram_bankmachine1_cmd_buffer_sink_payload_addr;
	end
	if (soc_sdram_bankmachine1_twtpcon_valid) begin
		soc_sdram_bankmachine1_twtpcon_count <= 2'd3;
		if (1'd0) begin
			soc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
		end else begin
			soc_sdram_bankmachine1_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_bankmachine1_twtpcon_ready)) begin
			soc_sdram_bankmachine1_twtpcon_count <= (soc_sdram_bankmachine1_twtpcon_count - 1'd1);
			if ((soc_sdram_bankmachine1_twtpcon_count == 1'd1)) begin
				soc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
			end
		end
	end
	vns_bankmachine1_state <= vns_bankmachine1_next_state;
	if (soc_sdram_bankmachine2_row_close) begin
		soc_sdram_bankmachine2_row_opened <= 1'd0;
	end else begin
		if (soc_sdram_bankmachine2_row_open) begin
			soc_sdram_bankmachine2_row_opened <= 1'd1;
			soc_sdram_bankmachine2_row <= soc_sdram_bankmachine2_cmd_buffer_source_payload_addr[20:8];
		end
	end
	if (((soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~soc_sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		soc_sdram_bankmachine2_cmd_buffer_lookahead_produce <= (soc_sdram_bankmachine2_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (soc_sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
		soc_sdram_bankmachine2_cmd_buffer_lookahead_consume <= (soc_sdram_bankmachine2_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_we & soc_sdram_bankmachine2_cmd_buffer_lookahead_syncfifo2_writable) & (~soc_sdram_bankmachine2_cmd_buffer_lookahead_replace))) begin
		if ((~soc_sdram_bankmachine2_cmd_buffer_lookahead_do_read)) begin
			soc_sdram_bankmachine2_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine2_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (soc_sdram_bankmachine2_cmd_buffer_lookahead_do_read) begin
			soc_sdram_bankmachine2_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine2_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~soc_sdram_bankmachine2_cmd_buffer_source_valid) | soc_sdram_bankmachine2_cmd_buffer_source_ready)) begin
		soc_sdram_bankmachine2_cmd_buffer_source_valid <= soc_sdram_bankmachine2_cmd_buffer_sink_valid;
		soc_sdram_bankmachine2_cmd_buffer_source_first <= soc_sdram_bankmachine2_cmd_buffer_sink_first;
		soc_sdram_bankmachine2_cmd_buffer_source_last <= soc_sdram_bankmachine2_cmd_buffer_sink_last;
		soc_sdram_bankmachine2_cmd_buffer_source_payload_we <= soc_sdram_bankmachine2_cmd_buffer_sink_payload_we;
		soc_sdram_bankmachine2_cmd_buffer_source_payload_addr <= soc_sdram_bankmachine2_cmd_buffer_sink_payload_addr;
	end
	if (soc_sdram_bankmachine2_twtpcon_valid) begin
		soc_sdram_bankmachine2_twtpcon_count <= 2'd3;
		if (1'd0) begin
			soc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
		end else begin
			soc_sdram_bankmachine2_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_bankmachine2_twtpcon_ready)) begin
			soc_sdram_bankmachine2_twtpcon_count <= (soc_sdram_bankmachine2_twtpcon_count - 1'd1);
			if ((soc_sdram_bankmachine2_twtpcon_count == 1'd1)) begin
				soc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
			end
		end
	end
	vns_bankmachine2_state <= vns_bankmachine2_next_state;
	if (soc_sdram_bankmachine3_row_close) begin
		soc_sdram_bankmachine3_row_opened <= 1'd0;
	end else begin
		if (soc_sdram_bankmachine3_row_open) begin
			soc_sdram_bankmachine3_row_opened <= 1'd1;
			soc_sdram_bankmachine3_row <= soc_sdram_bankmachine3_cmd_buffer_source_payload_addr[20:8];
		end
	end
	if (((soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~soc_sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		soc_sdram_bankmachine3_cmd_buffer_lookahead_produce <= (soc_sdram_bankmachine3_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (soc_sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
		soc_sdram_bankmachine3_cmd_buffer_lookahead_consume <= (soc_sdram_bankmachine3_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_we & soc_sdram_bankmachine3_cmd_buffer_lookahead_syncfifo3_writable) & (~soc_sdram_bankmachine3_cmd_buffer_lookahead_replace))) begin
		if ((~soc_sdram_bankmachine3_cmd_buffer_lookahead_do_read)) begin
			soc_sdram_bankmachine3_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine3_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (soc_sdram_bankmachine3_cmd_buffer_lookahead_do_read) begin
			soc_sdram_bankmachine3_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine3_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~soc_sdram_bankmachine3_cmd_buffer_source_valid) | soc_sdram_bankmachine3_cmd_buffer_source_ready)) begin
		soc_sdram_bankmachine3_cmd_buffer_source_valid <= soc_sdram_bankmachine3_cmd_buffer_sink_valid;
		soc_sdram_bankmachine3_cmd_buffer_source_first <= soc_sdram_bankmachine3_cmd_buffer_sink_first;
		soc_sdram_bankmachine3_cmd_buffer_source_last <= soc_sdram_bankmachine3_cmd_buffer_sink_last;
		soc_sdram_bankmachine3_cmd_buffer_source_payload_we <= soc_sdram_bankmachine3_cmd_buffer_sink_payload_we;
		soc_sdram_bankmachine3_cmd_buffer_source_payload_addr <= soc_sdram_bankmachine3_cmd_buffer_sink_payload_addr;
	end
	if (soc_sdram_bankmachine3_twtpcon_valid) begin
		soc_sdram_bankmachine3_twtpcon_count <= 2'd3;
		if (1'd0) begin
			soc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
		end else begin
			soc_sdram_bankmachine3_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_bankmachine3_twtpcon_ready)) begin
			soc_sdram_bankmachine3_twtpcon_count <= (soc_sdram_bankmachine3_twtpcon_count - 1'd1);
			if ((soc_sdram_bankmachine3_twtpcon_count == 1'd1)) begin
				soc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
			end
		end
	end
	vns_bankmachine3_state <= vns_bankmachine3_next_state;
	if (soc_sdram_bankmachine4_row_close) begin
		soc_sdram_bankmachine4_row_opened <= 1'd0;
	end else begin
		if (soc_sdram_bankmachine4_row_open) begin
			soc_sdram_bankmachine4_row_opened <= 1'd1;
			soc_sdram_bankmachine4_row <= soc_sdram_bankmachine4_cmd_buffer_source_payload_addr[20:8];
		end
	end
	if (((soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable) & (~soc_sdram_bankmachine4_cmd_buffer_lookahead_replace))) begin
		soc_sdram_bankmachine4_cmd_buffer_lookahead_produce <= (soc_sdram_bankmachine4_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (soc_sdram_bankmachine4_cmd_buffer_lookahead_do_read) begin
		soc_sdram_bankmachine4_cmd_buffer_lookahead_consume <= (soc_sdram_bankmachine4_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_we & soc_sdram_bankmachine4_cmd_buffer_lookahead_syncfifo4_writable) & (~soc_sdram_bankmachine4_cmd_buffer_lookahead_replace))) begin
		if ((~soc_sdram_bankmachine4_cmd_buffer_lookahead_do_read)) begin
			soc_sdram_bankmachine4_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine4_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (soc_sdram_bankmachine4_cmd_buffer_lookahead_do_read) begin
			soc_sdram_bankmachine4_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine4_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~soc_sdram_bankmachine4_cmd_buffer_source_valid) | soc_sdram_bankmachine4_cmd_buffer_source_ready)) begin
		soc_sdram_bankmachine4_cmd_buffer_source_valid <= soc_sdram_bankmachine4_cmd_buffer_sink_valid;
		soc_sdram_bankmachine4_cmd_buffer_source_first <= soc_sdram_bankmachine4_cmd_buffer_sink_first;
		soc_sdram_bankmachine4_cmd_buffer_source_last <= soc_sdram_bankmachine4_cmd_buffer_sink_last;
		soc_sdram_bankmachine4_cmd_buffer_source_payload_we <= soc_sdram_bankmachine4_cmd_buffer_sink_payload_we;
		soc_sdram_bankmachine4_cmd_buffer_source_payload_addr <= soc_sdram_bankmachine4_cmd_buffer_sink_payload_addr;
	end
	if (soc_sdram_bankmachine4_twtpcon_valid) begin
		soc_sdram_bankmachine4_twtpcon_count <= 2'd3;
		if (1'd0) begin
			soc_sdram_bankmachine4_twtpcon_ready <= 1'd1;
		end else begin
			soc_sdram_bankmachine4_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_bankmachine4_twtpcon_ready)) begin
			soc_sdram_bankmachine4_twtpcon_count <= (soc_sdram_bankmachine4_twtpcon_count - 1'd1);
			if ((soc_sdram_bankmachine4_twtpcon_count == 1'd1)) begin
				soc_sdram_bankmachine4_twtpcon_ready <= 1'd1;
			end
		end
	end
	vns_bankmachine4_state <= vns_bankmachine4_next_state;
	if (soc_sdram_bankmachine5_row_close) begin
		soc_sdram_bankmachine5_row_opened <= 1'd0;
	end else begin
		if (soc_sdram_bankmachine5_row_open) begin
			soc_sdram_bankmachine5_row_opened <= 1'd1;
			soc_sdram_bankmachine5_row <= soc_sdram_bankmachine5_cmd_buffer_source_payload_addr[20:8];
		end
	end
	if (((soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable) & (~soc_sdram_bankmachine5_cmd_buffer_lookahead_replace))) begin
		soc_sdram_bankmachine5_cmd_buffer_lookahead_produce <= (soc_sdram_bankmachine5_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (soc_sdram_bankmachine5_cmd_buffer_lookahead_do_read) begin
		soc_sdram_bankmachine5_cmd_buffer_lookahead_consume <= (soc_sdram_bankmachine5_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_we & soc_sdram_bankmachine5_cmd_buffer_lookahead_syncfifo5_writable) & (~soc_sdram_bankmachine5_cmd_buffer_lookahead_replace))) begin
		if ((~soc_sdram_bankmachine5_cmd_buffer_lookahead_do_read)) begin
			soc_sdram_bankmachine5_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine5_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (soc_sdram_bankmachine5_cmd_buffer_lookahead_do_read) begin
			soc_sdram_bankmachine5_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine5_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~soc_sdram_bankmachine5_cmd_buffer_source_valid) | soc_sdram_bankmachine5_cmd_buffer_source_ready)) begin
		soc_sdram_bankmachine5_cmd_buffer_source_valid <= soc_sdram_bankmachine5_cmd_buffer_sink_valid;
		soc_sdram_bankmachine5_cmd_buffer_source_first <= soc_sdram_bankmachine5_cmd_buffer_sink_first;
		soc_sdram_bankmachine5_cmd_buffer_source_last <= soc_sdram_bankmachine5_cmd_buffer_sink_last;
		soc_sdram_bankmachine5_cmd_buffer_source_payload_we <= soc_sdram_bankmachine5_cmd_buffer_sink_payload_we;
		soc_sdram_bankmachine5_cmd_buffer_source_payload_addr <= soc_sdram_bankmachine5_cmd_buffer_sink_payload_addr;
	end
	if (soc_sdram_bankmachine5_twtpcon_valid) begin
		soc_sdram_bankmachine5_twtpcon_count <= 2'd3;
		if (1'd0) begin
			soc_sdram_bankmachine5_twtpcon_ready <= 1'd1;
		end else begin
			soc_sdram_bankmachine5_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_bankmachine5_twtpcon_ready)) begin
			soc_sdram_bankmachine5_twtpcon_count <= (soc_sdram_bankmachine5_twtpcon_count - 1'd1);
			if ((soc_sdram_bankmachine5_twtpcon_count == 1'd1)) begin
				soc_sdram_bankmachine5_twtpcon_ready <= 1'd1;
			end
		end
	end
	vns_bankmachine5_state <= vns_bankmachine5_next_state;
	if (soc_sdram_bankmachine6_row_close) begin
		soc_sdram_bankmachine6_row_opened <= 1'd0;
	end else begin
		if (soc_sdram_bankmachine6_row_open) begin
			soc_sdram_bankmachine6_row_opened <= 1'd1;
			soc_sdram_bankmachine6_row <= soc_sdram_bankmachine6_cmd_buffer_source_payload_addr[20:8];
		end
	end
	if (((soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable) & (~soc_sdram_bankmachine6_cmd_buffer_lookahead_replace))) begin
		soc_sdram_bankmachine6_cmd_buffer_lookahead_produce <= (soc_sdram_bankmachine6_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (soc_sdram_bankmachine6_cmd_buffer_lookahead_do_read) begin
		soc_sdram_bankmachine6_cmd_buffer_lookahead_consume <= (soc_sdram_bankmachine6_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_we & soc_sdram_bankmachine6_cmd_buffer_lookahead_syncfifo6_writable) & (~soc_sdram_bankmachine6_cmd_buffer_lookahead_replace))) begin
		if ((~soc_sdram_bankmachine6_cmd_buffer_lookahead_do_read)) begin
			soc_sdram_bankmachine6_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine6_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (soc_sdram_bankmachine6_cmd_buffer_lookahead_do_read) begin
			soc_sdram_bankmachine6_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine6_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~soc_sdram_bankmachine6_cmd_buffer_source_valid) | soc_sdram_bankmachine6_cmd_buffer_source_ready)) begin
		soc_sdram_bankmachine6_cmd_buffer_source_valid <= soc_sdram_bankmachine6_cmd_buffer_sink_valid;
		soc_sdram_bankmachine6_cmd_buffer_source_first <= soc_sdram_bankmachine6_cmd_buffer_sink_first;
		soc_sdram_bankmachine6_cmd_buffer_source_last <= soc_sdram_bankmachine6_cmd_buffer_sink_last;
		soc_sdram_bankmachine6_cmd_buffer_source_payload_we <= soc_sdram_bankmachine6_cmd_buffer_sink_payload_we;
		soc_sdram_bankmachine6_cmd_buffer_source_payload_addr <= soc_sdram_bankmachine6_cmd_buffer_sink_payload_addr;
	end
	if (soc_sdram_bankmachine6_twtpcon_valid) begin
		soc_sdram_bankmachine6_twtpcon_count <= 2'd3;
		if (1'd0) begin
			soc_sdram_bankmachine6_twtpcon_ready <= 1'd1;
		end else begin
			soc_sdram_bankmachine6_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_bankmachine6_twtpcon_ready)) begin
			soc_sdram_bankmachine6_twtpcon_count <= (soc_sdram_bankmachine6_twtpcon_count - 1'd1);
			if ((soc_sdram_bankmachine6_twtpcon_count == 1'd1)) begin
				soc_sdram_bankmachine6_twtpcon_ready <= 1'd1;
			end
		end
	end
	vns_bankmachine6_state <= vns_bankmachine6_next_state;
	if (soc_sdram_bankmachine7_row_close) begin
		soc_sdram_bankmachine7_row_opened <= 1'd0;
	end else begin
		if (soc_sdram_bankmachine7_row_open) begin
			soc_sdram_bankmachine7_row_opened <= 1'd1;
			soc_sdram_bankmachine7_row <= soc_sdram_bankmachine7_cmd_buffer_source_payload_addr[20:8];
		end
	end
	if (((soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable) & (~soc_sdram_bankmachine7_cmd_buffer_lookahead_replace))) begin
		soc_sdram_bankmachine7_cmd_buffer_lookahead_produce <= (soc_sdram_bankmachine7_cmd_buffer_lookahead_produce + 1'd1);
	end
	if (soc_sdram_bankmachine7_cmd_buffer_lookahead_do_read) begin
		soc_sdram_bankmachine7_cmd_buffer_lookahead_consume <= (soc_sdram_bankmachine7_cmd_buffer_lookahead_consume + 1'd1);
	end
	if (((soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_we & soc_sdram_bankmachine7_cmd_buffer_lookahead_syncfifo7_writable) & (~soc_sdram_bankmachine7_cmd_buffer_lookahead_replace))) begin
		if ((~soc_sdram_bankmachine7_cmd_buffer_lookahead_do_read)) begin
			soc_sdram_bankmachine7_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine7_cmd_buffer_lookahead_level + 1'd1);
		end
	end else begin
		if (soc_sdram_bankmachine7_cmd_buffer_lookahead_do_read) begin
			soc_sdram_bankmachine7_cmd_buffer_lookahead_level <= (soc_sdram_bankmachine7_cmd_buffer_lookahead_level - 1'd1);
		end
	end
	if (((~soc_sdram_bankmachine7_cmd_buffer_source_valid) | soc_sdram_bankmachine7_cmd_buffer_source_ready)) begin
		soc_sdram_bankmachine7_cmd_buffer_source_valid <= soc_sdram_bankmachine7_cmd_buffer_sink_valid;
		soc_sdram_bankmachine7_cmd_buffer_source_first <= soc_sdram_bankmachine7_cmd_buffer_sink_first;
		soc_sdram_bankmachine7_cmd_buffer_source_last <= soc_sdram_bankmachine7_cmd_buffer_sink_last;
		soc_sdram_bankmachine7_cmd_buffer_source_payload_we <= soc_sdram_bankmachine7_cmd_buffer_sink_payload_we;
		soc_sdram_bankmachine7_cmd_buffer_source_payload_addr <= soc_sdram_bankmachine7_cmd_buffer_sink_payload_addr;
	end
	if (soc_sdram_bankmachine7_twtpcon_valid) begin
		soc_sdram_bankmachine7_twtpcon_count <= 2'd3;
		if (1'd0) begin
			soc_sdram_bankmachine7_twtpcon_ready <= 1'd1;
		end else begin
			soc_sdram_bankmachine7_twtpcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_bankmachine7_twtpcon_ready)) begin
			soc_sdram_bankmachine7_twtpcon_count <= (soc_sdram_bankmachine7_twtpcon_count - 1'd1);
			if ((soc_sdram_bankmachine7_twtpcon_count == 1'd1)) begin
				soc_sdram_bankmachine7_twtpcon_ready <= 1'd1;
			end
		end
	end
	vns_bankmachine7_state <= vns_bankmachine7_next_state;
	if ((~soc_sdram_en0)) begin
		soc_sdram_time0 <= 5'd31;
	end else begin
		if ((~soc_sdram_max_time0)) begin
			soc_sdram_time0 <= (soc_sdram_time0 - 1'd1);
		end
	end
	if ((~soc_sdram_en1)) begin
		soc_sdram_time1 <= 4'd15;
	end else begin
		if ((~soc_sdram_max_time1)) begin
			soc_sdram_time1 <= (soc_sdram_time1 - 1'd1);
		end
	end
	if (soc_sdram_choose_cmd_ce) begin
		case (soc_sdram_choose_cmd_grant)
			1'd0: begin
				if (soc_sdram_choose_cmd_request[1]) begin
					soc_sdram_choose_cmd_grant <= 1'd1;
				end else begin
					if (soc_sdram_choose_cmd_request[2]) begin
						soc_sdram_choose_cmd_grant <= 2'd2;
					end else begin
						if (soc_sdram_choose_cmd_request[3]) begin
							soc_sdram_choose_cmd_grant <= 2'd3;
						end else begin
							if (soc_sdram_choose_cmd_request[4]) begin
								soc_sdram_choose_cmd_grant <= 3'd4;
							end else begin
								if (soc_sdram_choose_cmd_request[5]) begin
									soc_sdram_choose_cmd_grant <= 3'd5;
								end else begin
									if (soc_sdram_choose_cmd_request[6]) begin
										soc_sdram_choose_cmd_grant <= 3'd6;
									end else begin
										if (soc_sdram_choose_cmd_request[7]) begin
											soc_sdram_choose_cmd_grant <= 3'd7;
										end
									end
								end
							end
						end
					end
				end
			end
			1'd1: begin
				if (soc_sdram_choose_cmd_request[2]) begin
					soc_sdram_choose_cmd_grant <= 2'd2;
				end else begin
					if (soc_sdram_choose_cmd_request[3]) begin
						soc_sdram_choose_cmd_grant <= 2'd3;
					end else begin
						if (soc_sdram_choose_cmd_request[4]) begin
							soc_sdram_choose_cmd_grant <= 3'd4;
						end else begin
							if (soc_sdram_choose_cmd_request[5]) begin
								soc_sdram_choose_cmd_grant <= 3'd5;
							end else begin
								if (soc_sdram_choose_cmd_request[6]) begin
									soc_sdram_choose_cmd_grant <= 3'd6;
								end else begin
									if (soc_sdram_choose_cmd_request[7]) begin
										soc_sdram_choose_cmd_grant <= 3'd7;
									end else begin
										if (soc_sdram_choose_cmd_request[0]) begin
											soc_sdram_choose_cmd_grant <= 1'd0;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd2: begin
				if (soc_sdram_choose_cmd_request[3]) begin
					soc_sdram_choose_cmd_grant <= 2'd3;
				end else begin
					if (soc_sdram_choose_cmd_request[4]) begin
						soc_sdram_choose_cmd_grant <= 3'd4;
					end else begin
						if (soc_sdram_choose_cmd_request[5]) begin
							soc_sdram_choose_cmd_grant <= 3'd5;
						end else begin
							if (soc_sdram_choose_cmd_request[6]) begin
								soc_sdram_choose_cmd_grant <= 3'd6;
							end else begin
								if (soc_sdram_choose_cmd_request[7]) begin
									soc_sdram_choose_cmd_grant <= 3'd7;
								end else begin
									if (soc_sdram_choose_cmd_request[0]) begin
										soc_sdram_choose_cmd_grant <= 1'd0;
									end else begin
										if (soc_sdram_choose_cmd_request[1]) begin
											soc_sdram_choose_cmd_grant <= 1'd1;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd3: begin
				if (soc_sdram_choose_cmd_request[4]) begin
					soc_sdram_choose_cmd_grant <= 3'd4;
				end else begin
					if (soc_sdram_choose_cmd_request[5]) begin
						soc_sdram_choose_cmd_grant <= 3'd5;
					end else begin
						if (soc_sdram_choose_cmd_request[6]) begin
							soc_sdram_choose_cmd_grant <= 3'd6;
						end else begin
							if (soc_sdram_choose_cmd_request[7]) begin
								soc_sdram_choose_cmd_grant <= 3'd7;
							end else begin
								if (soc_sdram_choose_cmd_request[0]) begin
									soc_sdram_choose_cmd_grant <= 1'd0;
								end else begin
									if (soc_sdram_choose_cmd_request[1]) begin
										soc_sdram_choose_cmd_grant <= 1'd1;
									end else begin
										if (soc_sdram_choose_cmd_request[2]) begin
											soc_sdram_choose_cmd_grant <= 2'd2;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd4: begin
				if (soc_sdram_choose_cmd_request[5]) begin
					soc_sdram_choose_cmd_grant <= 3'd5;
				end else begin
					if (soc_sdram_choose_cmd_request[6]) begin
						soc_sdram_choose_cmd_grant <= 3'd6;
					end else begin
						if (soc_sdram_choose_cmd_request[7]) begin
							soc_sdram_choose_cmd_grant <= 3'd7;
						end else begin
							if (soc_sdram_choose_cmd_request[0]) begin
								soc_sdram_choose_cmd_grant <= 1'd0;
							end else begin
								if (soc_sdram_choose_cmd_request[1]) begin
									soc_sdram_choose_cmd_grant <= 1'd1;
								end else begin
									if (soc_sdram_choose_cmd_request[2]) begin
										soc_sdram_choose_cmd_grant <= 2'd2;
									end else begin
										if (soc_sdram_choose_cmd_request[3]) begin
											soc_sdram_choose_cmd_grant <= 2'd3;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd5: begin
				if (soc_sdram_choose_cmd_request[6]) begin
					soc_sdram_choose_cmd_grant <= 3'd6;
				end else begin
					if (soc_sdram_choose_cmd_request[7]) begin
						soc_sdram_choose_cmd_grant <= 3'd7;
					end else begin
						if (soc_sdram_choose_cmd_request[0]) begin
							soc_sdram_choose_cmd_grant <= 1'd0;
						end else begin
							if (soc_sdram_choose_cmd_request[1]) begin
								soc_sdram_choose_cmd_grant <= 1'd1;
							end else begin
								if (soc_sdram_choose_cmd_request[2]) begin
									soc_sdram_choose_cmd_grant <= 2'd2;
								end else begin
									if (soc_sdram_choose_cmd_request[3]) begin
										soc_sdram_choose_cmd_grant <= 2'd3;
									end else begin
										if (soc_sdram_choose_cmd_request[4]) begin
											soc_sdram_choose_cmd_grant <= 3'd4;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd6: begin
				if (soc_sdram_choose_cmd_request[7]) begin
					soc_sdram_choose_cmd_grant <= 3'd7;
				end else begin
					if (soc_sdram_choose_cmd_request[0]) begin
						soc_sdram_choose_cmd_grant <= 1'd0;
					end else begin
						if (soc_sdram_choose_cmd_request[1]) begin
							soc_sdram_choose_cmd_grant <= 1'd1;
						end else begin
							if (soc_sdram_choose_cmd_request[2]) begin
								soc_sdram_choose_cmd_grant <= 2'd2;
							end else begin
								if (soc_sdram_choose_cmd_request[3]) begin
									soc_sdram_choose_cmd_grant <= 2'd3;
								end else begin
									if (soc_sdram_choose_cmd_request[4]) begin
										soc_sdram_choose_cmd_grant <= 3'd4;
									end else begin
										if (soc_sdram_choose_cmd_request[5]) begin
											soc_sdram_choose_cmd_grant <= 3'd5;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd7: begin
				if (soc_sdram_choose_cmd_request[0]) begin
					soc_sdram_choose_cmd_grant <= 1'd0;
				end else begin
					if (soc_sdram_choose_cmd_request[1]) begin
						soc_sdram_choose_cmd_grant <= 1'd1;
					end else begin
						if (soc_sdram_choose_cmd_request[2]) begin
							soc_sdram_choose_cmd_grant <= 2'd2;
						end else begin
							if (soc_sdram_choose_cmd_request[3]) begin
								soc_sdram_choose_cmd_grant <= 2'd3;
							end else begin
								if (soc_sdram_choose_cmd_request[4]) begin
									soc_sdram_choose_cmd_grant <= 3'd4;
								end else begin
									if (soc_sdram_choose_cmd_request[5]) begin
										soc_sdram_choose_cmd_grant <= 3'd5;
									end else begin
										if (soc_sdram_choose_cmd_request[6]) begin
											soc_sdram_choose_cmd_grant <= 3'd6;
										end
									end
								end
							end
						end
					end
				end
			end
		endcase
	end
	if (soc_sdram_choose_req_ce) begin
		case (soc_sdram_choose_req_grant)
			1'd0: begin
				if (soc_sdram_choose_req_request[1]) begin
					soc_sdram_choose_req_grant <= 1'd1;
				end else begin
					if (soc_sdram_choose_req_request[2]) begin
						soc_sdram_choose_req_grant <= 2'd2;
					end else begin
						if (soc_sdram_choose_req_request[3]) begin
							soc_sdram_choose_req_grant <= 2'd3;
						end else begin
							if (soc_sdram_choose_req_request[4]) begin
								soc_sdram_choose_req_grant <= 3'd4;
							end else begin
								if (soc_sdram_choose_req_request[5]) begin
									soc_sdram_choose_req_grant <= 3'd5;
								end else begin
									if (soc_sdram_choose_req_request[6]) begin
										soc_sdram_choose_req_grant <= 3'd6;
									end else begin
										if (soc_sdram_choose_req_request[7]) begin
											soc_sdram_choose_req_grant <= 3'd7;
										end
									end
								end
							end
						end
					end
				end
			end
			1'd1: begin
				if (soc_sdram_choose_req_request[2]) begin
					soc_sdram_choose_req_grant <= 2'd2;
				end else begin
					if (soc_sdram_choose_req_request[3]) begin
						soc_sdram_choose_req_grant <= 2'd3;
					end else begin
						if (soc_sdram_choose_req_request[4]) begin
							soc_sdram_choose_req_grant <= 3'd4;
						end else begin
							if (soc_sdram_choose_req_request[5]) begin
								soc_sdram_choose_req_grant <= 3'd5;
							end else begin
								if (soc_sdram_choose_req_request[6]) begin
									soc_sdram_choose_req_grant <= 3'd6;
								end else begin
									if (soc_sdram_choose_req_request[7]) begin
										soc_sdram_choose_req_grant <= 3'd7;
									end else begin
										if (soc_sdram_choose_req_request[0]) begin
											soc_sdram_choose_req_grant <= 1'd0;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd2: begin
				if (soc_sdram_choose_req_request[3]) begin
					soc_sdram_choose_req_grant <= 2'd3;
				end else begin
					if (soc_sdram_choose_req_request[4]) begin
						soc_sdram_choose_req_grant <= 3'd4;
					end else begin
						if (soc_sdram_choose_req_request[5]) begin
							soc_sdram_choose_req_grant <= 3'd5;
						end else begin
							if (soc_sdram_choose_req_request[6]) begin
								soc_sdram_choose_req_grant <= 3'd6;
							end else begin
								if (soc_sdram_choose_req_request[7]) begin
									soc_sdram_choose_req_grant <= 3'd7;
								end else begin
									if (soc_sdram_choose_req_request[0]) begin
										soc_sdram_choose_req_grant <= 1'd0;
									end else begin
										if (soc_sdram_choose_req_request[1]) begin
											soc_sdram_choose_req_grant <= 1'd1;
										end
									end
								end
							end
						end
					end
				end
			end
			2'd3: begin
				if (soc_sdram_choose_req_request[4]) begin
					soc_sdram_choose_req_grant <= 3'd4;
				end else begin
					if (soc_sdram_choose_req_request[5]) begin
						soc_sdram_choose_req_grant <= 3'd5;
					end else begin
						if (soc_sdram_choose_req_request[6]) begin
							soc_sdram_choose_req_grant <= 3'd6;
						end else begin
							if (soc_sdram_choose_req_request[7]) begin
								soc_sdram_choose_req_grant <= 3'd7;
							end else begin
								if (soc_sdram_choose_req_request[0]) begin
									soc_sdram_choose_req_grant <= 1'd0;
								end else begin
									if (soc_sdram_choose_req_request[1]) begin
										soc_sdram_choose_req_grant <= 1'd1;
									end else begin
										if (soc_sdram_choose_req_request[2]) begin
											soc_sdram_choose_req_grant <= 2'd2;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd4: begin
				if (soc_sdram_choose_req_request[5]) begin
					soc_sdram_choose_req_grant <= 3'd5;
				end else begin
					if (soc_sdram_choose_req_request[6]) begin
						soc_sdram_choose_req_grant <= 3'd6;
					end else begin
						if (soc_sdram_choose_req_request[7]) begin
							soc_sdram_choose_req_grant <= 3'd7;
						end else begin
							if (soc_sdram_choose_req_request[0]) begin
								soc_sdram_choose_req_grant <= 1'd0;
							end else begin
								if (soc_sdram_choose_req_request[1]) begin
									soc_sdram_choose_req_grant <= 1'd1;
								end else begin
									if (soc_sdram_choose_req_request[2]) begin
										soc_sdram_choose_req_grant <= 2'd2;
									end else begin
										if (soc_sdram_choose_req_request[3]) begin
											soc_sdram_choose_req_grant <= 2'd3;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd5: begin
				if (soc_sdram_choose_req_request[6]) begin
					soc_sdram_choose_req_grant <= 3'd6;
				end else begin
					if (soc_sdram_choose_req_request[7]) begin
						soc_sdram_choose_req_grant <= 3'd7;
					end else begin
						if (soc_sdram_choose_req_request[0]) begin
							soc_sdram_choose_req_grant <= 1'd0;
						end else begin
							if (soc_sdram_choose_req_request[1]) begin
								soc_sdram_choose_req_grant <= 1'd1;
							end else begin
								if (soc_sdram_choose_req_request[2]) begin
									soc_sdram_choose_req_grant <= 2'd2;
								end else begin
									if (soc_sdram_choose_req_request[3]) begin
										soc_sdram_choose_req_grant <= 2'd3;
									end else begin
										if (soc_sdram_choose_req_request[4]) begin
											soc_sdram_choose_req_grant <= 3'd4;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd6: begin
				if (soc_sdram_choose_req_request[7]) begin
					soc_sdram_choose_req_grant <= 3'd7;
				end else begin
					if (soc_sdram_choose_req_request[0]) begin
						soc_sdram_choose_req_grant <= 1'd0;
					end else begin
						if (soc_sdram_choose_req_request[1]) begin
							soc_sdram_choose_req_grant <= 1'd1;
						end else begin
							if (soc_sdram_choose_req_request[2]) begin
								soc_sdram_choose_req_grant <= 2'd2;
							end else begin
								if (soc_sdram_choose_req_request[3]) begin
									soc_sdram_choose_req_grant <= 2'd3;
								end else begin
									if (soc_sdram_choose_req_request[4]) begin
										soc_sdram_choose_req_grant <= 3'd4;
									end else begin
										if (soc_sdram_choose_req_request[5]) begin
											soc_sdram_choose_req_grant <= 3'd5;
										end
									end
								end
							end
						end
					end
				end
			end
			3'd7: begin
				if (soc_sdram_choose_req_request[0]) begin
					soc_sdram_choose_req_grant <= 1'd0;
				end else begin
					if (soc_sdram_choose_req_request[1]) begin
						soc_sdram_choose_req_grant <= 1'd1;
					end else begin
						if (soc_sdram_choose_req_request[2]) begin
							soc_sdram_choose_req_grant <= 2'd2;
						end else begin
							if (soc_sdram_choose_req_request[3]) begin
								soc_sdram_choose_req_grant <= 2'd3;
							end else begin
								if (soc_sdram_choose_req_request[4]) begin
									soc_sdram_choose_req_grant <= 3'd4;
								end else begin
									if (soc_sdram_choose_req_request[5]) begin
										soc_sdram_choose_req_grant <= 3'd5;
									end else begin
										if (soc_sdram_choose_req_request[6]) begin
											soc_sdram_choose_req_grant <= 3'd6;
										end
									end
								end
							end
						end
					end
				end
			end
		endcase
	end
	soc_sdram_dfi_p0_cs_n <= 1'd0;
	soc_sdram_dfi_p0_bank <= vns_array_muxed0;
	soc_sdram_dfi_p0_address <= vns_array_muxed1;
	soc_sdram_dfi_p0_cas_n <= (~vns_array_muxed2);
	soc_sdram_dfi_p0_ras_n <= (~vns_array_muxed3);
	soc_sdram_dfi_p0_we_n <= (~vns_array_muxed4);
	soc_sdram_dfi_p0_rddata_en <= vns_array_muxed5;
	soc_sdram_dfi_p0_wrdata_en <= vns_array_muxed6;
	soc_sdram_dfi_p1_cs_n <= 1'd0;
	soc_sdram_dfi_p1_bank <= vns_array_muxed7;
	soc_sdram_dfi_p1_address <= vns_array_muxed8;
	soc_sdram_dfi_p1_cas_n <= (~vns_array_muxed9);
	soc_sdram_dfi_p1_ras_n <= (~vns_array_muxed10);
	soc_sdram_dfi_p1_we_n <= (~vns_array_muxed11);
	soc_sdram_dfi_p1_rddata_en <= vns_array_muxed12;
	soc_sdram_dfi_p1_wrdata_en <= vns_array_muxed13;
	if (soc_sdram_tccdcon_valid) begin
		soc_sdram_tccdcon_count <= 1'd0;
		if (1'd1) begin
			soc_sdram_tccdcon_ready <= 1'd1;
		end else begin
			soc_sdram_tccdcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_tccdcon_ready)) begin
			soc_sdram_tccdcon_count <= (soc_sdram_tccdcon_count - 1'd1);
			if ((soc_sdram_tccdcon_count == 1'd1)) begin
				soc_sdram_tccdcon_ready <= 1'd1;
			end
		end
	end
	if (soc_sdram_twtrcon_valid) begin
		soc_sdram_twtrcon_count <= 2'd3;
		if (1'd0) begin
			soc_sdram_twtrcon_ready <= 1'd1;
		end else begin
			soc_sdram_twtrcon_ready <= 1'd0;
		end
	end else begin
		if ((~soc_sdram_twtrcon_ready)) begin
			soc_sdram_twtrcon_count <= (soc_sdram_twtrcon_count - 1'd1);
			if ((soc_sdram_twtrcon_count == 1'd1)) begin
				soc_sdram_twtrcon_ready <= 1'd1;
			end
		end
	end
	vns_multiplexer_state <= vns_multiplexer_next_state;
	vns_new_master_wdata_ready0 <= ((((((((1'd0 | ((vns_roundrobin0_grant == 1'd0) & soc_sdram_interface_bank0_wdata_ready)) | ((vns_roundrobin1_grant == 1'd0) & soc_sdram_interface_bank1_wdata_ready)) | ((vns_roundrobin2_grant == 1'd0) & soc_sdram_interface_bank2_wdata_ready)) | ((vns_roundrobin3_grant == 1'd0) & soc_sdram_interface_bank3_wdata_ready)) | ((vns_roundrobin4_grant == 1'd0) & soc_sdram_interface_bank4_wdata_ready)) | ((vns_roundrobin5_grant == 1'd0) & soc_sdram_interface_bank5_wdata_ready)) | ((vns_roundrobin6_grant == 1'd0) & soc_sdram_interface_bank6_wdata_ready)) | ((vns_roundrobin7_grant == 1'd0) & soc_sdram_interface_bank7_wdata_ready));
	vns_new_master_wdata_ready1 <= vns_new_master_wdata_ready0;
	vns_new_master_wdata_ready2 <= ((((((((1'd0 | ((vns_roundrobin0_grant == 1'd1) & soc_sdram_interface_bank0_wdata_ready)) | ((vns_roundrobin1_grant == 1'd1) & soc_sdram_interface_bank1_wdata_ready)) | ((vns_roundrobin2_grant == 1'd1) & soc_sdram_interface_bank2_wdata_ready)) | ((vns_roundrobin3_grant == 1'd1) & soc_sdram_interface_bank3_wdata_ready)) | ((vns_roundrobin4_grant == 1'd1) & soc_sdram_interface_bank4_wdata_ready)) | ((vns_roundrobin5_grant == 1'd1) & soc_sdram_interface_bank5_wdata_ready)) | ((vns_roundrobin6_grant == 1'd1) & soc_sdram_interface_bank6_wdata_ready)) | ((vns_roundrobin7_grant == 1'd1) & soc_sdram_interface_bank7_wdata_ready));
	vns_new_master_wdata_ready3 <= vns_new_master_wdata_ready2;
	vns_new_master_rdata_valid0 <= ((((((((1'd0 | ((vns_roundrobin0_grant == 1'd0) & soc_sdram_interface_bank0_rdata_valid)) | ((vns_roundrobin1_grant == 1'd0) & soc_sdram_interface_bank1_rdata_valid)) | ((vns_roundrobin2_grant == 1'd0) & soc_sdram_interface_bank2_rdata_valid)) | ((vns_roundrobin3_grant == 1'd0) & soc_sdram_interface_bank3_rdata_valid)) | ((vns_roundrobin4_grant == 1'd0) & soc_sdram_interface_bank4_rdata_valid)) | ((vns_roundrobin5_grant == 1'd0) & soc_sdram_interface_bank5_rdata_valid)) | ((vns_roundrobin6_grant == 1'd0) & soc_sdram_interface_bank6_rdata_valid)) | ((vns_roundrobin7_grant == 1'd0) & soc_sdram_interface_bank7_rdata_valid));
	vns_new_master_rdata_valid1 <= vns_new_master_rdata_valid0;
	vns_new_master_rdata_valid2 <= vns_new_master_rdata_valid1;
	vns_new_master_rdata_valid3 <= vns_new_master_rdata_valid2;
	vns_new_master_rdata_valid4 <= vns_new_master_rdata_valid3;
	vns_new_master_rdata_valid5 <= vns_new_master_rdata_valid4;
	vns_new_master_rdata_valid6 <= vns_new_master_rdata_valid5;
	vns_new_master_rdata_valid7 <= vns_new_master_rdata_valid6;
	vns_new_master_rdata_valid8 <= vns_new_master_rdata_valid7;
	vns_new_master_rdata_valid9 <= ((((((((1'd0 | ((vns_roundrobin0_grant == 1'd1) & soc_sdram_interface_bank0_rdata_valid)) | ((vns_roundrobin1_grant == 1'd1) & soc_sdram_interface_bank1_rdata_valid)) | ((vns_roundrobin2_grant == 1'd1) & soc_sdram_interface_bank2_rdata_valid)) | ((vns_roundrobin3_grant == 1'd1) & soc_sdram_interface_bank3_rdata_valid)) | ((vns_roundrobin4_grant == 1'd1) & soc_sdram_interface_bank4_rdata_valid)) | ((vns_roundrobin5_grant == 1'd1) & soc_sdram_interface_bank5_rdata_valid)) | ((vns_roundrobin6_grant == 1'd1) & soc_sdram_interface_bank6_rdata_valid)) | ((vns_roundrobin7_grant == 1'd1) & soc_sdram_interface_bank7_rdata_valid));
	vns_new_master_rdata_valid10 <= vns_new_master_rdata_valid9;
	vns_new_master_rdata_valid11 <= vns_new_master_rdata_valid10;
	vns_new_master_rdata_valid12 <= vns_new_master_rdata_valid11;
	vns_new_master_rdata_valid13 <= vns_new_master_rdata_valid12;
	vns_new_master_rdata_valid14 <= vns_new_master_rdata_valid13;
	vns_new_master_rdata_valid15 <= vns_new_master_rdata_valid14;
	vns_new_master_rdata_valid16 <= vns_new_master_rdata_valid15;
	vns_new_master_rdata_valid17 <= vns_new_master_rdata_valid16;
	if (vns_roundrobin0_ce) begin
		case (vns_roundrobin0_grant)
			1'd0: begin
				if (vns_roundrobin0_request[1]) begin
					vns_roundrobin0_grant <= 1'd1;
				end
			end
			1'd1: begin
				if (vns_roundrobin0_request[0]) begin
					vns_roundrobin0_grant <= 1'd0;
				end
			end
		endcase
	end
	if (vns_roundrobin1_ce) begin
		case (vns_roundrobin1_grant)
			1'd0: begin
				if (vns_roundrobin1_request[1]) begin
					vns_roundrobin1_grant <= 1'd1;
				end
			end
			1'd1: begin
				if (vns_roundrobin1_request[0]) begin
					vns_roundrobin1_grant <= 1'd0;
				end
			end
		endcase
	end
	if (vns_roundrobin2_ce) begin
		case (vns_roundrobin2_grant)
			1'd0: begin
				if (vns_roundrobin2_request[1]) begin
					vns_roundrobin2_grant <= 1'd1;
				end
			end
			1'd1: begin
				if (vns_roundrobin2_request[0]) begin
					vns_roundrobin2_grant <= 1'd0;
				end
			end
		endcase
	end
	if (vns_roundrobin3_ce) begin
		case (vns_roundrobin3_grant)
			1'd0: begin
				if (vns_roundrobin3_request[1]) begin
					vns_roundrobin3_grant <= 1'd1;
				end
			end
			1'd1: begin
				if (vns_roundrobin3_request[0]) begin
					vns_roundrobin3_grant <= 1'd0;
				end
			end
		endcase
	end
	if (vns_roundrobin4_ce) begin
		case (vns_roundrobin4_grant)
			1'd0: begin
				if (vns_roundrobin4_request[1]) begin
					vns_roundrobin4_grant <= 1'd1;
				end
			end
			1'd1: begin
				if (vns_roundrobin4_request[0]) begin
					vns_roundrobin4_grant <= 1'd0;
				end
			end
		endcase
	end
	if (vns_roundrobin5_ce) begin
		case (vns_roundrobin5_grant)
			1'd0: begin
				if (vns_roundrobin5_request[1]) begin
					vns_roundrobin5_grant <= 1'd1;
				end
			end
			1'd1: begin
				if (vns_roundrobin5_request[0]) begin
					vns_roundrobin5_grant <= 1'd0;
				end
			end
		endcase
	end
	if (vns_roundrobin6_ce) begin
		case (vns_roundrobin6_grant)
			1'd0: begin
				if (vns_roundrobin6_request[1]) begin
					vns_roundrobin6_grant <= 1'd1;
				end
			end
			1'd1: begin
				if (vns_roundrobin6_request[0]) begin
					vns_roundrobin6_grant <= 1'd0;
				end
			end
		endcase
	end
	if (vns_roundrobin7_ce) begin
		case (vns_roundrobin7_grant)
			1'd0: begin
				if (vns_roundrobin7_request[1]) begin
					vns_roundrobin7_grant <= 1'd1;
				end
			end
			1'd1: begin
				if (vns_roundrobin7_request[0]) begin
					vns_roundrobin7_grant <= 1'd0;
				end
			end
		endcase
	end
	if (soc_counter_reset) begin
		soc_counter <= 1'd0;
	end else begin
		if (soc_counter_ce) begin
			soc_counter <= (soc_counter + 1'd1);
		end
	end
	if (soc_address_ce) begin
		soc_address_q <= soc_address_d;
	end
	if (soc_address_reset) begin
		soc_address_q <= 30'd0;
	end
	if (soc_need_refill_ce) begin
		soc_need_refill_q <= soc_need_refill_d;
	end
	if (soc_need_refill_reset) begin
		soc_need_refill_q <= 1'd1;
	end
	vns_converter_state <= vns_converter_next_state;
	if (soc_cached_datas_ce0) begin
		soc_cached_datas_flipflop0_q <= soc_cached_datas_flipflop0_d;
	end
	if (soc_cached_datas_reset0) begin
		soc_cached_datas_flipflop0_q <= 32'd0;
	end
	if (soc_cached_datas_ce1) begin
		soc_cached_datas_flipflop1_q <= soc_cached_datas_flipflop1_d;
	end
	if (soc_cached_datas_reset1) begin
		soc_cached_datas_flipflop1_q <= 32'd0;
	end
	if (soc_cached_sels_ce0) begin
		soc_cached_sels_flipflop0_q <= soc_cached_sels_flipflop0_d;
	end
	if (soc_cached_sels_reset0) begin
		soc_cached_sels_flipflop0_q <= 4'd0;
	end
	if (soc_cached_sels_ce1) begin
		soc_cached_sels_flipflop1_q <= soc_cached_sels_flipflop1_d;
	end
	if (soc_cached_sels_reset1) begin
		soc_cached_sels_flipflop1_q <= 4'd0;
	end
	vns_litedramwishbone2native_state <= vns_litedramwishbone2native_next_state;
	if (soc_count_next_value_ce) begin
		soc_count <= soc_count_next_value;
	end
	if (((~soc_write_aw_buffer_source_valid) | soc_write_aw_buffer_source_ready)) begin
		soc_write_aw_buffer_source_valid <= soc_write_aw_buffer_sink_valid;
		soc_write_aw_buffer_source_first <= soc_write_aw_buffer_sink_first;
		soc_write_aw_buffer_source_last <= soc_write_aw_buffer_sink_last;
		soc_write_aw_buffer_source_payload_addr <= soc_write_aw_buffer_sink_payload_addr;
		soc_write_aw_buffer_source_payload_burst <= soc_write_aw_buffer_sink_payload_burst;
		soc_write_aw_buffer_source_payload_len <= soc_write_aw_buffer_sink_payload_len;
		soc_write_aw_buffer_source_payload_size <= soc_write_aw_buffer_sink_payload_size;
		soc_write_aw_buffer_source_payload_lock <= soc_write_aw_buffer_sink_payload_lock;
		soc_write_aw_buffer_source_payload_prot <= soc_write_aw_buffer_sink_payload_prot;
		soc_write_aw_buffer_source_payload_cache <= soc_write_aw_buffer_sink_payload_cache;
		soc_write_aw_buffer_source_payload_qos <= soc_write_aw_buffer_sink_payload_qos;
		soc_write_aw_buffer_source_payload_id <= soc_write_aw_buffer_sink_payload_id;
	end
	if ((soc_write_aw_valid & soc_write_aw_ready)) begin
		if (soc_write_aw_last) begin
			soc_write_beat_count <= 1'd0;
			soc_write_beat_offset <= 1'd0;
		end else begin
			soc_write_beat_count <= (soc_write_beat_count + 1'd1);
			if ((((soc_write_aw_buffer_source_payload_burst == 1'd1) & 1'd1) | ((soc_write_aw_buffer_source_payload_burst == 2'd2) & 1'd1))) begin
				soc_write_beat_offset <= (soc_write_beat_offset + soc_write_beat_size);
			end
		end
		if (((soc_write_aw_buffer_source_payload_burst == 2'd2) & 1'd1)) begin
			if ((soc_write_beat_offset == soc_write_beat_wrap)) begin
				soc_write_beat_offset <= 1'd0;
			end
		end
	end
	if (soc_write_w_buffer_syncfifo_re) begin
		soc_write_w_buffer_readable <= 1'd1;
	end else begin
		if (soc_write_w_buffer_re) begin
			soc_write_w_buffer_readable <= 1'd0;
		end
	end
	if (((soc_write_w_buffer_syncfifo_we & soc_write_w_buffer_syncfifo_writable) & (~soc_write_w_buffer_replace))) begin
		soc_write_w_buffer_produce <= (soc_write_w_buffer_produce + 1'd1);
	end
	if (soc_write_w_buffer_do_read) begin
		soc_write_w_buffer_consume <= (soc_write_w_buffer_consume + 1'd1);
	end
	if (((soc_write_w_buffer_syncfifo_we & soc_write_w_buffer_syncfifo_writable) & (~soc_write_w_buffer_replace))) begin
		if ((~soc_write_w_buffer_do_read)) begin
			soc_write_w_buffer_level0 <= (soc_write_w_buffer_level0 + 1'd1);
		end
	end else begin
		if (soc_write_w_buffer_do_read) begin
			soc_write_w_buffer_level0 <= (soc_write_w_buffer_level0 - 1'd1);
		end
	end
	if (((soc_write_id_buffer_syncfifo_we & soc_write_id_buffer_syncfifo_writable) & (~soc_write_id_buffer_replace))) begin
		soc_write_id_buffer_produce <= (soc_write_id_buffer_produce + 1'd1);
	end
	if (soc_write_id_buffer_do_read) begin
		soc_write_id_buffer_consume <= (soc_write_id_buffer_consume + 1'd1);
	end
	if (((soc_write_id_buffer_syncfifo_we & soc_write_id_buffer_syncfifo_writable) & (~soc_write_id_buffer_replace))) begin
		if ((~soc_write_id_buffer_do_read)) begin
			soc_write_id_buffer_level <= (soc_write_id_buffer_level + 1'd1);
		end
	end else begin
		if (soc_write_id_buffer_do_read) begin
			soc_write_id_buffer_level <= (soc_write_id_buffer_level - 1'd1);
		end
	end
	if (((soc_write_resp_buffer_syncfifo_we & soc_write_resp_buffer_syncfifo_writable) & (~soc_write_resp_buffer_replace))) begin
		soc_write_resp_buffer_produce <= (soc_write_resp_buffer_produce + 1'd1);
	end
	if (soc_write_resp_buffer_do_read) begin
		soc_write_resp_buffer_consume <= (soc_write_resp_buffer_consume + 1'd1);
	end
	if (((soc_write_resp_buffer_syncfifo_we & soc_write_resp_buffer_syncfifo_writable) & (~soc_write_resp_buffer_replace))) begin
		if ((~soc_write_resp_buffer_do_read)) begin
			soc_write_resp_buffer_level <= (soc_write_resp_buffer_level + 1'd1);
		end
	end else begin
		if (soc_write_resp_buffer_do_read) begin
			soc_write_resp_buffer_level <= (soc_write_resp_buffer_level - 1'd1);
		end
	end
	if (soc_read_r_buffer_queue) begin
		if ((~soc_read_r_buffer_dequeue)) begin
			soc_read_r_buffer_level2 <= (soc_read_r_buffer_level2 + 1'd1);
		end
	end else begin
		if (soc_read_r_buffer_dequeue) begin
			soc_read_r_buffer_level2 <= (soc_read_r_buffer_level2 - 1'd1);
		end
	end
	if (((~soc_read_ar_buffer_source_valid) | soc_read_ar_buffer_source_ready)) begin
		soc_read_ar_buffer_source_valid <= soc_read_ar_buffer_sink_valid;
		soc_read_ar_buffer_source_first <= soc_read_ar_buffer_sink_first;
		soc_read_ar_buffer_source_last <= soc_read_ar_buffer_sink_last;
		soc_read_ar_buffer_source_payload_addr <= soc_read_ar_buffer_sink_payload_addr;
		soc_read_ar_buffer_source_payload_burst <= soc_read_ar_buffer_sink_payload_burst;
		soc_read_ar_buffer_source_payload_len <= soc_read_ar_buffer_sink_payload_len;
		soc_read_ar_buffer_source_payload_size <= soc_read_ar_buffer_sink_payload_size;
		soc_read_ar_buffer_source_payload_lock <= soc_read_ar_buffer_sink_payload_lock;
		soc_read_ar_buffer_source_payload_prot <= soc_read_ar_buffer_sink_payload_prot;
		soc_read_ar_buffer_source_payload_cache <= soc_read_ar_buffer_sink_payload_cache;
		soc_read_ar_buffer_source_payload_qos <= soc_read_ar_buffer_sink_payload_qos;
		soc_read_ar_buffer_source_payload_id <= soc_read_ar_buffer_sink_payload_id;
	end
	if ((soc_read_ar_valid & soc_read_ar_ready)) begin
		if (soc_read_ar_last) begin
			soc_read_beat_count <= 1'd0;
			soc_read_beat_offset <= 1'd0;
		end else begin
			soc_read_beat_count <= (soc_read_beat_count + 1'd1);
			if ((((soc_read_ar_buffer_source_payload_burst == 1'd1) & 1'd1) | ((soc_read_ar_buffer_source_payload_burst == 2'd2) & 1'd1))) begin
				soc_read_beat_offset <= (soc_read_beat_offset + soc_read_beat_size);
			end
		end
		if (((soc_read_ar_buffer_source_payload_burst == 2'd2) & 1'd1)) begin
			if ((soc_read_beat_offset == soc_read_beat_wrap)) begin
				soc_read_beat_offset <= 1'd0;
			end
		end
	end
	if (soc_read_r_buffer_syncfifo_re) begin
		soc_read_r_buffer_readable <= 1'd1;
	end else begin
		if (soc_read_r_buffer_re) begin
			soc_read_r_buffer_readable <= 1'd0;
		end
	end
	if (((soc_read_r_buffer_syncfifo_we & soc_read_r_buffer_syncfifo_writable) & (~soc_read_r_buffer_replace))) begin
		soc_read_r_buffer_produce <= (soc_read_r_buffer_produce + 1'd1);
	end
	if (soc_read_r_buffer_do_read) begin
		soc_read_r_buffer_consume <= (soc_read_r_buffer_consume + 1'd1);
	end
	if (((soc_read_r_buffer_syncfifo_we & soc_read_r_buffer_syncfifo_writable) & (~soc_read_r_buffer_replace))) begin
		if ((~soc_read_r_buffer_do_read)) begin
			soc_read_r_buffer_level0 <= (soc_read_r_buffer_level0 + 1'd1);
		end
	end else begin
		if (soc_read_r_buffer_do_read) begin
			soc_read_r_buffer_level0 <= (soc_read_r_buffer_level0 - 1'd1);
		end
	end
	if (((soc_read_id_buffer_syncfifo_we & soc_read_id_buffer_syncfifo_writable) & (~soc_read_id_buffer_replace))) begin
		soc_read_id_buffer_produce <= (soc_read_id_buffer_produce + 1'd1);
	end
	if (soc_read_id_buffer_do_read) begin
		soc_read_id_buffer_consume <= (soc_read_id_buffer_consume + 1'd1);
	end
	if (((soc_read_id_buffer_syncfifo_we & soc_read_id_buffer_syncfifo_writable) & (~soc_read_id_buffer_replace))) begin
		if ((~soc_read_id_buffer_do_read)) begin
			soc_read_id_buffer_level <= (soc_read_id_buffer_level + 1'd1);
		end
	end else begin
		if (soc_read_id_buffer_do_read) begin
			soc_read_id_buffer_level <= (soc_read_id_buffer_level - 1'd1);
		end
	end
	if (soc_ce) begin
		case (soc_grant)
			1'd0: begin
				if (soc_request[1]) begin
					soc_grant <= 1'd1;
				end
			end
			1'd1: begin
				if (soc_request[0]) begin
					soc_grant <= 1'd0;
				end
			end
		endcase
	end
	case (vns_grant)
		1'd0: begin
			if ((~vns_request[0])) begin
				if (vns_request[1]) begin
					vns_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~vns_request[1])) begin
				if (vns_request[0]) begin
					vns_grant <= 1'd0;
				end
			end
		end
	endcase
	vns_slave_sel_r <= vns_slave_sel;
	if (vns_wait) begin
		if ((~vns_done)) begin
			vns_count <= (vns_count - 1'd1);
		end
	end else begin
		vns_count <= 20'd1000000;
	end
	vns_interface0_bank_bus_dat_r <= 1'd0;
	if (vns_csrbank0_sel) begin
		case (vns_interface0_bank_bus_adr[3:0])
			1'd0: begin
				vns_interface0_bank_bus_dat_r <= vns_csrbank0_reset0_w;
			end
			1'd1: begin
				vns_interface0_bank_bus_dat_r <= vns_csrbank0_scratch3_w;
			end
			2'd2: begin
				vns_interface0_bank_bus_dat_r <= vns_csrbank0_scratch2_w;
			end
			2'd3: begin
				vns_interface0_bank_bus_dat_r <= vns_csrbank0_scratch1_w;
			end
			3'd4: begin
				vns_interface0_bank_bus_dat_r <= vns_csrbank0_scratch0_w;
			end
			3'd5: begin
				vns_interface0_bank_bus_dat_r <= vns_csrbank0_bus_errors3_w;
			end
			3'd6: begin
				vns_interface0_bank_bus_dat_r <= vns_csrbank0_bus_errors2_w;
			end
			3'd7: begin
				vns_interface0_bank_bus_dat_r <= vns_csrbank0_bus_errors1_w;
			end
			4'd8: begin
				vns_interface0_bank_bus_dat_r <= vns_csrbank0_bus_errors0_w;
			end
		endcase
	end
	if (vns_csrbank0_reset0_re) begin
		soc_litedramcore_soccontroller_reset_storage <= vns_csrbank0_reset0_r;
	end
	soc_litedramcore_soccontroller_reset_re <= vns_csrbank0_reset0_re;
	if (vns_csrbank0_scratch3_re) begin
		soc_litedramcore_soccontroller_scratch_storage[31:24] <= vns_csrbank0_scratch3_r;
	end
	if (vns_csrbank0_scratch2_re) begin
		soc_litedramcore_soccontroller_scratch_storage[23:16] <= vns_csrbank0_scratch2_r;
	end
	if (vns_csrbank0_scratch1_re) begin
		soc_litedramcore_soccontroller_scratch_storage[15:8] <= vns_csrbank0_scratch1_r;
	end
	if (vns_csrbank0_scratch0_re) begin
		soc_litedramcore_soccontroller_scratch_storage[7:0] <= vns_csrbank0_scratch0_r;
	end
	soc_litedramcore_soccontroller_scratch_re <= vns_csrbank0_scratch0_re;
	vns_interface1_bank_bus_dat_r <= 1'd0;
	if (vns_csrbank1_sel) begin
		case (vns_interface1_bank_bus_adr[0])
			1'd0: begin
				vns_interface1_bank_bus_dat_r <= vns_csrbank1_init_done0_w;
			end
			1'd1: begin
				vns_interface1_bank_bus_dat_r <= vns_csrbank1_init_error0_w;
			end
		endcase
	end
	if (vns_csrbank1_init_done0_re) begin
		soc_init_done_storage <= vns_csrbank1_init_done0_r;
	end
	soc_init_done_re <= vns_csrbank1_init_done0_re;
	if (vns_csrbank1_init_error0_re) begin
		soc_init_error_storage <= vns_csrbank1_init_error0_r;
	end
	soc_init_error_re <= vns_csrbank1_init_error0_re;
	vns_interface2_bank_bus_dat_r <= 1'd0;
	if (vns_csrbank2_sel) begin
		case (vns_interface2_bank_bus_adr[3:0])
			1'd0: begin
				vns_interface2_bank_bus_dat_r <= vns_csrbank2_half_sys8x_taps0_w;
			end
			1'd1: begin
				vns_interface2_bank_bus_dat_r <= vns_csrbank2_wlevel_en0_w;
			end
			2'd2: begin
				vns_interface2_bank_bus_dat_r <= soc_a7ddrphy_wlevel_strobe_w;
			end
			2'd3: begin
				vns_interface2_bank_bus_dat_r <= soc_a7ddrphy_cdly_rst_w;
			end
			3'd4: begin
				vns_interface2_bank_bus_dat_r <= soc_a7ddrphy_cdly_inc_w;
			end
			3'd5: begin
				vns_interface2_bank_bus_dat_r <= vns_csrbank2_dly_sel0_w;
			end
			3'd6: begin
				vns_interface2_bank_bus_dat_r <= soc_a7ddrphy_rdly_dq_rst_w;
			end
			3'd7: begin
				vns_interface2_bank_bus_dat_r <= soc_a7ddrphy_rdly_dq_inc_w;
			end
			4'd8: begin
				vns_interface2_bank_bus_dat_r <= soc_a7ddrphy_rdly_dq_bitslip_rst_w;
			end
			4'd9: begin
				vns_interface2_bank_bus_dat_r <= soc_a7ddrphy_rdly_dq_bitslip_w;
			end
		endcase
	end
	if (vns_csrbank2_half_sys8x_taps0_re) begin
		soc_a7ddrphy_half_sys8x_taps_storage[4:0] <= vns_csrbank2_half_sys8x_taps0_r;
	end
	soc_a7ddrphy_half_sys8x_taps_re <= vns_csrbank2_half_sys8x_taps0_re;
	if (vns_csrbank2_wlevel_en0_re) begin
		soc_a7ddrphy_wlevel_en_storage <= vns_csrbank2_wlevel_en0_r;
	end
	soc_a7ddrphy_wlevel_en_re <= vns_csrbank2_wlevel_en0_re;
	if (vns_csrbank2_dly_sel0_re) begin
		soc_a7ddrphy_dly_sel_storage[1:0] <= vns_csrbank2_dly_sel0_r;
	end
	soc_a7ddrphy_dly_sel_re <= vns_csrbank2_dly_sel0_re;
	vns_interface3_bank_bus_dat_r <= 1'd0;
	if (vns_csrbank3_sel) begin
		case (vns_interface3_bank_bus_adr[4:0])
			1'd0: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_control0_w;
			end
			1'd1: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_command0_w;
			end
			2'd2: begin
				vns_interface3_bank_bus_dat_r <= soc_sdram_phaseinjector0_command_issue_w;
			end
			2'd3: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_address1_w;
			end
			3'd4: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_address0_w;
			end
			3'd5: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_baddress0_w;
			end
			3'd6: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_wrdata3_w;
			end
			3'd7: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_wrdata2_w;
			end
			4'd8: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_wrdata1_w;
			end
			4'd9: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_wrdata0_w;
			end
			4'd10: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_rddata3_w;
			end
			4'd11: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_rddata2_w;
			end
			4'd12: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_rddata1_w;
			end
			4'd13: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi0_rddata0_w;
			end
			4'd14: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_command0_w;
			end
			4'd15: begin
				vns_interface3_bank_bus_dat_r <= soc_sdram_phaseinjector1_command_issue_w;
			end
			5'd16: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_address1_w;
			end
			5'd17: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_address0_w;
			end
			5'd18: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_baddress0_w;
			end
			5'd19: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_wrdata3_w;
			end
			5'd20: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_wrdata2_w;
			end
			5'd21: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_wrdata1_w;
			end
			5'd22: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_wrdata0_w;
			end
			5'd23: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_rddata3_w;
			end
			5'd24: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_rddata2_w;
			end
			5'd25: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_rddata1_w;
			end
			5'd26: begin
				vns_interface3_bank_bus_dat_r <= vns_csrbank3_dfii_pi1_rddata0_w;
			end
		endcase
	end
	if (vns_csrbank3_dfii_control0_re) begin
		soc_sdram_storage[3:0] <= vns_csrbank3_dfii_control0_r;
	end
	soc_sdram_re <= vns_csrbank3_dfii_control0_re;
	if (vns_csrbank3_dfii_pi0_command0_re) begin
		soc_sdram_phaseinjector0_command_storage[5:0] <= vns_csrbank3_dfii_pi0_command0_r;
	end
	soc_sdram_phaseinjector0_command_re <= vns_csrbank3_dfii_pi0_command0_re;
	if (vns_csrbank3_dfii_pi0_address1_re) begin
		soc_sdram_phaseinjector0_address_storage[12:8] <= vns_csrbank3_dfii_pi0_address1_r;
	end
	if (vns_csrbank3_dfii_pi0_address0_re) begin
		soc_sdram_phaseinjector0_address_storage[7:0] <= vns_csrbank3_dfii_pi0_address0_r;
	end
	soc_sdram_phaseinjector0_address_re <= vns_csrbank3_dfii_pi0_address0_re;
	if (vns_csrbank3_dfii_pi0_baddress0_re) begin
		soc_sdram_phaseinjector0_baddress_storage[2:0] <= vns_csrbank3_dfii_pi0_baddress0_r;
	end
	soc_sdram_phaseinjector0_baddress_re <= vns_csrbank3_dfii_pi0_baddress0_re;
	if (vns_csrbank3_dfii_pi0_wrdata3_re) begin
		soc_sdram_phaseinjector0_wrdata_storage[31:24] <= vns_csrbank3_dfii_pi0_wrdata3_r;
	end
	if (vns_csrbank3_dfii_pi0_wrdata2_re) begin
		soc_sdram_phaseinjector0_wrdata_storage[23:16] <= vns_csrbank3_dfii_pi0_wrdata2_r;
	end
	if (vns_csrbank3_dfii_pi0_wrdata1_re) begin
		soc_sdram_phaseinjector0_wrdata_storage[15:8] <= vns_csrbank3_dfii_pi0_wrdata1_r;
	end
	if (vns_csrbank3_dfii_pi0_wrdata0_re) begin
		soc_sdram_phaseinjector0_wrdata_storage[7:0] <= vns_csrbank3_dfii_pi0_wrdata0_r;
	end
	soc_sdram_phaseinjector0_wrdata_re <= vns_csrbank3_dfii_pi0_wrdata0_re;
	if (vns_csrbank3_dfii_pi1_command0_re) begin
		soc_sdram_phaseinjector1_command_storage[5:0] <= vns_csrbank3_dfii_pi1_command0_r;
	end
	soc_sdram_phaseinjector1_command_re <= vns_csrbank3_dfii_pi1_command0_re;
	if (vns_csrbank3_dfii_pi1_address1_re) begin
		soc_sdram_phaseinjector1_address_storage[12:8] <= vns_csrbank3_dfii_pi1_address1_r;
	end
	if (vns_csrbank3_dfii_pi1_address0_re) begin
		soc_sdram_phaseinjector1_address_storage[7:0] <= vns_csrbank3_dfii_pi1_address0_r;
	end
	soc_sdram_phaseinjector1_address_re <= vns_csrbank3_dfii_pi1_address0_re;
	if (vns_csrbank3_dfii_pi1_baddress0_re) begin
		soc_sdram_phaseinjector1_baddress_storage[2:0] <= vns_csrbank3_dfii_pi1_baddress0_r;
	end
	soc_sdram_phaseinjector1_baddress_re <= vns_csrbank3_dfii_pi1_baddress0_re;
	if (vns_csrbank3_dfii_pi1_wrdata3_re) begin
		soc_sdram_phaseinjector1_wrdata_storage[31:24] <= vns_csrbank3_dfii_pi1_wrdata3_r;
	end
	if (vns_csrbank3_dfii_pi1_wrdata2_re) begin
		soc_sdram_phaseinjector1_wrdata_storage[23:16] <= vns_csrbank3_dfii_pi1_wrdata2_r;
	end
	if (vns_csrbank3_dfii_pi1_wrdata1_re) begin
		soc_sdram_phaseinjector1_wrdata_storage[15:8] <= vns_csrbank3_dfii_pi1_wrdata1_r;
	end
	if (vns_csrbank3_dfii_pi1_wrdata0_re) begin
		soc_sdram_phaseinjector1_wrdata_storage[7:0] <= vns_csrbank3_dfii_pi1_wrdata0_r;
	end
	soc_sdram_phaseinjector1_wrdata_re <= vns_csrbank3_dfii_pi1_wrdata0_re;
	vns_interface4_bank_bus_dat_r <= 1'd0;
	if (vns_csrbank4_sel) begin
		case (vns_interface4_bank_bus_adr[4:0])
			1'd0: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_load3_w;
			end
			1'd1: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_load2_w;
			end
			2'd2: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_load1_w;
			end
			2'd3: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_load0_w;
			end
			3'd4: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_reload3_w;
			end
			3'd5: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_reload2_w;
			end
			3'd6: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_reload1_w;
			end
			3'd7: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_reload0_w;
			end
			4'd8: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_en0_w;
			end
			4'd9: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_update_value0_w;
			end
			4'd10: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_value3_w;
			end
			4'd11: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_value2_w;
			end
			4'd12: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_value1_w;
			end
			4'd13: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_value0_w;
			end
			4'd14: begin
				vns_interface4_bank_bus_dat_r <= soc_litedramcore_timer_eventmanager_status_w;
			end
			4'd15: begin
				vns_interface4_bank_bus_dat_r <= soc_litedramcore_timer_eventmanager_pending_w;
			end
			5'd16: begin
				vns_interface4_bank_bus_dat_r <= vns_csrbank4_ev_enable0_w;
			end
		endcase
	end
	if (vns_csrbank4_load3_re) begin
		soc_litedramcore_timer_load_storage[31:24] <= vns_csrbank4_load3_r;
	end
	if (vns_csrbank4_load2_re) begin
		soc_litedramcore_timer_load_storage[23:16] <= vns_csrbank4_load2_r;
	end
	if (vns_csrbank4_load1_re) begin
		soc_litedramcore_timer_load_storage[15:8] <= vns_csrbank4_load1_r;
	end
	if (vns_csrbank4_load0_re) begin
		soc_litedramcore_timer_load_storage[7:0] <= vns_csrbank4_load0_r;
	end
	soc_litedramcore_timer_load_re <= vns_csrbank4_load0_re;
	if (vns_csrbank4_reload3_re) begin
		soc_litedramcore_timer_reload_storage[31:24] <= vns_csrbank4_reload3_r;
	end
	if (vns_csrbank4_reload2_re) begin
		soc_litedramcore_timer_reload_storage[23:16] <= vns_csrbank4_reload2_r;
	end
	if (vns_csrbank4_reload1_re) begin
		soc_litedramcore_timer_reload_storage[15:8] <= vns_csrbank4_reload1_r;
	end
	if (vns_csrbank4_reload0_re) begin
		soc_litedramcore_timer_reload_storage[7:0] <= vns_csrbank4_reload0_r;
	end
	soc_litedramcore_timer_reload_re <= vns_csrbank4_reload0_re;
	if (vns_csrbank4_en0_re) begin
		soc_litedramcore_timer_en_storage <= vns_csrbank4_en0_r;
	end
	soc_litedramcore_timer_en_re <= vns_csrbank4_en0_re;
	if (vns_csrbank4_update_value0_re) begin
		soc_litedramcore_timer_update_value_storage <= vns_csrbank4_update_value0_r;
	end
	soc_litedramcore_timer_update_value_re <= vns_csrbank4_update_value0_re;
	if (vns_csrbank4_ev_enable0_re) begin
		soc_litedramcore_timer_eventmanager_storage <= vns_csrbank4_ev_enable0_r;
	end
	soc_litedramcore_timer_eventmanager_re <= vns_csrbank4_ev_enable0_re;
	vns_interface5_bank_bus_dat_r <= 1'd0;
	if (vns_csrbank5_sel) begin
		case (vns_interface5_bank_bus_adr[2:0])
			1'd0: begin
				vns_interface5_bank_bus_dat_r <= soc_litedramcore_uart_rxtx_w;
			end
			1'd1: begin
				vns_interface5_bank_bus_dat_r <= vns_csrbank5_txfull_w;
			end
			2'd2: begin
				vns_interface5_bank_bus_dat_r <= vns_csrbank5_rxempty_w;
			end
			2'd3: begin
				vns_interface5_bank_bus_dat_r <= soc_litedramcore_uart_eventmanager_status_w;
			end
			3'd4: begin
				vns_interface5_bank_bus_dat_r <= soc_litedramcore_uart_eventmanager_pending_w;
			end
			3'd5: begin
				vns_interface5_bank_bus_dat_r <= vns_csrbank5_ev_enable0_w;
			end
		endcase
	end
	if (vns_csrbank5_ev_enable0_re) begin
		soc_litedramcore_uart_eventmanager_storage[1:0] <= vns_csrbank5_ev_enable0_r;
	end
	soc_litedramcore_uart_eventmanager_re <= vns_csrbank5_ev_enable0_re;
	vns_interface6_bank_bus_dat_r <= 1'd0;
	if (vns_csrbank6_sel) begin
		case (vns_interface6_bank_bus_adr[1:0])
			1'd0: begin
				vns_interface6_bank_bus_dat_r <= vns_csrbank6_tuning_word3_w;
			end
			1'd1: begin
				vns_interface6_bank_bus_dat_r <= vns_csrbank6_tuning_word2_w;
			end
			2'd2: begin
				vns_interface6_bank_bus_dat_r <= vns_csrbank6_tuning_word1_w;
			end
			2'd3: begin
				vns_interface6_bank_bus_dat_r <= vns_csrbank6_tuning_word0_w;
			end
		endcase
	end
	if (vns_csrbank6_tuning_word3_re) begin
		soc_litedramcore_storage[31:24] <= vns_csrbank6_tuning_word3_r;
	end
	if (vns_csrbank6_tuning_word2_re) begin
		soc_litedramcore_storage[23:16] <= vns_csrbank6_tuning_word2_r;
	end
	if (vns_csrbank6_tuning_word1_re) begin
		soc_litedramcore_storage[15:8] <= vns_csrbank6_tuning_word1_r;
	end
	if (vns_csrbank6_tuning_word0_re) begin
		soc_litedramcore_storage[7:0] <= vns_csrbank6_tuning_word0_r;
	end
	soc_litedramcore_re <= vns_csrbank6_tuning_word0_re;
	if (sys_rst) begin
		soc_litedramcore_soccontroller_reset_storage <= 1'd0;
		soc_litedramcore_soccontroller_reset_re <= 1'd0;
		soc_litedramcore_soccontroller_scratch_storage <= 32'd305419896;
		soc_litedramcore_soccontroller_scratch_re <= 1'd0;
		soc_litedramcore_soccontroller_bus_errors <= 32'd0;
		soc_litedramcore_litedramcore_ram_bus_ack <= 1'd0;
		soc_litedramcore_ram_bus_ram_bus_ack <= 1'd0;
		serial_tx <= 1'd1;
		soc_litedramcore_storage <= 32'd4947802;
		soc_litedramcore_re <= 1'd0;
		soc_litedramcore_sink_ready <= 1'd0;
		soc_litedramcore_uart_clk_txen <= 1'd0;
		soc_litedramcore_tx_busy <= 1'd0;
		soc_litedramcore_source_valid <= 1'd0;
		soc_litedramcore_uart_clk_rxen <= 1'd0;
		soc_litedramcore_rx_r <= 1'd0;
		soc_litedramcore_rx_busy <= 1'd0;
		soc_litedramcore_uart_tx_pending <= 1'd0;
		soc_litedramcore_uart_tx_old_trigger <= 1'd0;
		soc_litedramcore_uart_rx_pending <= 1'd0;
		soc_litedramcore_uart_rx_old_trigger <= 1'd0;
		soc_litedramcore_uart_eventmanager_storage <= 2'd0;
		soc_litedramcore_uart_eventmanager_re <= 1'd0;
		soc_litedramcore_uart_tx_fifo_readable <= 1'd0;
		soc_litedramcore_uart_tx_fifo_level0 <= 5'd0;
		soc_litedramcore_uart_tx_fifo_produce <= 4'd0;
		soc_litedramcore_uart_tx_fifo_consume <= 4'd0;
		soc_litedramcore_uart_rx_fifo_readable <= 1'd0;
		soc_litedramcore_uart_rx_fifo_level0 <= 5'd0;
		soc_litedramcore_uart_rx_fifo_produce <= 4'd0;
		soc_litedramcore_uart_rx_fifo_consume <= 4'd0;
		soc_litedramcore_timer_load_storage <= 32'd0;
		soc_litedramcore_timer_load_re <= 1'd0;
		soc_litedramcore_timer_reload_storage <= 32'd0;
		soc_litedramcore_timer_reload_re <= 1'd0;
		soc_litedramcore_timer_en_storage <= 1'd0;
		soc_litedramcore_timer_en_re <= 1'd0;
		soc_litedramcore_timer_update_value_storage <= 1'd0;
		soc_litedramcore_timer_update_value_re <= 1'd0;
		soc_litedramcore_timer_value_status <= 32'd0;
		soc_litedramcore_timer_zero_pending <= 1'd0;
		soc_litedramcore_timer_zero_old_trigger <= 1'd0;
		soc_litedramcore_timer_eventmanager_storage <= 1'd0;
		soc_litedramcore_timer_eventmanager_re <= 1'd0;
		soc_litedramcore_timer_value <= 32'd0;
		soc_a7ddrphy_half_sys8x_taps_storage <= 5'd16;
		soc_a7ddrphy_half_sys8x_taps_re <= 1'd0;
		soc_a7ddrphy_wlevel_en_storage <= 1'd0;
		soc_a7ddrphy_wlevel_en_re <= 1'd0;
		soc_a7ddrphy_dly_sel_storage <= 2'd0;
		soc_a7ddrphy_dly_sel_re <= 1'd0;
		soc_a7ddrphy_dfi_p0_rddata_valid <= 1'd0;
		soc_a7ddrphy_dfi_p1_rddata_valid <= 1'd0;
		soc_a7ddrphy_dfi_p2_rddata_valid <= 1'd0;
		soc_a7ddrphy_dfi_p3_rddata_valid <= 1'd0;
		soc_a7ddrphy_dqs_oe_delayed <= 1'd0;
		soc_a7ddrphy_dqspattern_o1 <= 8'd0;
		soc_a7ddrphy_dq_oe_delayed <= 1'd0;
		soc_a7ddrphy_bitslip0_value <= 3'd0;
		soc_a7ddrphy_bitslip1_value <= 3'd0;
		soc_a7ddrphy_bitslip2_value <= 3'd0;
		soc_a7ddrphy_bitslip3_value <= 3'd0;
		soc_a7ddrphy_bitslip4_value <= 3'd0;
		soc_a7ddrphy_bitslip5_value <= 3'd0;
		soc_a7ddrphy_bitslip6_value <= 3'd0;
		soc_a7ddrphy_bitslip7_value <= 3'd0;
		soc_a7ddrphy_bitslip8_value <= 3'd0;
		soc_a7ddrphy_bitslip9_value <= 3'd0;
		soc_a7ddrphy_bitslip10_value <= 3'd0;
		soc_a7ddrphy_bitslip11_value <= 3'd0;
		soc_a7ddrphy_bitslip12_value <= 3'd0;
		soc_a7ddrphy_bitslip13_value <= 3'd0;
		soc_a7ddrphy_bitslip14_value <= 3'd0;
		soc_a7ddrphy_bitslip15_value <= 3'd0;
		soc_a7ddrphy_rddata_en_last <= 8'd0;
		soc_a7ddrphy_wrdata_en_last <= 3'd0;
		soc_sdram_storage <= 4'd0;
		soc_sdram_re <= 1'd0;
		soc_sdram_phaseinjector0_command_storage <= 6'd0;
		soc_sdram_phaseinjector0_command_re <= 1'd0;
		soc_sdram_phaseinjector0_address_re <= 1'd0;
		soc_sdram_phaseinjector0_baddress_re <= 1'd0;
		soc_sdram_phaseinjector0_wrdata_re <= 1'd0;
		soc_sdram_phaseinjector0_status <= 32'd0;
		soc_sdram_phaseinjector1_command_storage <= 6'd0;
		soc_sdram_phaseinjector1_command_re <= 1'd0;
		soc_sdram_phaseinjector1_address_re <= 1'd0;
		soc_sdram_phaseinjector1_baddress_re <= 1'd0;
		soc_sdram_phaseinjector1_wrdata_re <= 1'd0;
		soc_sdram_phaseinjector1_status <= 32'd0;
		soc_sdram_dfi_p0_address <= 13'd0;
		soc_sdram_dfi_p0_bank <= 3'd0;
		soc_sdram_dfi_p0_cas_n <= 1'd1;
		soc_sdram_dfi_p0_cs_n <= 1'd1;
		soc_sdram_dfi_p0_ras_n <= 1'd1;
		soc_sdram_dfi_p0_we_n <= 1'd1;
		soc_sdram_dfi_p0_wrdata_en <= 1'd0;
		soc_sdram_dfi_p0_rddata_en <= 1'd0;
		soc_sdram_dfi_p1_address <= 13'd0;
		soc_sdram_dfi_p1_bank <= 3'd0;
		soc_sdram_dfi_p1_cas_n <= 1'd1;
		soc_sdram_dfi_p1_cs_n <= 1'd1;
		soc_sdram_dfi_p1_ras_n <= 1'd1;
		soc_sdram_dfi_p1_we_n <= 1'd1;
		soc_sdram_dfi_p1_wrdata_en <= 1'd0;
		soc_sdram_dfi_p1_rddata_en <= 1'd0;
		soc_sdram_timer_count1 <= 10'd781;
		soc_sdram_postponer_req_o <= 1'd0;
		soc_sdram_postponer_count <= 1'd0;
		soc_sdram_sequencer_done1 <= 1'd0;
		soc_sdram_sequencer_counter <= 5'd0;
		soc_sdram_sequencer_count <= 1'd0;
		soc_sdram_bankmachine0_cmd_buffer_lookahead_level <= 5'd0;
		soc_sdram_bankmachine0_cmd_buffer_lookahead_produce <= 4'd0;
		soc_sdram_bankmachine0_cmd_buffer_lookahead_consume <= 4'd0;
		soc_sdram_bankmachine0_cmd_buffer_source_valid <= 1'd0;
		soc_sdram_bankmachine0_row <= 13'd0;
		soc_sdram_bankmachine0_row_opened <= 1'd0;
		soc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
		soc_sdram_bankmachine0_twtpcon_count <= 2'd0;
		soc_sdram_bankmachine1_cmd_buffer_lookahead_level <= 5'd0;
		soc_sdram_bankmachine1_cmd_buffer_lookahead_produce <= 4'd0;
		soc_sdram_bankmachine1_cmd_buffer_lookahead_consume <= 4'd0;
		soc_sdram_bankmachine1_cmd_buffer_source_valid <= 1'd0;
		soc_sdram_bankmachine1_row <= 13'd0;
		soc_sdram_bankmachine1_row_opened <= 1'd0;
		soc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
		soc_sdram_bankmachine1_twtpcon_count <= 2'd0;
		soc_sdram_bankmachine2_cmd_buffer_lookahead_level <= 5'd0;
		soc_sdram_bankmachine2_cmd_buffer_lookahead_produce <= 4'd0;
		soc_sdram_bankmachine2_cmd_buffer_lookahead_consume <= 4'd0;
		soc_sdram_bankmachine2_cmd_buffer_source_valid <= 1'd0;
		soc_sdram_bankmachine2_row <= 13'd0;
		soc_sdram_bankmachine2_row_opened <= 1'd0;
		soc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
		soc_sdram_bankmachine2_twtpcon_count <= 2'd0;
		soc_sdram_bankmachine3_cmd_buffer_lookahead_level <= 5'd0;
		soc_sdram_bankmachine3_cmd_buffer_lookahead_produce <= 4'd0;
		soc_sdram_bankmachine3_cmd_buffer_lookahead_consume <= 4'd0;
		soc_sdram_bankmachine3_cmd_buffer_source_valid <= 1'd0;
		soc_sdram_bankmachine3_row <= 13'd0;
		soc_sdram_bankmachine3_row_opened <= 1'd0;
		soc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
		soc_sdram_bankmachine3_twtpcon_count <= 2'd0;
		soc_sdram_bankmachine4_cmd_buffer_lookahead_level <= 5'd0;
		soc_sdram_bankmachine4_cmd_buffer_lookahead_produce <= 4'd0;
		soc_sdram_bankmachine4_cmd_buffer_lookahead_consume <= 4'd0;
		soc_sdram_bankmachine4_cmd_buffer_source_valid <= 1'd0;
		soc_sdram_bankmachine4_row <= 13'd0;
		soc_sdram_bankmachine4_row_opened <= 1'd0;
		soc_sdram_bankmachine4_twtpcon_ready <= 1'd1;
		soc_sdram_bankmachine4_twtpcon_count <= 2'd0;
		soc_sdram_bankmachine5_cmd_buffer_lookahead_level <= 5'd0;
		soc_sdram_bankmachine5_cmd_buffer_lookahead_produce <= 4'd0;
		soc_sdram_bankmachine5_cmd_buffer_lookahead_consume <= 4'd0;
		soc_sdram_bankmachine5_cmd_buffer_source_valid <= 1'd0;
		soc_sdram_bankmachine5_row <= 13'd0;
		soc_sdram_bankmachine5_row_opened <= 1'd0;
		soc_sdram_bankmachine5_twtpcon_ready <= 1'd1;
		soc_sdram_bankmachine5_twtpcon_count <= 2'd0;
		soc_sdram_bankmachine6_cmd_buffer_lookahead_level <= 5'd0;
		soc_sdram_bankmachine6_cmd_buffer_lookahead_produce <= 4'd0;
		soc_sdram_bankmachine6_cmd_buffer_lookahead_consume <= 4'd0;
		soc_sdram_bankmachine6_cmd_buffer_source_valid <= 1'd0;
		soc_sdram_bankmachine6_row <= 13'd0;
		soc_sdram_bankmachine6_row_opened <= 1'd0;
		soc_sdram_bankmachine6_twtpcon_ready <= 1'd1;
		soc_sdram_bankmachine6_twtpcon_count <= 2'd0;
		soc_sdram_bankmachine7_cmd_buffer_lookahead_level <= 5'd0;
		soc_sdram_bankmachine7_cmd_buffer_lookahead_produce <= 4'd0;
		soc_sdram_bankmachine7_cmd_buffer_lookahead_consume <= 4'd0;
		soc_sdram_bankmachine7_cmd_buffer_source_valid <= 1'd0;
		soc_sdram_bankmachine7_row <= 13'd0;
		soc_sdram_bankmachine7_row_opened <= 1'd0;
		soc_sdram_bankmachine7_twtpcon_ready <= 1'd1;
		soc_sdram_bankmachine7_twtpcon_count <= 2'd0;
		soc_sdram_choose_cmd_grant <= 3'd0;
		soc_sdram_choose_req_grant <= 3'd0;
		soc_sdram_tccdcon_ready <= 1'd1;
		soc_sdram_tccdcon_count <= 1'd0;
		soc_sdram_twtrcon_ready <= 1'd1;
		soc_sdram_twtrcon_count <= 2'd0;
		soc_sdram_time0 <= 5'd0;
		soc_sdram_time1 <= 4'd0;
		soc_address_q <= 30'd0;
		soc_counter <= 1'd0;
		soc_need_refill_q <= 1'd1;
		soc_cached_datas_flipflop0_q <= 32'd0;
		soc_cached_datas_flipflop1_q <= 32'd0;
		soc_cached_sels_flipflop0_q <= 4'd0;
		soc_cached_sels_flipflop1_q <= 4'd0;
		soc_count <= 1'd0;
		soc_init_done_storage <= 1'd0;
		soc_init_done_re <= 1'd0;
		soc_init_error_storage <= 1'd0;
		soc_init_error_re <= 1'd0;
		soc_write_aw_buffer_source_valid <= 1'd0;
		soc_write_beat_count <= 8'd0;
		soc_write_beat_offset <= 12'd0;
		soc_write_w_buffer_readable <= 1'd0;
		soc_write_w_buffer_level0 <= 5'd0;
		soc_write_w_buffer_produce <= 4'd0;
		soc_write_w_buffer_consume <= 4'd0;
		soc_write_id_buffer_level <= 5'd0;
		soc_write_id_buffer_produce <= 4'd0;
		soc_write_id_buffer_consume <= 4'd0;
		soc_write_resp_buffer_level <= 5'd0;
		soc_write_resp_buffer_produce <= 4'd0;
		soc_write_resp_buffer_consume <= 4'd0;
		soc_read_ar_buffer_source_valid <= 1'd0;
		soc_read_beat_count <= 8'd0;
		soc_read_beat_offset <= 12'd0;
		soc_read_r_buffer_readable <= 1'd0;
		soc_read_r_buffer_level0 <= 5'd0;
		soc_read_r_buffer_produce <= 4'd0;
		soc_read_r_buffer_consume <= 4'd0;
		soc_read_r_buffer_level2 <= 5'd0;
		soc_read_id_buffer_level <= 5'd0;
		soc_read_id_buffer_produce <= 4'd0;
		soc_read_id_buffer_consume <= 4'd0;
		soc_grant <= 1'd0;
		vns_wb2csr_state <= 1'd0;
		vns_refresher_state <= 2'd0;
		vns_bankmachine0_state <= 3'd0;
		vns_bankmachine1_state <= 3'd0;
		vns_bankmachine2_state <= 3'd0;
		vns_bankmachine3_state <= 3'd0;
		vns_bankmachine4_state <= 3'd0;
		vns_bankmachine5_state <= 3'd0;
		vns_bankmachine6_state <= 3'd0;
		vns_bankmachine7_state <= 3'd0;
		vns_multiplexer_state <= 4'd0;
		vns_roundrobin0_grant <= 1'd0;
		vns_roundrobin1_grant <= 1'd0;
		vns_roundrobin2_grant <= 1'd0;
		vns_roundrobin3_grant <= 1'd0;
		vns_roundrobin4_grant <= 1'd0;
		vns_roundrobin5_grant <= 1'd0;
		vns_roundrobin6_grant <= 1'd0;
		vns_roundrobin7_grant <= 1'd0;
		vns_new_master_wdata_ready0 <= 1'd0;
		vns_new_master_wdata_ready1 <= 1'd0;
		vns_new_master_wdata_ready2 <= 1'd0;
		vns_new_master_wdata_ready3 <= 1'd0;
		vns_new_master_rdata_valid0 <= 1'd0;
		vns_new_master_rdata_valid1 <= 1'd0;
		vns_new_master_rdata_valid2 <= 1'd0;
		vns_new_master_rdata_valid3 <= 1'd0;
		vns_new_master_rdata_valid4 <= 1'd0;
		vns_new_master_rdata_valid5 <= 1'd0;
		vns_new_master_rdata_valid6 <= 1'd0;
		vns_new_master_rdata_valid7 <= 1'd0;
		vns_new_master_rdata_valid8 <= 1'd0;
		vns_new_master_rdata_valid9 <= 1'd0;
		vns_new_master_rdata_valid10 <= 1'd0;
		vns_new_master_rdata_valid11 <= 1'd0;
		vns_new_master_rdata_valid12 <= 1'd0;
		vns_new_master_rdata_valid13 <= 1'd0;
		vns_new_master_rdata_valid14 <= 1'd0;
		vns_new_master_rdata_valid15 <= 1'd0;
		vns_new_master_rdata_valid16 <= 1'd0;
		vns_new_master_rdata_valid17 <= 1'd0;
		vns_converter_state <= 3'd0;
		vns_litedramwishbone2native_state <= 2'd0;
		vns_grant <= 1'd0;
		vns_slave_sel_r <= 4'd0;
		vns_count <= 20'd1000000;
	end
	vns_regs0 <= serial_rx;
	vns_regs1 <= vns_regs0;
end

reg [31:0] mem[0:6143];
reg [31:0] memdat;
always @(posedge sys_clk) begin
	memdat <= mem[soc_litedramcore_litedramcore_adr];
end

assign soc_litedramcore_litedramcore_dat_r = memdat;

initial begin
	$readmemh("litedram_core.init", mem);
end

reg [31:0] mem_1[0:1023];
reg [9:0] memadr;
always @(posedge sys_clk) begin
	if (soc_litedramcore_ram_we[0])
		mem_1[soc_litedramcore_ram_adr][7:0] <= soc_litedramcore_ram_dat_w[7:0];
	if (soc_litedramcore_ram_we[1])
		mem_1[soc_litedramcore_ram_adr][15:8] <= soc_litedramcore_ram_dat_w[15:8];
	if (soc_litedramcore_ram_we[2])
		mem_1[soc_litedramcore_ram_adr][23:16] <= soc_litedramcore_ram_dat_w[23:16];
	if (soc_litedramcore_ram_we[3])
		mem_1[soc_litedramcore_ram_adr][31:24] <= soc_litedramcore_ram_dat_w[31:24];
	memadr <= soc_litedramcore_ram_adr;
end

assign soc_litedramcore_ram_dat_r = mem_1[memadr];

initial begin
	$readmemh("mem_1.init", mem_1);
end

reg [9:0] storage[0:15];
reg [9:0] memdat_1;
reg [9:0] memdat_2;
always @(posedge sys_clk) begin
	if (soc_litedramcore_uart_tx_fifo_wrport_we)
		storage[soc_litedramcore_uart_tx_fifo_wrport_adr] <= soc_litedramcore_uart_tx_fifo_wrport_dat_w;
	memdat_1 <= storage[soc_litedramcore_uart_tx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (soc_litedramcore_uart_tx_fifo_rdport_re)
		memdat_2 <= storage[soc_litedramcore_uart_tx_fifo_rdport_adr];
end

assign soc_litedramcore_uart_tx_fifo_wrport_dat_r = memdat_1;
assign soc_litedramcore_uart_tx_fifo_rdport_dat_r = memdat_2;

reg [9:0] storage_1[0:15];
reg [9:0] memdat_3;
reg [9:0] memdat_4;
always @(posedge sys_clk) begin
	if (soc_litedramcore_uart_rx_fifo_wrport_we)
		storage_1[soc_litedramcore_uart_rx_fifo_wrport_adr] <= soc_litedramcore_uart_rx_fifo_wrport_dat_w;
	memdat_3 <= storage_1[soc_litedramcore_uart_rx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (soc_litedramcore_uart_rx_fifo_rdport_re)
		memdat_4 <= storage_1[soc_litedramcore_uart_rx_fifo_rdport_adr];
end

assign soc_litedramcore_uart_rx_fifo_wrport_dat_r = memdat_3;
assign soc_litedramcore_uart_rx_fifo_rdport_dat_r = memdat_4;

BUFG BUFG(
	.I(soc_s7pll0_clkout0),
	.O(soc_s7pll0_clkout_buf0)
);

BUFG BUFG_1(
	.I(soc_s7pll0_clkout1),
	.O(soc_s7pll0_clkout_buf1)
);

BUFG BUFG_2(
	.I(soc_s7pll0_clkout2),
	.O(soc_s7pll0_clkout_buf2)
);

BUFG BUFG_3(
	.I(soc_s7pll1_clkout),
	.O(soc_s7pll1_clkout_buf)
);

IDELAYCTRL IDELAYCTRL(
	.REFCLK(iodelay_clk),
	.RST(soc_ic_reset)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(1'd0),
	.D2(1'd1),
	.D3(1'd0),
	.D4(1'd1),
	.D5(1'd0),
	.D6(1'd1),
	.D7(1'd0),
	.D8(1'd1),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(soc_a7ddrphy_sd_clk_se_nodelay)
);

OBUFDS OBUFDS(
	.I(soc_a7ddrphy_sd_clk_se_nodelay),
	.O(ddram_clk_p),
	.OB(ddram_clk_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_1 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[0]),
	.D2(soc_a7ddrphy_dfi_p0_address[0]),
	.D3(soc_a7ddrphy_dfi_p1_address[0]),
	.D4(soc_a7ddrphy_dfi_p1_address[0]),
	.D5(soc_a7ddrphy_dfi_p2_address[0]),
	.D6(soc_a7ddrphy_dfi_p2_address[0]),
	.D7(soc_a7ddrphy_dfi_p3_address[0]),
	.D8(soc_a7ddrphy_dfi_p3_address[0]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_2 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[1]),
	.D2(soc_a7ddrphy_dfi_p0_address[1]),
	.D3(soc_a7ddrphy_dfi_p1_address[1]),
	.D4(soc_a7ddrphy_dfi_p1_address[1]),
	.D5(soc_a7ddrphy_dfi_p2_address[1]),
	.D6(soc_a7ddrphy_dfi_p2_address[1]),
	.D7(soc_a7ddrphy_dfi_p3_address[1]),
	.D8(soc_a7ddrphy_dfi_p3_address[1]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_3 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[2]),
	.D2(soc_a7ddrphy_dfi_p0_address[2]),
	.D3(soc_a7ddrphy_dfi_p1_address[2]),
	.D4(soc_a7ddrphy_dfi_p1_address[2]),
	.D5(soc_a7ddrphy_dfi_p2_address[2]),
	.D6(soc_a7ddrphy_dfi_p2_address[2]),
	.D7(soc_a7ddrphy_dfi_p3_address[2]),
	.D8(soc_a7ddrphy_dfi_p3_address[2]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[2])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_4 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[3]),
	.D2(soc_a7ddrphy_dfi_p0_address[3]),
	.D3(soc_a7ddrphy_dfi_p1_address[3]),
	.D4(soc_a7ddrphy_dfi_p1_address[3]),
	.D5(soc_a7ddrphy_dfi_p2_address[3]),
	.D6(soc_a7ddrphy_dfi_p2_address[3]),
	.D7(soc_a7ddrphy_dfi_p3_address[3]),
	.D8(soc_a7ddrphy_dfi_p3_address[3]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[3])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_5 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[4]),
	.D2(soc_a7ddrphy_dfi_p0_address[4]),
	.D3(soc_a7ddrphy_dfi_p1_address[4]),
	.D4(soc_a7ddrphy_dfi_p1_address[4]),
	.D5(soc_a7ddrphy_dfi_p2_address[4]),
	.D6(soc_a7ddrphy_dfi_p2_address[4]),
	.D7(soc_a7ddrphy_dfi_p3_address[4]),
	.D8(soc_a7ddrphy_dfi_p3_address[4]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[4])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_6 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[5]),
	.D2(soc_a7ddrphy_dfi_p0_address[5]),
	.D3(soc_a7ddrphy_dfi_p1_address[5]),
	.D4(soc_a7ddrphy_dfi_p1_address[5]),
	.D5(soc_a7ddrphy_dfi_p2_address[5]),
	.D6(soc_a7ddrphy_dfi_p2_address[5]),
	.D7(soc_a7ddrphy_dfi_p3_address[5]),
	.D8(soc_a7ddrphy_dfi_p3_address[5]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[5])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_7 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[6]),
	.D2(soc_a7ddrphy_dfi_p0_address[6]),
	.D3(soc_a7ddrphy_dfi_p1_address[6]),
	.D4(soc_a7ddrphy_dfi_p1_address[6]),
	.D5(soc_a7ddrphy_dfi_p2_address[6]),
	.D6(soc_a7ddrphy_dfi_p2_address[6]),
	.D7(soc_a7ddrphy_dfi_p3_address[6]),
	.D8(soc_a7ddrphy_dfi_p3_address[6]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[6])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_8 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[7]),
	.D2(soc_a7ddrphy_dfi_p0_address[7]),
	.D3(soc_a7ddrphy_dfi_p1_address[7]),
	.D4(soc_a7ddrphy_dfi_p1_address[7]),
	.D5(soc_a7ddrphy_dfi_p2_address[7]),
	.D6(soc_a7ddrphy_dfi_p2_address[7]),
	.D7(soc_a7ddrphy_dfi_p3_address[7]),
	.D8(soc_a7ddrphy_dfi_p3_address[7]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[7])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_9 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[8]),
	.D2(soc_a7ddrphy_dfi_p0_address[8]),
	.D3(soc_a7ddrphy_dfi_p1_address[8]),
	.D4(soc_a7ddrphy_dfi_p1_address[8]),
	.D5(soc_a7ddrphy_dfi_p2_address[8]),
	.D6(soc_a7ddrphy_dfi_p2_address[8]),
	.D7(soc_a7ddrphy_dfi_p3_address[8]),
	.D8(soc_a7ddrphy_dfi_p3_address[8]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[8])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_10 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[9]),
	.D2(soc_a7ddrphy_dfi_p0_address[9]),
	.D3(soc_a7ddrphy_dfi_p1_address[9]),
	.D4(soc_a7ddrphy_dfi_p1_address[9]),
	.D5(soc_a7ddrphy_dfi_p2_address[9]),
	.D6(soc_a7ddrphy_dfi_p2_address[9]),
	.D7(soc_a7ddrphy_dfi_p3_address[9]),
	.D8(soc_a7ddrphy_dfi_p3_address[9]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[9])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_11 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[10]),
	.D2(soc_a7ddrphy_dfi_p0_address[10]),
	.D3(soc_a7ddrphy_dfi_p1_address[10]),
	.D4(soc_a7ddrphy_dfi_p1_address[10]),
	.D5(soc_a7ddrphy_dfi_p2_address[10]),
	.D6(soc_a7ddrphy_dfi_p2_address[10]),
	.D7(soc_a7ddrphy_dfi_p3_address[10]),
	.D8(soc_a7ddrphy_dfi_p3_address[10]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[10])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_12 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[11]),
	.D2(soc_a7ddrphy_dfi_p0_address[11]),
	.D3(soc_a7ddrphy_dfi_p1_address[11]),
	.D4(soc_a7ddrphy_dfi_p1_address[11]),
	.D5(soc_a7ddrphy_dfi_p2_address[11]),
	.D6(soc_a7ddrphy_dfi_p2_address[11]),
	.D7(soc_a7ddrphy_dfi_p3_address[11]),
	.D8(soc_a7ddrphy_dfi_p3_address[11]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[11])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_13 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_address[12]),
	.D2(soc_a7ddrphy_dfi_p0_address[12]),
	.D3(soc_a7ddrphy_dfi_p1_address[12]),
	.D4(soc_a7ddrphy_dfi_p1_address[12]),
	.D5(soc_a7ddrphy_dfi_p2_address[12]),
	.D6(soc_a7ddrphy_dfi_p2_address[12]),
	.D7(soc_a7ddrphy_dfi_p3_address[12]),
	.D8(soc_a7ddrphy_dfi_p3_address[12]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_a[12])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_14 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_bank[0]),
	.D2(soc_a7ddrphy_dfi_p0_bank[0]),
	.D3(soc_a7ddrphy_dfi_p1_bank[0]),
	.D4(soc_a7ddrphy_dfi_p1_bank[0]),
	.D5(soc_a7ddrphy_dfi_p2_bank[0]),
	.D6(soc_a7ddrphy_dfi_p2_bank[0]),
	.D7(soc_a7ddrphy_dfi_p3_bank[0]),
	.D8(soc_a7ddrphy_dfi_p3_bank[0]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_ba[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_15 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_bank[1]),
	.D2(soc_a7ddrphy_dfi_p0_bank[1]),
	.D3(soc_a7ddrphy_dfi_p1_bank[1]),
	.D4(soc_a7ddrphy_dfi_p1_bank[1]),
	.D5(soc_a7ddrphy_dfi_p2_bank[1]),
	.D6(soc_a7ddrphy_dfi_p2_bank[1]),
	.D7(soc_a7ddrphy_dfi_p3_bank[1]),
	.D8(soc_a7ddrphy_dfi_p3_bank[1]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_ba[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_16 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_bank[2]),
	.D2(soc_a7ddrphy_dfi_p0_bank[2]),
	.D3(soc_a7ddrphy_dfi_p1_bank[2]),
	.D4(soc_a7ddrphy_dfi_p1_bank[2]),
	.D5(soc_a7ddrphy_dfi_p2_bank[2]),
	.D6(soc_a7ddrphy_dfi_p2_bank[2]),
	.D7(soc_a7ddrphy_dfi_p3_bank[2]),
	.D8(soc_a7ddrphy_dfi_p3_bank[2]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_ba[2])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_17 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_ras_n),
	.D2(soc_a7ddrphy_dfi_p0_ras_n),
	.D3(soc_a7ddrphy_dfi_p1_ras_n),
	.D4(soc_a7ddrphy_dfi_p1_ras_n),
	.D5(soc_a7ddrphy_dfi_p2_ras_n),
	.D6(soc_a7ddrphy_dfi_p2_ras_n),
	.D7(soc_a7ddrphy_dfi_p3_ras_n),
	.D8(soc_a7ddrphy_dfi_p3_ras_n),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_ras_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_18 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_cas_n),
	.D2(soc_a7ddrphy_dfi_p0_cas_n),
	.D3(soc_a7ddrphy_dfi_p1_cas_n),
	.D4(soc_a7ddrphy_dfi_p1_cas_n),
	.D5(soc_a7ddrphy_dfi_p2_cas_n),
	.D6(soc_a7ddrphy_dfi_p2_cas_n),
	.D7(soc_a7ddrphy_dfi_p3_cas_n),
	.D8(soc_a7ddrphy_dfi_p3_cas_n),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_cas_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_19 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_we_n),
	.D2(soc_a7ddrphy_dfi_p0_we_n),
	.D3(soc_a7ddrphy_dfi_p1_we_n),
	.D4(soc_a7ddrphy_dfi_p1_we_n),
	.D5(soc_a7ddrphy_dfi_p2_we_n),
	.D6(soc_a7ddrphy_dfi_p2_we_n),
	.D7(soc_a7ddrphy_dfi_p3_we_n),
	.D8(soc_a7ddrphy_dfi_p3_we_n),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_we_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_20 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_cke),
	.D2(soc_a7ddrphy_dfi_p0_cke),
	.D3(soc_a7ddrphy_dfi_p1_cke),
	.D4(soc_a7ddrphy_dfi_p1_cke),
	.D5(soc_a7ddrphy_dfi_p2_cke),
	.D6(soc_a7ddrphy_dfi_p2_cke),
	.D7(soc_a7ddrphy_dfi_p3_cke),
	.D8(soc_a7ddrphy_dfi_p3_cke),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_cke)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_21 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_odt),
	.D2(soc_a7ddrphy_dfi_p0_odt),
	.D3(soc_a7ddrphy_dfi_p1_odt),
	.D4(soc_a7ddrphy_dfi_p1_odt),
	.D5(soc_a7ddrphy_dfi_p2_odt),
	.D6(soc_a7ddrphy_dfi_p2_odt),
	.D7(soc_a7ddrphy_dfi_p3_odt),
	.D8(soc_a7ddrphy_dfi_p3_odt),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_odt)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_22 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_reset_n),
	.D2(soc_a7ddrphy_dfi_p0_reset_n),
	.D3(soc_a7ddrphy_dfi_p1_reset_n),
	.D4(soc_a7ddrphy_dfi_p1_reset_n),
	.D5(soc_a7ddrphy_dfi_p2_reset_n),
	.D6(soc_a7ddrphy_dfi_p2_reset_n),
	.D7(soc_a7ddrphy_dfi_p3_reset_n),
	.D8(soc_a7ddrphy_dfi_p3_reset_n),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_reset_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_23 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_cs_n),
	.D2(soc_a7ddrphy_dfi_p0_cs_n),
	.D3(soc_a7ddrphy_dfi_p1_cs_n),
	.D4(soc_a7ddrphy_dfi_p1_cs_n),
	.D5(soc_a7ddrphy_dfi_p2_cs_n),
	.D6(soc_a7ddrphy_dfi_p2_cs_n),
	.D7(soc_a7ddrphy_dfi_p3_cs_n),
	.D8(soc_a7ddrphy_dfi_p3_cs_n),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_cs_n)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_24 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata_mask[0]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata_mask[2]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata_mask[0]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata_mask[2]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata_mask[0]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata_mask[2]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata_mask[0]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata_mask[2]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_dm[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_25 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata_mask[1]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata_mask[3]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata_mask[1]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata_mask[3]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata_mask[1]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata_mask[3]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata_mask[1]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata_mask[3]),
	.OCE(1'd1),
	.RST(sys_rst),
	.OQ(ddram_dm[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_26 (
	.CLK(sys2x_dqs_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dqspattern_o1[0]),
	.D2(soc_a7ddrphy_dqspattern_o1[1]),
	.D3(soc_a7ddrphy_dqspattern_o1[2]),
	.D4(soc_a7ddrphy_dqspattern_o1[3]),
	.D5(soc_a7ddrphy_dqspattern_o1[4]),
	.D6(soc_a7ddrphy_dqspattern_o1[5]),
	.D7(soc_a7ddrphy_dqspattern_o1[6]),
	.D8(soc_a7ddrphy_dqspattern_o1[7]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dqs_oe_delayed)),
	.TCE(1'd1),
	.OFB(soc_a7ddrphy0),
	.OQ(soc_a7ddrphy_dqs_o_no_delay0),
	.TQ(soc_a7ddrphy_dqs_t0)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("FIXED"),
	.IDELAY_VALUE(5'd16),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2 (
	.IDATAIN(soc_a7ddrphy_dqs_i[0]),
	.DATAOUT(soc_a7ddrphy_dqs_i_delayed[0])
);

IOBUFDS IOBUFDS(
	.I(soc_a7ddrphy_dqs_o_no_delay0),
	.T(soc_a7ddrphy_dqs_t0),
	.IO(ddram_dqs_p[0]),
	.IOB(ddram_dqs_n[0]),
	.O(soc_a7ddrphy_dqs_i[0])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_27 (
	.CLK(sys2x_dqs_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dqspattern_o1[0]),
	.D2(soc_a7ddrphy_dqspattern_o1[1]),
	.D3(soc_a7ddrphy_dqspattern_o1[2]),
	.D4(soc_a7ddrphy_dqspattern_o1[3]),
	.D5(soc_a7ddrphy_dqspattern_o1[4]),
	.D6(soc_a7ddrphy_dqspattern_o1[5]),
	.D7(soc_a7ddrphy_dqspattern_o1[6]),
	.D8(soc_a7ddrphy_dqspattern_o1[7]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dqs_oe_delayed)),
	.TCE(1'd1),
	.OFB(soc_a7ddrphy1),
	.OQ(soc_a7ddrphy_dqs_o_no_delay1),
	.TQ(soc_a7ddrphy_dqs_t1)
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("FIXED"),
	.IDELAY_VALUE(5'd16),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_1 (
	.IDATAIN(soc_a7ddrphy_dqs_i[1]),
	.DATAOUT(soc_a7ddrphy_dqs_i_delayed[1])
);

IOBUFDS IOBUFDS_1(
	.I(soc_a7ddrphy_dqs_o_no_delay1),
	.T(soc_a7ddrphy_dqs_t1),
	.IO(ddram_dqs_p[1]),
	.IOB(ddram_dqs_n[1]),
	.O(soc_a7ddrphy_dqs_i[1])
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_28 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[0]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[16]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[0]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[16]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[0]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[16]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[0]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[16]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay0),
	.TQ(soc_a7ddrphy_dq_t0)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed0),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data0[7]),
	.Q2(soc_a7ddrphy_dq_i_data0[6]),
	.Q3(soc_a7ddrphy_dq_i_data0[5]),
	.Q4(soc_a7ddrphy_dq_i_data0[4]),
	.Q5(soc_a7ddrphy_dq_i_data0[3]),
	.Q6(soc_a7ddrphy_dq_i_data0[2]),
	.Q7(soc_a7ddrphy_dq_i_data0[1]),
	.Q8(soc_a7ddrphy_dq_i_data0[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_2 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay0),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed0)
);

IOBUF IOBUF(
	.I(soc_a7ddrphy_dq_o_nodelay0),
	.T(soc_a7ddrphy_dq_t0),
	.IO(ddram_dq[0]),
	.O(soc_a7ddrphy_dq_i_nodelay0)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_29 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[1]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[17]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[1]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[17]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[1]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[17]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[1]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[17]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay1),
	.TQ(soc_a7ddrphy_dq_t1)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_1 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed1),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data1[7]),
	.Q2(soc_a7ddrphy_dq_i_data1[6]),
	.Q3(soc_a7ddrphy_dq_i_data1[5]),
	.Q4(soc_a7ddrphy_dq_i_data1[4]),
	.Q5(soc_a7ddrphy_dq_i_data1[3]),
	.Q6(soc_a7ddrphy_dq_i_data1[2]),
	.Q7(soc_a7ddrphy_dq_i_data1[1]),
	.Q8(soc_a7ddrphy_dq_i_data1[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_3 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay1),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed1)
);

IOBUF IOBUF_1(
	.I(soc_a7ddrphy_dq_o_nodelay1),
	.T(soc_a7ddrphy_dq_t1),
	.IO(ddram_dq[1]),
	.O(soc_a7ddrphy_dq_i_nodelay1)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_30 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[2]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[18]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[2]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[18]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[2]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[18]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[2]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[18]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay2),
	.TQ(soc_a7ddrphy_dq_t2)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_2 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed2),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data2[7]),
	.Q2(soc_a7ddrphy_dq_i_data2[6]),
	.Q3(soc_a7ddrphy_dq_i_data2[5]),
	.Q4(soc_a7ddrphy_dq_i_data2[4]),
	.Q5(soc_a7ddrphy_dq_i_data2[3]),
	.Q6(soc_a7ddrphy_dq_i_data2[2]),
	.Q7(soc_a7ddrphy_dq_i_data2[1]),
	.Q8(soc_a7ddrphy_dq_i_data2[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_4 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay2),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed2)
);

IOBUF IOBUF_2(
	.I(soc_a7ddrphy_dq_o_nodelay2),
	.T(soc_a7ddrphy_dq_t2),
	.IO(ddram_dq[2]),
	.O(soc_a7ddrphy_dq_i_nodelay2)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_31 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[3]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[19]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[3]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[19]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[3]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[19]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[3]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[19]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay3),
	.TQ(soc_a7ddrphy_dq_t3)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_3 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed3),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data3[7]),
	.Q2(soc_a7ddrphy_dq_i_data3[6]),
	.Q3(soc_a7ddrphy_dq_i_data3[5]),
	.Q4(soc_a7ddrphy_dq_i_data3[4]),
	.Q5(soc_a7ddrphy_dq_i_data3[3]),
	.Q6(soc_a7ddrphy_dq_i_data3[2]),
	.Q7(soc_a7ddrphy_dq_i_data3[1]),
	.Q8(soc_a7ddrphy_dq_i_data3[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_5 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay3),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed3)
);

IOBUF IOBUF_3(
	.I(soc_a7ddrphy_dq_o_nodelay3),
	.T(soc_a7ddrphy_dq_t3),
	.IO(ddram_dq[3]),
	.O(soc_a7ddrphy_dq_i_nodelay3)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_32 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[4]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[20]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[4]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[20]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[4]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[20]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[4]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[20]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay4),
	.TQ(soc_a7ddrphy_dq_t4)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_4 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed4),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data4[7]),
	.Q2(soc_a7ddrphy_dq_i_data4[6]),
	.Q3(soc_a7ddrphy_dq_i_data4[5]),
	.Q4(soc_a7ddrphy_dq_i_data4[4]),
	.Q5(soc_a7ddrphy_dq_i_data4[3]),
	.Q6(soc_a7ddrphy_dq_i_data4[2]),
	.Q7(soc_a7ddrphy_dq_i_data4[1]),
	.Q8(soc_a7ddrphy_dq_i_data4[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_6 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay4),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed4)
);

IOBUF IOBUF_4(
	.I(soc_a7ddrphy_dq_o_nodelay4),
	.T(soc_a7ddrphy_dq_t4),
	.IO(ddram_dq[4]),
	.O(soc_a7ddrphy_dq_i_nodelay4)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_33 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[5]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[21]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[5]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[21]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[5]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[21]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[5]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[21]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay5),
	.TQ(soc_a7ddrphy_dq_t5)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_5 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed5),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data5[7]),
	.Q2(soc_a7ddrphy_dq_i_data5[6]),
	.Q3(soc_a7ddrphy_dq_i_data5[5]),
	.Q4(soc_a7ddrphy_dq_i_data5[4]),
	.Q5(soc_a7ddrphy_dq_i_data5[3]),
	.Q6(soc_a7ddrphy_dq_i_data5[2]),
	.Q7(soc_a7ddrphy_dq_i_data5[1]),
	.Q8(soc_a7ddrphy_dq_i_data5[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_7 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay5),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed5)
);

IOBUF IOBUF_5(
	.I(soc_a7ddrphy_dq_o_nodelay5),
	.T(soc_a7ddrphy_dq_t5),
	.IO(ddram_dq[5]),
	.O(soc_a7ddrphy_dq_i_nodelay5)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_34 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[6]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[22]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[6]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[22]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[6]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[22]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[6]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[22]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay6),
	.TQ(soc_a7ddrphy_dq_t6)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_6 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed6),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data6[7]),
	.Q2(soc_a7ddrphy_dq_i_data6[6]),
	.Q3(soc_a7ddrphy_dq_i_data6[5]),
	.Q4(soc_a7ddrphy_dq_i_data6[4]),
	.Q5(soc_a7ddrphy_dq_i_data6[3]),
	.Q6(soc_a7ddrphy_dq_i_data6[2]),
	.Q7(soc_a7ddrphy_dq_i_data6[1]),
	.Q8(soc_a7ddrphy_dq_i_data6[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_8 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay6),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed6)
);

IOBUF IOBUF_6(
	.I(soc_a7ddrphy_dq_o_nodelay6),
	.T(soc_a7ddrphy_dq_t6),
	.IO(ddram_dq[6]),
	.O(soc_a7ddrphy_dq_i_nodelay6)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_35 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[7]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[23]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[7]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[23]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[7]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[23]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[7]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[23]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay7),
	.TQ(soc_a7ddrphy_dq_t7)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_7 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed7),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data7[7]),
	.Q2(soc_a7ddrphy_dq_i_data7[6]),
	.Q3(soc_a7ddrphy_dq_i_data7[5]),
	.Q4(soc_a7ddrphy_dq_i_data7[4]),
	.Q5(soc_a7ddrphy_dq_i_data7[3]),
	.Q6(soc_a7ddrphy_dq_i_data7[2]),
	.Q7(soc_a7ddrphy_dq_i_data7[1]),
	.Q8(soc_a7ddrphy_dq_i_data7[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_9 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay7),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[0] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed7)
);

IOBUF IOBUF_7(
	.I(soc_a7ddrphy_dq_o_nodelay7),
	.T(soc_a7ddrphy_dq_t7),
	.IO(ddram_dq[7]),
	.O(soc_a7ddrphy_dq_i_nodelay7)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_36 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[8]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[24]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[8]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[24]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[8]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[24]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[8]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[24]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay8),
	.TQ(soc_a7ddrphy_dq_t8)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_8 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed8),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data8[7]),
	.Q2(soc_a7ddrphy_dq_i_data8[6]),
	.Q3(soc_a7ddrphy_dq_i_data8[5]),
	.Q4(soc_a7ddrphy_dq_i_data8[4]),
	.Q5(soc_a7ddrphy_dq_i_data8[3]),
	.Q6(soc_a7ddrphy_dq_i_data8[2]),
	.Q7(soc_a7ddrphy_dq_i_data8[1]),
	.Q8(soc_a7ddrphy_dq_i_data8[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_10 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay8),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed8)
);

IOBUF IOBUF_8(
	.I(soc_a7ddrphy_dq_o_nodelay8),
	.T(soc_a7ddrphy_dq_t8),
	.IO(ddram_dq[8]),
	.O(soc_a7ddrphy_dq_i_nodelay8)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_37 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[9]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[25]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[9]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[25]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[9]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[25]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[9]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[25]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay9),
	.TQ(soc_a7ddrphy_dq_t9)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_9 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed9),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data9[7]),
	.Q2(soc_a7ddrphy_dq_i_data9[6]),
	.Q3(soc_a7ddrphy_dq_i_data9[5]),
	.Q4(soc_a7ddrphy_dq_i_data9[4]),
	.Q5(soc_a7ddrphy_dq_i_data9[3]),
	.Q6(soc_a7ddrphy_dq_i_data9[2]),
	.Q7(soc_a7ddrphy_dq_i_data9[1]),
	.Q8(soc_a7ddrphy_dq_i_data9[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_11 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay9),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed9)
);

IOBUF IOBUF_9(
	.I(soc_a7ddrphy_dq_o_nodelay9),
	.T(soc_a7ddrphy_dq_t9),
	.IO(ddram_dq[9]),
	.O(soc_a7ddrphy_dq_i_nodelay9)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_38 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[10]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[26]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[10]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[26]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[10]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[26]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[10]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[26]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay10),
	.TQ(soc_a7ddrphy_dq_t10)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_10 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed10),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data10[7]),
	.Q2(soc_a7ddrphy_dq_i_data10[6]),
	.Q3(soc_a7ddrphy_dq_i_data10[5]),
	.Q4(soc_a7ddrphy_dq_i_data10[4]),
	.Q5(soc_a7ddrphy_dq_i_data10[3]),
	.Q6(soc_a7ddrphy_dq_i_data10[2]),
	.Q7(soc_a7ddrphy_dq_i_data10[1]),
	.Q8(soc_a7ddrphy_dq_i_data10[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_12 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay10),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed10)
);

IOBUF IOBUF_10(
	.I(soc_a7ddrphy_dq_o_nodelay10),
	.T(soc_a7ddrphy_dq_t10),
	.IO(ddram_dq[10]),
	.O(soc_a7ddrphy_dq_i_nodelay10)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_39 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[11]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[27]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[11]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[27]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[11]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[27]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[11]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[27]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay11),
	.TQ(soc_a7ddrphy_dq_t11)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_11 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed11),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data11[7]),
	.Q2(soc_a7ddrphy_dq_i_data11[6]),
	.Q3(soc_a7ddrphy_dq_i_data11[5]),
	.Q4(soc_a7ddrphy_dq_i_data11[4]),
	.Q5(soc_a7ddrphy_dq_i_data11[3]),
	.Q6(soc_a7ddrphy_dq_i_data11[2]),
	.Q7(soc_a7ddrphy_dq_i_data11[1]),
	.Q8(soc_a7ddrphy_dq_i_data11[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_13 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay11),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed11)
);

IOBUF IOBUF_11(
	.I(soc_a7ddrphy_dq_o_nodelay11),
	.T(soc_a7ddrphy_dq_t11),
	.IO(ddram_dq[11]),
	.O(soc_a7ddrphy_dq_i_nodelay11)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_40 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[12]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[28]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[12]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[28]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[12]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[28]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[12]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[28]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay12),
	.TQ(soc_a7ddrphy_dq_t12)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_12 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed12),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data12[7]),
	.Q2(soc_a7ddrphy_dq_i_data12[6]),
	.Q3(soc_a7ddrphy_dq_i_data12[5]),
	.Q4(soc_a7ddrphy_dq_i_data12[4]),
	.Q5(soc_a7ddrphy_dq_i_data12[3]),
	.Q6(soc_a7ddrphy_dq_i_data12[2]),
	.Q7(soc_a7ddrphy_dq_i_data12[1]),
	.Q8(soc_a7ddrphy_dq_i_data12[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_14 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay12),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed12)
);

IOBUF IOBUF_12(
	.I(soc_a7ddrphy_dq_o_nodelay12),
	.T(soc_a7ddrphy_dq_t12),
	.IO(ddram_dq[12]),
	.O(soc_a7ddrphy_dq_i_nodelay12)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_41 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[13]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[29]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[13]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[29]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[13]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[29]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[13]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[29]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay13),
	.TQ(soc_a7ddrphy_dq_t13)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_13 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed13),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data13[7]),
	.Q2(soc_a7ddrphy_dq_i_data13[6]),
	.Q3(soc_a7ddrphy_dq_i_data13[5]),
	.Q4(soc_a7ddrphy_dq_i_data13[4]),
	.Q5(soc_a7ddrphy_dq_i_data13[3]),
	.Q6(soc_a7ddrphy_dq_i_data13[2]),
	.Q7(soc_a7ddrphy_dq_i_data13[1]),
	.Q8(soc_a7ddrphy_dq_i_data13[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_15 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay13),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed13)
);

IOBUF IOBUF_13(
	.I(soc_a7ddrphy_dq_o_nodelay13),
	.T(soc_a7ddrphy_dq_t13),
	.IO(ddram_dq[13]),
	.O(soc_a7ddrphy_dq_i_nodelay13)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_42 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[14]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[30]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[14]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[30]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[14]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[30]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[14]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[30]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay14),
	.TQ(soc_a7ddrphy_dq_t14)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_14 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed14),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data14[7]),
	.Q2(soc_a7ddrphy_dq_i_data14[6]),
	.Q3(soc_a7ddrphy_dq_i_data14[5]),
	.Q4(soc_a7ddrphy_dq_i_data14[4]),
	.Q5(soc_a7ddrphy_dq_i_data14[3]),
	.Q6(soc_a7ddrphy_dq_i_data14[2]),
	.Q7(soc_a7ddrphy_dq_i_data14[1]),
	.Q8(soc_a7ddrphy_dq_i_data14[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_16 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay14),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed14)
);

IOBUF IOBUF_14(
	.I(soc_a7ddrphy_dq_o_nodelay14),
	.T(soc_a7ddrphy_dq_t14),
	.IO(ddram_dq[14]),
	.O(soc_a7ddrphy_dq_i_nodelay14)
);

OSERDESE2 #(
	.DATA_RATE_OQ("DDR"),
	.DATA_RATE_TQ("BUF"),
	.DATA_WIDTH(3'd4),
	.SERDES_MODE("MASTER"),
	.TRISTATE_WIDTH(1'd1)
) OSERDESE2_43 (
	.CLK(sys2x_clk),
	.CLKDIV(sys_clk),
	.D1(soc_a7ddrphy_dfi_p0_wrdata[15]),
	.D2(soc_a7ddrphy_dfi_p0_wrdata[31]),
	.D3(soc_a7ddrphy_dfi_p1_wrdata[15]),
	.D4(soc_a7ddrphy_dfi_p1_wrdata[31]),
	.D5(soc_a7ddrphy_dfi_p2_wrdata[15]),
	.D6(soc_a7ddrphy_dfi_p2_wrdata[31]),
	.D7(soc_a7ddrphy_dfi_p3_wrdata[15]),
	.D8(soc_a7ddrphy_dfi_p3_wrdata[31]),
	.OCE(1'd1),
	.RST(sys_rst),
	.T1((~soc_a7ddrphy_dq_oe_delayed)),
	.TCE(1'd1),
	.OQ(soc_a7ddrphy_dq_o_nodelay15),
	.TQ(soc_a7ddrphy_dq_t15)
);

ISERDESE2 #(
	.DATA_RATE("DDR"),
	.DATA_WIDTH(3'd4),
	.INTERFACE_TYPE("NETWORKING"),
	.IOBDELAY("IFD"),
	.NUM_CE(1'd1),
	.SERDES_MODE("MASTER")
) ISERDESE2_15 (
	.BITSLIP(1'd0),
	.CE1(1'd1),
	.CLK(sys2x_clk),
	.CLKB((~sys2x_clk)),
	.CLKDIV(sys_clk),
	.DDLY(soc_a7ddrphy_dq_i_delayed15),
	.RST(sys_rst),
	.Q1(soc_a7ddrphy_dq_i_data15[7]),
	.Q2(soc_a7ddrphy_dq_i_data15[6]),
	.Q3(soc_a7ddrphy_dq_i_data15[5]),
	.Q4(soc_a7ddrphy_dq_i_data15[4]),
	.Q5(soc_a7ddrphy_dq_i_data15[3]),
	.Q6(soc_a7ddrphy_dq_i_data15[2]),
	.Q7(soc_a7ddrphy_dq_i_data15[1]),
	.Q8(soc_a7ddrphy_dq_i_data15[0])
);

IDELAYE2 #(
	.CINVCTRL_SEL("FALSE"),
	.DELAY_SRC("IDATAIN"),
	.HIGH_PERFORMANCE_MODE("TRUE"),
	.IDELAY_TYPE("VARIABLE"),
	.IDELAY_VALUE(1'd0),
	.PIPE_SEL("FALSE"),
	.REFCLK_FREQUENCY(200.0),
	.SIGNAL_PATTERN("DATA")
) IDELAYE2_17 (
	.C(sys_clk),
	.CE((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_inc_re)),
	.IDATAIN(soc_a7ddrphy_dq_i_nodelay15),
	.INC(1'd1),
	.LD((soc_a7ddrphy_dly_sel_storage[1] & soc_a7ddrphy_rdly_dq_rst_re)),
	.LDPIPEEN(1'd0),
	.DATAOUT(soc_a7ddrphy_dq_i_delayed15)
);

IOBUF IOBUF_15(
	.I(soc_a7ddrphy_dq_o_nodelay15),
	.T(soc_a7ddrphy_dq_t15),
	.IO(ddram_dq[15]),
	.O(soc_a7ddrphy_dq_i_nodelay15)
);

reg [23:0] storage_2[0:15];
reg [23:0] memdat_5;
always @(posedge sys_clk) begin
	if (soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_we)
		storage_2[soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr] <= soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_w;
	memdat_5 <= storage_2[soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_sdram_bankmachine0_cmd_buffer_lookahead_wrport_dat_r = memdat_5;
assign soc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_dat_r = storage_2[soc_sdram_bankmachine0_cmd_buffer_lookahead_rdport_adr];

reg [23:0] storage_3[0:15];
reg [23:0] memdat_6;
always @(posedge sys_clk) begin
	if (soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_we)
		storage_3[soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr] <= soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_w;
	memdat_6 <= storage_3[soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_sdram_bankmachine1_cmd_buffer_lookahead_wrport_dat_r = memdat_6;
assign soc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_dat_r = storage_3[soc_sdram_bankmachine1_cmd_buffer_lookahead_rdport_adr];

reg [23:0] storage_4[0:15];
reg [23:0] memdat_7;
always @(posedge sys_clk) begin
	if (soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_we)
		storage_4[soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr] <= soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_w;
	memdat_7 <= storage_4[soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_sdram_bankmachine2_cmd_buffer_lookahead_wrport_dat_r = memdat_7;
assign soc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_dat_r = storage_4[soc_sdram_bankmachine2_cmd_buffer_lookahead_rdport_adr];

reg [23:0] storage_5[0:15];
reg [23:0] memdat_8;
always @(posedge sys_clk) begin
	if (soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_we)
		storage_5[soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr] <= soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_w;
	memdat_8 <= storage_5[soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_sdram_bankmachine3_cmd_buffer_lookahead_wrport_dat_r = memdat_8;
assign soc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_dat_r = storage_5[soc_sdram_bankmachine3_cmd_buffer_lookahead_rdport_adr];

reg [23:0] storage_6[0:15];
reg [23:0] memdat_9;
always @(posedge sys_clk) begin
	if (soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_we)
		storage_6[soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr] <= soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_w;
	memdat_9 <= storage_6[soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_sdram_bankmachine4_cmd_buffer_lookahead_wrport_dat_r = memdat_9;
assign soc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_dat_r = storage_6[soc_sdram_bankmachine4_cmd_buffer_lookahead_rdport_adr];

reg [23:0] storage_7[0:15];
reg [23:0] memdat_10;
always @(posedge sys_clk) begin
	if (soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_we)
		storage_7[soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr] <= soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_w;
	memdat_10 <= storage_7[soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_sdram_bankmachine5_cmd_buffer_lookahead_wrport_dat_r = memdat_10;
assign soc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_dat_r = storage_7[soc_sdram_bankmachine5_cmd_buffer_lookahead_rdport_adr];

reg [23:0] storage_8[0:15];
reg [23:0] memdat_11;
always @(posedge sys_clk) begin
	if (soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_we)
		storage_8[soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr] <= soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_w;
	memdat_11 <= storage_8[soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_sdram_bankmachine6_cmd_buffer_lookahead_wrport_dat_r = memdat_11;
assign soc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_dat_r = storage_8[soc_sdram_bankmachine6_cmd_buffer_lookahead_rdport_adr];

reg [23:0] storage_9[0:15];
reg [23:0] memdat_12;
always @(posedge sys_clk) begin
	if (soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_we)
		storage_9[soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr] <= soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_w;
	memdat_12 <= storage_9[soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_sdram_bankmachine7_cmd_buffer_lookahead_wrport_dat_r = memdat_12;
assign soc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_dat_r = storage_9[soc_sdram_bankmachine7_cmd_buffer_lookahead_rdport_adr];

reg [79:0] storage_10[0:15];
reg [79:0] memdat_13;
reg [79:0] memdat_14;
always @(posedge sys_clk) begin
	if (soc_write_w_buffer_wrport_we)
		storage_10[soc_write_w_buffer_wrport_adr] <= soc_write_w_buffer_wrport_dat_w;
	memdat_13 <= storage_10[soc_write_w_buffer_wrport_adr];
end

always @(posedge sys_clk) begin
	if (soc_write_w_buffer_rdport_re)
		memdat_14 <= storage_10[soc_write_w_buffer_rdport_adr];
end

assign soc_write_w_buffer_wrport_dat_r = memdat_13;
assign soc_write_w_buffer_rdport_dat_r = memdat_14;

reg [7:0] storage_11[0:15];
reg [7:0] memdat_15;
always @(posedge sys_clk) begin
	if (soc_write_id_buffer_wrport_we)
		storage_11[soc_write_id_buffer_wrport_adr] <= soc_write_id_buffer_wrport_dat_w;
	memdat_15 <= storage_11[soc_write_id_buffer_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_write_id_buffer_wrport_dat_r = memdat_15;
assign soc_write_id_buffer_rdport_dat_r = storage_11[soc_write_id_buffer_rdport_adr];

reg [9:0] storage_12[0:15];
reg [9:0] memdat_16;
always @(posedge sys_clk) begin
	if (soc_write_resp_buffer_wrport_we)
		storage_12[soc_write_resp_buffer_wrport_adr] <= soc_write_resp_buffer_wrport_dat_w;
	memdat_16 <= storage_12[soc_write_resp_buffer_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_write_resp_buffer_wrport_dat_r = memdat_16;
assign soc_write_resp_buffer_rdport_dat_r = storage_12[soc_write_resp_buffer_rdport_adr];

reg [73:0] storage_13[0:15];
reg [73:0] memdat_17;
reg [73:0] memdat_18;
always @(posedge sys_clk) begin
	if (soc_read_r_buffer_wrport_we)
		storage_13[soc_read_r_buffer_wrport_adr] <= soc_read_r_buffer_wrport_dat_w;
	memdat_17 <= storage_13[soc_read_r_buffer_wrport_adr];
end

always @(posedge sys_clk) begin
	if (soc_read_r_buffer_rdport_re)
		memdat_18 <= storage_13[soc_read_r_buffer_rdport_adr];
end

assign soc_read_r_buffer_wrport_dat_r = memdat_17;
assign soc_read_r_buffer_rdport_dat_r = memdat_18;

reg [7:0] storage_14[0:15];
reg [7:0] memdat_19;
always @(posedge sys_clk) begin
	if (soc_read_id_buffer_wrport_we)
		storage_14[soc_read_id_buffer_wrport_adr] <= soc_read_id_buffer_wrport_dat_w;
	memdat_19 <= storage_14[soc_read_id_buffer_wrport_adr];
end

always @(posedge sys_clk) begin
end

assign soc_read_id_buffer_wrport_dat_r = memdat_19;
assign soc_read_id_buffer_rdport_dat_r = storage_14[soc_read_id_buffer_rdport_adr];

serv_rf_top #(
	.RESET_PC(1'd0)
) serv_rf_top (
	.clk(sys_clk),
	.i_dbus_ack(soc_litedramcore_serv_dbus_ack),
	.i_dbus_rdt(soc_litedramcore_serv_dbus_dat_r),
	.i_ibus_ack(soc_litedramcore_serv_ibus_ack),
	.i_ibus_rdt(soc_litedramcore_serv_ibus_dat_r),
	.i_rst((sys_rst | soc_litedramcore_serv_reset)),
	.i_timer_irq(1'd0),
	.o_dbus_adr({soc_litedramcore_serv_dbus_adr, soc_litedramcore_serv1}),
	.o_dbus_cyc(soc_litedramcore_serv_dbus_cyc),
	.o_dbus_dat(soc_litedramcore_serv_dbus_dat_w),
	.o_dbus_sel(soc_litedramcore_serv_dbus_sel),
	.o_dbus_we(soc_litedramcore_serv_dbus_we),
	.o_ibus_adr({soc_litedramcore_serv_ibus_adr, soc_litedramcore_serv0}),
	.o_ibus_cyc(soc_litedramcore_serv_ibus_cyc)
);

PLLE2_ADV #(
	.CLKFBOUT_MULT(5'd16),
	.CLKIN1_PERIOD(10.0),
	.CLKOUT0_DIVIDE(5'd16),
	.CLKOUT0_PHASE(1'd0),
	.CLKOUT1_DIVIDE(4'd8),
	.CLKOUT1_PHASE(1'd0),
	.CLKOUT2_DIVIDE(4'd8),
	.CLKOUT2_PHASE(7'd90),
	.DIVCLK_DIVIDE(1'd1),
	.REF_JITTER1(0.01),
	.STARTUP_WAIT("FALSE")
) PLLE2_ADV (
	.CLKFBIN(vns_pll_fb0),
	.CLKIN1(soc_s7pll0_clkin),
	.RST(soc_sys_pll_reset),
	.CLKFBOUT(vns_pll_fb0),
	.CLKOUT0(soc_s7pll0_clkout0),
	.CLKOUT1(soc_s7pll0_clkout1),
	.CLKOUT2(soc_s7pll0_clkout2),
	.LOCKED(soc_sys_pll_locked)
);

PLLE2_ADV #(
	.CLKFBOUT_MULT(5'd16),
	.CLKIN1_PERIOD(10.0),
	.CLKOUT0_DIVIDE(4'd8),
	.CLKOUT0_PHASE(1'd0),
	.DIVCLK_DIVIDE(1'd1),
	.REF_JITTER1(0.01),
	.STARTUP_WAIT("FALSE")
) PLLE2_ADV_1 (
	.CLKFBIN(vns_pll_fb1),
	.CLKIN1(soc_s7pll1_clkin),
	.RST(soc_iodelay_pll_reset),
	.CLKFBOUT(vns_pll_fb1),
	.CLKOUT0(soc_s7pll1_clkout),
	.LOCKED(soc_iodelay_pll_locked)
);

(* ars_ff1 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE (
	.C(sys_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(vns_xilinxasyncresetsynchronizerimpl0),
	.Q(vns_xilinxasyncresetsynchronizerimpl0_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_1 (
	.C(sys_clk),
	.CE(1'd1),
	.D(vns_xilinxasyncresetsynchronizerimpl0_rst_meta),
	.PRE(vns_xilinxasyncresetsynchronizerimpl0),
	.Q(sys_rst)
);

(* ars_ff1 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_2 (
	.C(sys2x_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(vns_xilinxasyncresetsynchronizerimpl1),
	.Q(vns_xilinxasyncresetsynchronizerimpl1_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_3 (
	.C(sys2x_clk),
	.CE(1'd1),
	.D(vns_xilinxasyncresetsynchronizerimpl1_rst_meta),
	.PRE(vns_xilinxasyncresetsynchronizerimpl1),
	.Q(vns_xilinxasyncresetsynchronizerimpl1_expr)
);

(* ars_ff1 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_4 (
	.C(sys2x_dqs_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(vns_xilinxasyncresetsynchronizerimpl2),
	.Q(vns_xilinxasyncresetsynchronizerimpl2_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_5 (
	.C(sys2x_dqs_clk),
	.CE(1'd1),
	.D(vns_xilinxasyncresetsynchronizerimpl2_rst_meta),
	.PRE(vns_xilinxasyncresetsynchronizerimpl2),
	.Q(vns_xilinxasyncresetsynchronizerimpl2_expr)
);

(* ars_ff1 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_6 (
	.C(iodelay_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(vns_xilinxasyncresetsynchronizerimpl3),
	.Q(vns_xilinxasyncresetsynchronizerimpl3_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *) FDPE #(
	.INIT(1'd1)
) FDPE_7 (
	.C(iodelay_clk),
	.CE(1'd1),
	.D(vns_xilinxasyncresetsynchronizerimpl3_rst_meta),
	.PRE(vns_xilinxasyncresetsynchronizerimpl3),
	.Q(iodelay_rst)
);

endmodule
